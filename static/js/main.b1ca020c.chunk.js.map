{"version":3,"sources":["config/publications.js","actions/types.js","notification/NotificationToaster.js","notification/notificationReduxFunctions.js","api/api.js","api/index.js","images/layout_1.png","images/layout_2.png","images/layout_3.png","components/shared/styledComponents.js","components/dashboard/TemplateSelector.js","actions/website.js","components/dashboard/webpage/WebpageDelete.js","components/dashboard/webpage/WebpageSelector.js","components/shared/ConditionalWrapper.js","components/dashboard/webpage/Webpages.js","config/deploy.js","actions/auth.js","actions/team.js","components/dashboard/deploy/DeployPage.js","components/dashboard/Dashboard.js","images/profilepic.jpg","components/profileInfoEdit/ProfileInfoEdit.js","actions/publications.js","components/publications/form/MainInfoPage.js","components/publications/form/CategoryPage.js","components/publications/form/PublicationForm.js","components/publications/importedPublication/ImportedPublication.js","components/shared/usePagination.js","components/publications/form/ImportSuccessPage.js","components/publications/form/ImportFailPage.js","components/publications/form/ProfileLinkPage.js","components/publications/form/ImportForm.js","components/publications/publicationsLayout/PublicationsEditor.js","components/publications/publication/Publication.js","components/publications/publicationsLayout/GroupByNone.js","components/publications/publicationsLayout/GroupByCategory.js","components/publications/Publications.js","components/publications/PublicationPage.js","components/teamPage/form/TeamMemberForm.js","components/teamPage/TeamMember.js","components/teamPage/TeamPage.js","components/achievements/form/AchievementForm.js","actions/achievements.js","components/achievements/Achievement.js","components/achievements/AchievementPage.js","components/twitter/TwitterFeed.js","components/twitter/TwitterLink.js","components/clientHomeEditor/ClientHomeEditor.js","actions/homepage.js","components/clientHomeEditor/ClientHomeEditorPage.jsx","components/layouts/layoutComponents/Sidebar.js","components/layouts/layoutComponents/HeaderProfileThumbnail.js","components/layouts/layoutComponents/Header.js","components/layouts/DashboardSidebarData.js","components/shared/LogoutModal.js","components/layouts/dashboardLayout/DashboardLayout.js","components/layouts/dashboardLayout/DashboardLayoutRoute.js","components/route/PrivateRoute.js","components/landing-pages/utils/Divider.jsx","components/landing-pages/theme.js","components/landing-pages/utils/StyledTabButton.jsx","components/landing-pages/landingPageComponents/AboutUs.jsx","images/intro.svg","components/landing-pages/landingPageComponents/BigIntro.jsx","components/landing-pages/data/landing-page-labels.js","components/landing-pages/landingPageComponents/Description.jsx","components/landing-pages/landingPageComponents/Features.jsx","components/landing-pages/landingPageComponents/landingPageLayouts/AuthButtons.jsx","components/landing-pages/utils/StyledHeaderLink.jsx","components/landing-pages/landingPageComponents/landingPageLayouts/LandingHeader.jsx","components/landing-pages/utils/Copyright.jsx","components/landing-pages/landingPageComponents/landingPageLayouts/Footer.jsx","components/landing-pages/landingPageComponents/landingPageLayouts/LandingLayout.jsx","components/landing-pages/LandingPage.jsx","components/auth/authComponents/AuthBackground.jsx","components/auth/authComponents/RegisterButton.jsx","components/auth/authComponents/AuthHeader.jsx","components/auth/authComponents/AuthFooter.jsx","components/auth/AuthLayout.jsx","components/auth/authComponents/LoginForm.jsx","components/auth/LoginPage.jsx","components/auth/authComponents/LoginButton.jsx","components/auth/authComponents/RegistrationForm.jsx","components/auth/RegistrationPage.jsx","components/route/PublicRoute.js","components/App.js","reducers/authReducer.js","reducers/publicationsReducer.js","reducers/teamReducer.js","reducers/importedPublicationsReducer.js","reducers/teamMembersReducer.js","reducers/websiteReducer.js","reducers/notificationReducer.js","reducers/deployReducer.js","reducers/achievementsReducer.js","reducers/homepageReducer.js","reducers/index.js","store.js","index.js","config/clientWebsite.js"],"names":["module","exports","pageSize","categoryPageSize","categoryTypes","Journal","Conference","Book","Other","groupByOptions","NONE","CATEGORY","sortingOptions","TITLE","AUTHOR","YEAR","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAIL","LOG_OUT","GET_PUBLICATIONS_BY_TEAM_ID","CREATE_PUBLICATION","UPDATE_PUBLICATION","DELETE_PUBLICATION","CREATE_BULK_PUBLICATIONS","CHECK_PUBLICATIONS","UNCHECK_PUBLICATIONS","DELETE_BATCH_PUBLICATIONS","REVERT_HEADER_COLOR","FETCH_TEAM_INFO","LINK_TEAM_TWITTER","UNLINK_TEAM_TWITTER","UPDATE_TEAM","IMPORT_REQUEST","IMPORT_SUCCESS","IMPORT_FAIL","IMPORT_CLEAR_STATE","UPDATE_GSCHOLAR_ID","IMPORT_END","IMPORT_EMPTY","UPDATE_PUBLICATIONS_TO_IMPORT","GET_TEAM_MEMBERS_BY_TEAM_ID","CREATE_TEAM_MEMBER","UPDATE_TEAM_MEMBER","DELETE_TEAM_MEMBER","GET_GH_ACCESS_TOKEN","DEPLOY_REQUEST","DEPLOY_SUCCESS","DEPLOY_FAIL","CREATE_WEBSITE","ADD_WEBPAGE","DELETE_WEBPAGE","FETCH_WEBSITE_INFO","UPDATE_PUBLICATION_OPTIONS","UPDATE_WEBSITE_TITLE","UPDATE_WEBSITE_TEMPLATE","FETCH_HOMEPAGE","UPDATE_HOMEPAGE","TEAM_ERROR","RESEARCHIFY_API_ERROR","CLEAR_NOTIFICATION","SUCCESS_MESSAGE","GET_ACHIEVEMENTS_BY_TEAM_ID","CREATE_ACHIEVEMENT","UPDATE_ACHIEVEMENT","DELETE_ACHIEVEMENT","NotificationToaster","useSelector","state","notification","error","success","dispatch","useDispatch","useEffect","toast","data","type","errorReducer","action","res","payload","response","errors","status","statusText","errorActionGlobalCreator","successMessageCreator","successMessage","axios","create","baseURL","fetchPublicationsByTeamId","teamId","api","get","updatePublication","id","updatedPublication","patch","deletePublication","delete","createBulkPublications","publicationList","post","importPublications","authorId","startFrom","deleteBatchPublications","publicationIdList","createTeam","teamInfo","registerTwitterHandle","handle","deregisterTwitterHandle","emptyHandle","getTeamJWT","fetchTeamMembersByTeamId","createTeamMember","newTeamMember","deleteTeamMember","teamMemberId","updateTeam","updatedTeam","getGHAccessToken","code","deployToGHPages","body","addWebPage","pageName","getWebsiteInfo","deleteWebPage","updateClientWebMetadata","changes","fetchAchievementsByTeamId","updateAchievement","updatedAchievement","deleteAchievement","getHomepage","createOrUpdateHomepage","homepageData","PrimaryButton","styled","button","props","fontSize","SecondaryButton","DangerButton","OptionEditButton","RedDeleteButton","TemplateSelector","template","website","useState","theme","darkThemePlaceholder","darkMode","setDarkMode","layout","setLayout","updateSelections","form","target","name","value","storeInputs","lightThemePlaceholder","templateData","a","field","updateTheme","Form","Check","checked","onChange","label","className","noValidate","onSubmit","event","currentTarget","preventDefault","checkValidity","stopPropagation","Group","controlId","Label","Container","fluid","Row","Col","xs","xl","sm","htmlFor","inline","Card","border","Img","src","layout1","style","width","height","layout2","layout3","WebpageDelete","selectedPage","setSelectedPage","pagePlaceholder","closeModal","displayModal","Modal","show","onHide","centered","size","Header","closeButton","Title","Body","Footer","variant","onClick","apiBody","err","deletePage","defaultProps","WebpageSelector","currentWebPages","webpageOfferings","pages","filter","page","includes","displayButton","setDisplayButton","DropdownButton","title","onSelect","e","map","Dropdown","Item","eventKey","disabled","addPage","ConditionalWrapper","condition","wrapper","children","Webpages","directToAnotherPage","availablePages","loading","displayDeleteModal","setDeleteModal","displayPageModal","setDisplayPageModal","disableAddButton","setDisableAddButton","renderDisableAddButtonTooltip","Tooltip","length","promptDeleteConfirmation","OverlayTrigger","placement","overlay","display","cursor","pointerEvents","Spinner","animation","Table","striped","bordered","hover","webPage","githubClientId","login","authData","setFieldError","teamCredentials","logout","teamDataAllocator","teamData","_id","email","teamName","orgName","profilePic","twitterHandle","repoCreated","retrievedAccessToken","themeId","GHButton","GitHubLogin","DeployPage","deploy","team","GitHubLoginButton","clientId","scope","onSuccess","localStorage","setItem","access_token","onFailure","redirectUri","DeployButton","accessToken","getItem","teamPublications","newTeamPubs","pub","yearPublished","substring","teamMembers","teamHomepage","teamSiteMetadata","teamAchievements","ghToken","Dashboard","history","useHistory","currentTab","setCurrentTab","Tabs","defaultActiveKey","k","transition","Tab","push","ProfileInfoEdit","profileData","setProfileData","updateInputs","defaultProfilePic","validated","setValidated","Image","roundedCircle","Control","accept","reader","FileReader","file","files","onload","result","readAsDataURL","multiple","placeholder","defaultValue","required","color","float","pageNo","reachedEnd","newPublications","retrieved","MainInfoPage","next","stepOneValidationSchema","yup","min","authors","of","description","link","url","year","Date","getFullYear","years","Array","from","val","index","renderTooltip","renderAuthors","values","touched","handleChange","setValues","author","InputGroup","isInvalid","Append","Button","newAuthors","splice","Feedback","enableReinitialize","validationSchema","initialValues","handleSubmit","as","row","eachYear","trigger","undefined","CategoryPage","prev","stepTwoValidationSchema","category","categoryTitle","volume","issue","publisher","placeholderText","JOURNAL","CONFERENCE","BOOK","Volume","Issue","Pages","Publisher","ButtonGroup","toggle","Object","keys","ToggleButton","toUpperCase","charAt","slice","toLowerCase","PublicationForm","toString","setData","currentStep","setCurrentStep","submitForm","newData","publication","newPublication","isNewlyAdded","createPublication","handleNextStep","final","ImportedPublication","setChecked","expand","setExpand","publicationsToImport","importedPublications","publications","dropDown","Collapse","in","href","window","open","indexOf","Subtitle","join","ArrowButton","usePagination","itemPerPage","currentPage","setCurrentPage","maxPage","Math","ceil","currentData","start","end","dataOnCurrentPage","nextPage","prevPage","max","pagination","paddingBottom","ImportSuccessPage","gScholarId","checkPublication","chosenPublication","globalIndex","newCheckArray","renderNoPublicationsSelectedTooltip","renderEndOfPublicationsTooltip","handleClose","idx","justifyContent","checkedPublications","i","createdPublications","ImportFailPage","Alert","ProfileLinkPage","profileLink","position","validation","Prepend","Text","ImportForm","importStatus","displayResult","StyledButtonGroup","div","ButtonGroupItem","borderColor","hoverBorderColor","hoverColor","press","StyledDropdownToggle","Toggle","StyledDropdowItem","PublicationsEditor","options","setOptions","sortPublications","setShowCreateForm","setShowImportForm","md","Menu","groupBy","sortBy","preference","updatePublicationOptions","Publication","newlyAdded","setNewlyAdded","showUpdateForm","setShowUpdateForm","showDeleteMessage","setShowDeleteMessage","isHovering","setIsHovering","setInterval","handleMouseOver","handleMouseLeave","handleCheck","onMouseOver","onFocus","onMouseLeave","onBlur","paddingTop","paddingLeft","rel","GroupByNone","configPageSize","checkAll","setCheckAll","checkedCounter","setCheckedCounter","count","forEach","padding","GroupByCategory","setCheckedPublicationId","renderPublicationsByCategory","categoryType","publicationsByCategory","setCheckedPublications","Publications","publicationOptions","showCreateForm","showImportForm","setPublications","getPublicationsByTeamId","renderPublications","useCallback","publicationToBeSorted","option","sort","b","sortedPublication","newlyAddedPublications","setTimeout","Jumbotron","minHeight","marginTop","PublicationPage","TeamMemberForm","member","fullName","summary","teamMember","updatedTeamMember","TeamMember","displayOptions","backgroundColor","data-toggle","bg","span","offset","rootClose","Provider","alignSelf","memberId","TeamPage","getTeamMembersByTeamId","CardDeck","flexDirection","AchievementForm","achievement","yearAwarded","newAchievement","createAchievement","Achievement","AchievementPage","getAchievementsByTeamId","achievements","styles","twitterFeed","alignItems","borderWidth","borderStyle","borderRadius","twitterTimelineHeight","windowHeight","innerHeight","TwitterFeed","dataSource","sourceType","screenName","TwitterLink","isLoading","setIsLoading","trim","linkTwitter","ClientHomeEditor","aboutUs","homepage","homepageValues","getHomepageDataByTeamId","updatedHomepage","updateHomepage","splittedValue","split","rows","ClientHomeEditorPage","leftCol","rightCol","maxWidth","linkedHandle","Sidebar","location","useLocation","to","onKeyPress","pathname","icon","HeaderProfileThumbnail","React","forwardRef","ref","propTypes","PropTypes","object","isRequired","func","setLogoutAlert","Navbar","fixed","Brand","dashboardURL","Nav","drop","alignRight","Divider","active","DashboardSidebarData","sidebarLinks","pagesAdded","pageInfo","LogoutModal","logoutAlert","headerData","profileURL","DashboardLayout","DashboardLayoutRoute","Component","component","rest","render","routeProps","PrivateRoute","signInCookie","Cookies","path","exact","minWidth","margin","background","Box","StyledTab","classes","selected","colour","StyledComponentsTab","TabPanel","other","Typography","role","hidden","aria-labelledby","lineHeight","a11yProps","AboutUs","isMobile","useMediaQuery","makeStyles","root","flexGrow","container","borderedCard","boxShadow","useStyles","setValue","Grid","justify","direction","item","fontWeight","textAlign","invert","orientation","newValue","aria-label","StyledButtonLink","AnchorLink","DiscoverButtonLink","Content","lg","IntroImage","alt","BigIntro","top","array","boxes","headerLinks","aboutDescription","featuresData","logo","Description","crophover","marginBottom","golden","white","palette","secondary","main","zIndex","FlippingCard","isFlipped","setIsFlipped","flipDirection","Paper","paper","Features","control","spacing","AuthButtons","textDecoration","HeaderLink","StyledHeaderLink","linksAreShown","isOpen","setIsOpen","prevScrollpos","pageYOffset","navbar","document","getElementById","onscroll","maxScroll","clientHeight","currentScrollPos","hideAndShowNavBar","light","sticky","NavbarBrand","NavbarToggler","h","NavItem","Copyright","align","Link","middle","verticalAlign","LandingLayout","LandingHeader","LandingPage","match","createTheme","primary","typography","ThemeProvider","AuthBackground","RegisterButton","AuthHeader","left","AuthFooter","bottom","AuthLayout","LoginForm","teamInfoSchema","password","LoginPage","LoginButton","whiteSpace","StringPasswordHint","Popover","RegistrationForm","matches","confirmedPassword","oneOf","RegistrationPage","PublicRoute","App","logIn","auth","clientWebsiteData","reverseOrder","INITIAL_AUTH_STATE","authReducer","initialState","publicationsReducer","concat","unchecks","checkedPub","find","uncheck","deletedPubIds","updatedlist","INITIAL_TEAM_STATE","teamReducer","importedPublicationReducer","fill","teamMembersReducer","INITIAL_WEBSITE_STATE","websiteReducer","INITIAL_NOTIFICATION_STATE","notificationReducer","INITIAL_DEPLOY_STATE","deployReducer","achievementsReducer","INITIAL_HOMEPAGE_STATE","homepageReducer","appReducer","combineReducers","importedPublicationsReducer","rootReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","thunk","ReactDOM"],"mappings":"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","file":"static/js/main.b1ca020c.chunk.js","sourcesContent":["/**\n * This module contains the configurations relating to importing publications from the backend.\n */\nconst pageSize = 10;\nconst categoryPageSize = 5;\nconst categoryTypes = {\n  Journal: 'Journal',\n  Conference: 'Conference',\n  Book: 'Book',\n  Other: 'Other',\n};\nconst groupByOptions = {\n  NONE: 'None',\n  CATEGORY: 'Category',\n};\nconst sortingOptions = {\n  TITLE: 'Title',\n  AUTHOR: 'Author',\n  YEAR: 'Year',\n};\nmodule.exports = {\n  pageSize, categoryPageSize, categoryTypes, groupByOptions, sortingOptions,\n};\n","/**\n * This file houses our Action Creator type constants.\n */\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport const LOG_IN_FAIL = 'LOG_IN_FAIL';\nexport const LOG_OUT = 'LOG_OUT';\n\nexport const GET_PUBLICATIONS_BY_TEAM_ID = 'GET_PUBLICATIONS_BY_TEAM_ID';\nexport const CREATE_PUBLICATION = 'CREATE_PUBLICATION';\nexport const UPDATE_PUBLICATION = 'UPDATE_PUBLICATION';\nexport const DELETE_PUBLICATION = 'DELETE_PUBLICATION';\nexport const SORT_PUBLICATIONS = 'SORT_PUBLICATION';\nexport const CREATE_BULK_PUBLICATIONS = 'CREATE_BULK_PUBLICATIONS';\nexport const CHECK_PUBLICATIONS = 'CHECK_PUBLICATIONS';\nexport const UNCHECK_PUBLICATIONS = 'UNCHECK_PUBLICATIONS';\nexport const DELETE_BATCH_PUBLICATIONS = 'DELETE_BATCH_PUBLICATIONS';\nexport const REVERT_HEADER_COLOR = 'REVERT_HEADER_COLOR';\n\nexport const FETCH_TEAM_INFO = 'FETCH_TEAM_INFO';\nexport const LINK_TEAM_TWITTER = 'LINK_TEAM_TWITTER';\nexport const UNLINK_TEAM_TWITTER = 'UNLINK_TEAM_TWITTER';\nexport const UPDATE_TEAM = 'UPDATE_TEAM';\n\nexport const IMPORT_REQUEST = 'IMPORT_REQUEST';\nexport const IMPORT_SUCCESS = 'IMPORT_SUCCESS';\nexport const IMPORT_FAIL = 'IMPORT_FAIL'; // todo: check this one with PUBLICATION_ERROR\nexport const IMPORT_CLEAR_STATE = 'IMPORT_CLEAR_STATE';\nexport const UPDATE_GSCHOLAR_ID = 'UPDATE_GSCHOLAR_ID';\nexport const IMPORT_END = 'IMPORT_END';\nexport const IMPORT_EMPTY = 'IMPORT_EMPTY';\nexport const UPDATE_PUBLICATIONS_TO_IMPORT = 'UPDATE_PUBLICATIONS_TO_IMPORT';\n\nexport const GET_TEAM_MEMBERS_BY_TEAM_ID = 'GET_TEAM_MEMBERS_BY_TEAM_ID';\nexport const CREATE_TEAM_MEMBER = 'CREATE_TEAM_MEMBER';\nexport const UPDATE_TEAM_MEMBER = 'UPDATE_TEAM_MEMBER';\nexport const DELETE_TEAM_MEMBER = 'DELETE_TEAM_MEMBER';\nexport const GET_GH_ACCESS_TOKEN = 'GET_GH_ACCESS_TOKEN';\nexport const DEPLOY_REQUEST = 'DEPLOY_REQUEST';\nexport const DEPLOY_SUCCESS = 'DEPLOY_SUCCESS';\nexport const DEPLOY_FAIL = 'DEPLOY_FAIL';\n\nexport const CREATE_WEBSITE = 'CREATE_WEBSITE';\nexport const DELETE_WEBSITE = 'DELETE_WEBSITE';\nexport const ADD_WEBPAGE = 'ADD_WEBPAGE';\nexport const DELETE_WEBPAGE = 'DELETE_WEBPAGE';\nexport const FETCH_WEBSITE_INFO = 'FETCH_WEBSITE_INFO';\nexport const UPDATE_PUBLICATION_OPTIONS = 'UPDATE_PUBLICATION_OPTIONS';\nexport const UPDATE_WEBSITE_TITLE = 'UPDATE_WEBSITE_TITLE';\nexport const UPDATE_WEBSITE_TEMPLATE = 'UPDATE_WEBSITE_TEMPLATE';\n\nexport const FETCH_HOMEPAGE = 'FETCH_HOMEPAGE';\nexport const UPDATE_HOMEPAGE = 'UPDATE_HOMEPAGE';\n\n// NOTIFICATIONS\nexport const TEAM_ERROR = 'TEAM_ERROR'; // use this if you want to create specific error handling\nexport const PUBLICATION_ERROR = 'PUBLICATION_ERROR'; // use this if you want to create specific error handling\nexport const RESEARCHIFY_API_ERROR = 'RESEARCHIFY_API_ERROR';\nexport const CLEAR_NOTIFICATION = 'CLEAR_NOTIFICATION';\nexport const SUCCESS_MESSAGE = 'SUCCESS_MESSAGE';\n\nexport const GET_ACHIEVEMENTS_BY_TEAM_ID = 'GET_ACHIEVEMENTS_BY_TEAM_ID';\nexport const CREATE_ACHIEVEMENT = 'CREATE_ACHIEVEMENT';\nexport const UPDATE_ACHIEVEMENT = 'UPDATE_ACHIEVEMENT';\nexport const DELETE_ACHIEVEMENT = 'DELETE_ACHIEVEMENT';\n","/**\n * a toaster component\n * @returns null if no notification, otherwise empty fragment.\n */\n\nimport React, { useEffect } from 'react';\nimport toast from 'react-hot-toast';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { CLEAR_NOTIFICATION } from '../actions/types';\n\nconst NotificationToaster = () => {\n  const { error, success } = useSelector((state) => state.notification);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (error) {\n      toast.error(error.data);\n    } else if (success) {\n      toast.success(success);\n    }\n    dispatch({\n      type: CLEAR_NOTIFICATION,\n    });\n  }, [error, success]);\n\n  return <></>;\n};\n\nexport default NotificationToaster;\n","/**\n * This file exports notification related function and actions.\n */\n\nimport { RESEARCHIFY_API_ERROR, SUCCESS_MESSAGE } from '../actions/types';\n\nexport const DEFAULT_ERROR_MESSAGE = 'Something went wrong!';\n\nexport const errorReducer = (state, action) => {\n  if (!action.error) {\n    return {\n      ...state,\n      error: null,\n    };\n  }\n  const res = action.payload.response;\n  return {\n    ...state,\n    error: {\n      data: res.data !== '' ? res.data.errors[0] : DEFAULT_ERROR_MESSAGE,\n      status: res.status,\n      statusText: res.statusText,\n    },\n  };\n};\n\nexport const errorActionGlobalCreator = (error) => ({\n  type: RESEARCHIFY_API_ERROR,\n  error: true,\n  payload: error,\n});\n\nexport const successMessageCreator = (successMessage) => ({\n  type: SUCCESS_MESSAGE,\n  payload: successMessage,\n});\n","/**\n * This file exports a custom axios client for our own API server which handles all requests to the server.\n *\n * @note: If this React client is being served by a reverse proxy, the localServerUrl is used as a *relative*\n * URL to point to the \"/api\" route, and the reverse proxy is expected to proxy the request to the API server.\n * see: https://developer.mozilla.org/en-US/docs/Learn/Common_questions/What_is_a_URL#absolute_urls_vs_relative_urls\n */\nimport axios from 'axios';\n\n// const usingRp = true;\nconst localServerUrl = 'http://researchify-env.eba-wjxcgupn.ap-southeast-2.elasticbeanstalk.com/api';\nexport default axios.create({\n  baseURL: localServerUrl,\n});\n","/**\n * This file uses the custom axios client and defines the possible requests that can be made.\n */\nimport api from './api';\n\n// Publication endpoints.\nexport const fetchPublicationsByTeamId = (teamId) => api.get(`/publications/team/${teamId}`);\nexport const createPublication = (newPublication) => api.post('/publications/', newPublication);\nexport const updatePublication = (id, updatedPublication) => api.patch(`/publications/${id}`, updatedPublication);\nexport const deletePublication = (id) => api.delete(`/publications/${id}`);\nexport const createBulkPublications = (teamId, publicationList) => api.post(`/publications/import/${teamId}`, publicationList);\nexport const importPublications = (authorId, startFrom, teamId) => api.get(`/publications/import/${authorId}/${startFrom}/validate/${teamId}`);\nexport const deleteBatchPublications = (publicationIdList) => api.patch('/publications/', publicationIdList);\n\n// Team endpoints.\nexport const createTeam = (teamInfo) => api.post('/team', teamInfo);\nexport const fetchTeamInfo = (teamId) => api.get(`/team/${teamId}`);\nexport const registerTwitterHandle = (teamId, handle) => api.patch(`/team/${teamId}/twitter-handle`, handle);\nexport const deregisterTwitterHandle = (teamId, emptyHandle) => api.patch(`/team/${teamId}/twitter-handle`, emptyHandle);\nexport const getTeamJWT = () => api.get('/team');\nexport const fetchTeamMembersByTeamId = (teamId) => api.get(`/team/${teamId}/member`);\nexport const createTeamMember = (teamId, newTeamMember) => api.post(`/team/${teamId}/member`, newTeamMember);\nexport const updateTeamMember = (teamId, updatedTeamMember) => api.patch(`/team/${teamId}/member`, updatedTeamMember);\nexport const deleteTeamMember = (teamId, teamMemberId) => api.delete(`/team/${teamId}/member/${teamMemberId}`);\nexport const updateTeam = (teamId, updatedTeam) => api.patch(`/team/${teamId}`, updatedTeam);\nexport const getGHAccessToken = (teamId, code) => api.get(`/team/${teamId}/gh_auth/${code}`);\nexport const deployToGHPages = (teamId, body) => api.post(`/team/${teamId}/deploy`, body);\n\n// Theme endpoints.\nexport const findOrCreateTheme = (themeData) => api.post('/theme', themeData);\n\n// Website endpoints.\nexport const addWebPage = (teamId, pageName) => api.post(`/clientWebsite/${teamId}/add_page`, pageName);\nexport const getWebsiteInfo = (teamId) => api.get(`/clientWebsite/${teamId}`);\nexport const deleteWebPage = (teamId, pageName) => api.post(`/clientWebsite/${teamId}/delete_page`, pageName);\nexport const updateClientWebMetadata = (teamId, changes) => api.patch(`/clientWebsite/${teamId}`, changes);\n\n// Achievement endpoints.\nexport const fetchAchievementsByTeamId = (teamId) => api.get(`/achievements/team/${teamId}`);\nexport const createAchievement = (newAchievement) => api.post('/achievements/', newAchievement);\nexport const updateAchievement = (id, updatedAchievement) => api.patch(`/achievements/${id}`, updatedAchievement);\nexport const deleteAchievement = (id) => api.delete(`/achievements/${id}`);\n\n// Auth endpoints.\nexport const loginTeam = (teamCredentials) => api.post('/auth/login', teamCredentials);\nexport const logoutTeam = () => api.post('/auth/logout');\n\n// Client Homepage endpoints.\nexport const getHomepage = (teamId) => api.get(`/homepage/${teamId}`);\nexport const createOrUpdateHomepage = (teamId, homepageData) => api.post(`/homepage/${teamId}`, homepageData);\n","export default __webpack_public_path__ + \"static/media/layout_1.076ffe8e.png\";","export default __webpack_public_path__ + \"static/media/layout_2.12624777.png\";","export default __webpack_public_path__ + \"static/media/layout_3.7ca1fb1f.png\";","import styled from 'styled-components';\n\n// eslint-disable-next-line import/prefer-default-export\n// export const PrimaryButton = styled.button` // Bootstrap Blue\n//     border: 1px solid transparent;\n//     padding: .375rem .75rem;\n//     border-radius: .25rem;\n//     border-color: #007bff;\n//     background-color: #007bff;\n//     color: white;\n//     transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n//     font-size: ${(props) => props.fontSize}; //.875rem;\n//   &:hover{\n//     background-color: #0069d9;\n//   }\n// `;\n\nexport const PrimaryButton = styled.button` // Purple\n    padding: .375rem .75rem;\n    border: 1px solid #56658a;\n    border-radius: .25rem;\n    background-color: #56658a;\n    color: white;\n    transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n    font-size: ${(props) => props.fontSize}; //.875rem;\n  &:hover{\n    background-color:rgb(60, 70, 96);\n  }\n`;\n\n// export const SecondaryButton = styled.button` // Outline-Gold\n//     padding: .375rem .75rem;\n//     border: 1px solid #AB9671;\n//     border-radius: .25rem;\n//     background-color: inherit;\n//     color: #AB9671;\n//     transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n//     font-size: ${(props) => props.fontSize}; //.875rem;\n//   &:hover{\n//     background-color:rgb(119, 105, 79);\n//     color: white;\n//   }\n// `;\n\n// export const PrimaryButton = styled.button` // Gold\n//     padding: .375rem .75rem;\n//     border: 1px solid #AB9671;\n//     border-radius: .25rem;\n//     background-color: #AB9671;\n//     color: white;\n//     transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n//     font-size: ${(props) => props.fontSize}; //.875rem;\n//   &:hover{\n//     background-color: rgb(119, 105, 79);\n//   }\n// `;\n\nexport const SecondaryButton = styled.button` // Outline-Purple\n    padding: .375rem .75rem;\n    border: 1px solid #56658a;\n    border-radius: .25rem;\n    background-color: transparent;\n    color: #56658a;\n    transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n    font-size: ${(props) => props.fontSize}; //.875rem;\n  &:hover{\n    background-color:rgb(60, 70, 96);\n    color: white;\n  }\n`;\n\nexport const DangerButton = styled.button`\n    padding: .375rem .75rem;\n    border-radius: .25rem;\n    border: 1px solid #dc3545;\n    background-color: inherit;\n    color: #dc3545;\n    transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n  &:hover{\n    background-color: #dc3545;\n    color: white;\n  }\n`;\n\nexport const OptionEditButton = styled.button` // Blue with a darker blue background when hovering\n    padding: .375rem .75rem;\n    border: 1px solid rgb(60, 70, 96);\n    border-radius: .25rem;\n    background-color: rgb(88, 102, 138);\n    color: white;\n    transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n    font-size: ${(props) => props.fontSize}; //.875rem;\n  &:hover{\n    background-color: rgb(60, 70, 96);\n    color: white;\n  }\n`;\n\nexport const RedDeleteButton = styled.button` // Red with darker red background when hovering\n    padding: .375rem .75rem;\n    border: 1px solid #9e2833;\n    border-radius: .25rem;\n    background-color: #dc3545;\n    color: white;\n    transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n    font-size: ${(props) => props.fontSize}; //.875rem;\n  &:hover{\n    background-color: #9e2833;\n  }\n`;\n","/**\n * This file exports a pop up window, that prompts user\n * to select a theme in Researchify dashboard page.\n */\nimport React, { useState, useEffect } from 'react';\nimport {\n  Container, Form, Col, Card,\n} from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { PropTypes } from 'prop-types';\nimport { updateTheme } from '../../actions/website';\nimport { darkThemePlaceholder, lightThemePlaceholder } from '../../config/clientWebsite';\n\n// Picture of each layout\nimport layout1 from '../../images/layout_1.png';\nimport layout2 from '../../images/layout_2.png';\nimport layout3 from '../../images/layout_3.png';\n\nimport { PrimaryButton } from '../shared/styledComponents';\n\n/**\n * Form for user input github credentials and select template.\n */\nconst TemplateSelector = (props) => {\n  const dispatch = useDispatch();\n  const template = useSelector((state) => state.website.template);\n\n  const [darkMode, setDarkMode] = useState(template.theme === darkThemePlaceholder);\n  const [layout, setLayout] = useState(template.layout);\n\n  useEffect(() => {\n    setDarkMode(template.theme === darkThemePlaceholder);\n    setLayout(template.layout);\n  }, [template]);\n\n  const updateSelections = (form) => {\n    const { name, value } = form.target;\n    if (name === 'layout') {\n      setLayout(value);\n    }\n  };\n\n  const storeInputs = (teamId) => {\n    const data = {\n      layout,\n      theme: darkMode ? darkThemePlaceholder : lightThemePlaceholder,\n    };\n    dispatch(updateTheme(teamId, data));\n  };\n\n  const handleSubmit = (event) => {\n    const form = event.currentTarget;\n    event.preventDefault();\n    if (form.checkValidity() === false) {\n      event.stopPropagation();\n    } else {\n      storeInputs(props.teamId);\n    }\n  };\n\n  return (\n    <>\n      <b>Choose a Theme</b>\n      <Form.Check\n        type=\"switch\"\n        id=\"custom-switch\"\n        checked={darkMode}\n        onChange={() => setDarkMode(!darkMode)}\n        label=\"Use Dark mode\"\n        className=\"ml-3 mt-2\"\n      />\n\n      <Form\n        className=\"researchify-github-form mt-4\"\n        noValidate\n        onSubmit={handleSubmit}\n      >\n\n        <Form.Group controlId=\"layout\">\n          <Form.Label><b>Select a Layout</b></Form.Label>\n          <Container fluid>\n            <Form.Row>\n              <Col className=\"layout-display\" xs={12} xl={4} sm={6}>\n                {/* eslint-disable-next-line jsx-a11y/label-has-associated-control */}\n                <label htmlFor=\"layout1\">\n                  <Form.Check\n                    checked={layout === '1'}\n                    inline\n                    id=\"layout1\"\n                    type=\"radio\"\n                    label=\"Layout 1\"\n                    name=\"layout\"\n                    value={1}\n                    className=\"form-radio-text\"\n                    onChange={updateSelections}\n                  />\n                  <Card border=\"dark\" className=\"mt-3\">\n                    <Card.Img\n                      src={layout1}\n                      style={{ width: '18rem', height: '12rem' }}\n                      className=\"img-fluid\"\n                    />\n                  </Card>\n                </label>\n              </Col>\n              <Col className=\"layout-display\" xs={12} xl={4} sm={6}>\n                {/* eslint-disable-next-line jsx-a11y/label-has-associated-control */}\n                <label htmlFor=\"layout2\">\n                  <Form.Check\n                    checked={layout === '2'}\n                    inline\n                    id=\"layout2\"\n                    type=\"radio\"\n                    label=\"Layout 2\"\n                    name=\"layout\"\n                    value={2}\n                    className=\"form-radio-text\"\n                    onChange={updateSelections}\n                  />\n                  <Card border=\"dark\" className=\"mt-3\">\n                    <Card.Img\n                      src={layout2}\n                      style={{ width: '18rem', height: '12rem' }}\n                      className=\"img-fluid\"\n                    />\n                  </Card>\n                </label>\n              </Col>\n              <Col className=\"layout-display\" xs={12} xl={4} sm={12}>\n                {/* eslint-disable-next-line jsx-a11y/label-has-associated-control */}\n                <label htmlFor=\"layout3\">\n                  <Form.Check\n                    checked={layout === '3'}\n                    inline\n                    id=\"layout3\"\n                    type=\"radio\"\n                    label=\"Layout 3\"\n                    name=\"layout\"\n                    value={3}\n                    className=\"form-radio-text\"\n                    onChange={updateSelections}\n                  />\n                  <Card border=\"dark\" className=\"mt-3\">\n                    <Card.Img\n                      src={layout3}\n                      style={{ width: '18rem', height: '12rem' }}\n                      className=\"img-fluid\"\n                    />\n                  </Card>\n                </label>\n              </Col>\n            </Form.Row>\n          </Container>\n        </Form.Group>\n\n        <PrimaryButton id=\"submitButton\" type=\"submit\">\n          Update\n        </PrimaryButton>\n      </Form>\n    </>\n  );\n};\n\n// props validation\nTemplateSelector.propTypes = {\n  teamId: PropTypes.string.isRequired,\n};\n\nexport default TemplateSelector;\n","/**\n * This file houses Action Creaters for client website\n */\nimport {\n  CREATE_WEBSITE,\n  DELETE_WEBSITE,\n  ADD_WEBPAGE,\n  DELETE_WEBPAGE,\n  UPDATE_PUBLICATION_OPTIONS,\n  UPDATE_WEBSITE_TITLE,\n  UPDATE_WEBSITE_TEMPLATE,\n} from './types';\nimport { errorActionGlobalCreator, successMessageCreator } from '../notification/notificationReduxFunctions';\nimport * as api from '../api';\n\n/**\n * Action called when 'create website' button is clicked\n */\nexport const createWebsite = () => ({\n  type: CREATE_WEBSITE,\n});\n\n/**\n * Action called when user choose to delete the website\n */\nexport const deleteWebsite = () => ({\n  type: DELETE_WEBSITE,\n});\n\n/**\n * Adds a new client web-page to redux store and database.\n * @param teamInfo contains teamName, orgName and email\n */\nexport const addPage = (teamId, pageName) => async (dispatch) => {\n  try {\n    const apiBody = {\n      pageName,\n    };\n    await api.addWebPage(teamId, apiBody);\n\n    dispatch({\n      type: ADD_WEBPAGE,\n      payload: pageName,\n    });\n  } catch (err) {\n    dispatch(errorActionGlobalCreator(err));\n  }\n};\n\n/**\n * Deletes info about a client's web-page from redux store and database.\n * @param teamInfo contains teamName, orgName and email\n */\nexport const deletePage = (teamId, pageName) => async (dispatch) => {\n  const apiBody = {\n    pageName,\n  };\n  try {\n    api.deleteWebPage(teamId, apiBody);\n    dispatch({\n      type: DELETE_WEBPAGE,\n      payload: pageName,\n    });\n  } catch (err) {\n    dispatch(errorActionGlobalCreator(err));\n  }\n};\n\nexport const updatePublicationOptions = (teamId, preference) => async (dispatch) => {\n  try {\n    const changes = [{ field: 'publicationOptions', value: preference }];\n    const { data } = await api.updateClientWebMetadata(teamId, changes);\n    dispatch({\n      type: UPDATE_PUBLICATION_OPTIONS,\n      payload: data,\n    });\n    dispatch(successMessageCreator('Preference has been updated.'));\n  } catch (err) {\n    dispatch(errorActionGlobalCreator(err));\n  }\n};\n\nexport const updateWebsiteTitle = (teamId, website) => async (dispatch) => {\n  try {\n    const change = { title: website.websiteTitle };\n    await api.updateClientWebMetadata(teamId, change);\n    dispatch({\n      type: UPDATE_WEBSITE_TITLE,\n      payload: website.websiteTitle,\n    });\n    dispatch(successMessageCreator('Title has been updated.'));\n  } catch (err) {\n    dispatch(errorActionGlobalCreator(err));\n  }\n};\n\n/**\n * This action creator updates the client preference for the theme and layout in the DB and in Redux store\n * @param {*} teamId The id of the team whose theme is to be updated\n * @param {*} themeData Object containing the updated 'layout' and 'theme'\n * @returns\n */\nexport const updateTheme = (teamId, templateData) => async (dispatch) => {\n  try {\n    const changes = [\n      {\n        field: 'template',\n        value: templateData,\n      },\n    ];\n    await api.updateClientWebMetadata(teamId, changes);\n\n    dispatch({\n      type: UPDATE_WEBSITE_TEMPLATE,\n      payload: templateData,\n    });\n    dispatch(successMessageCreator('Theme has been updated'));\n  } catch (error) {\n    dispatch(errorActionGlobalCreator(error));\n  }\n};\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Modal } from 'react-bootstrap';\nimport { PropTypes } from 'prop-types';\nimport { deletePage } from '../../../actions/website';\nimport { SecondaryButton, DangerButton } from '../../shared/styledComponents';\n\nconst WebpageDelete = ({\n  teamId, selectedPage, setSelectedPage, pagePlaceholder, closeModal, displayModal,\n}) => {\n  const dispatch = useDispatch();\n\n  const handleDelete = () => {\n    dispatch(deletePage(teamId, selectedPage));\n    setSelectedPage(pagePlaceholder);\n    closeModal();\n  };\n\n  const handleClose = () => {\n    closeModal();\n  };\n\n  return (\n    <>\n      <Modal\n        show={displayModal}\n        onHide={closeModal}\n        centered\n        size=\"lg\"\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title-center\">\n            Are you sure you want to delete the\n            {' '}\n            {selectedPage}\n            {' '}\n            page?\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          Deleting the page will NOT remove the data associated with this page,\n          but the page will not be shown on your website\n          <Modal.Footer className=\"p-0\">\n            <SecondaryButton variant=\"secondary\" onClick={handleClose}>\n              Cancel\n            </SecondaryButton>\n            <DangerButton variant=\"danger\" onClick={handleDelete}>\n              Delete This Page\n            </DangerButton>\n          </Modal.Footer>\n        </Modal.Body>\n      </Modal>\n    </>\n  );\n};\n\n// props validation\nWebpageDelete.propTypes = {\n  teamId: PropTypes.string.isRequired,\n  selectedPage: PropTypes.string.isRequired,\n  setSelectedPage: PropTypes.func.isRequired,\n  pagePlaceholder: PropTypes.string,\n  closeModal: PropTypes.func.isRequired,\n  displayModal: PropTypes.bool.isRequired,\n};\nWebpageDelete.defaultProps = {\n  pagePlaceholder: '',\n};\n\nexport default WebpageDelete;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport {\n  Modal, DropdownButton, Dropdown,\n} from 'react-bootstrap';\nimport { PropTypes } from 'prop-types';\nimport { addPage } from '../../../actions/website';\nimport { availablePages as pages } from '../../../config/clientWebsite';\nimport { PrimaryButton } from '../../shared/styledComponents';\n\nconst WebpageSelector = ({\n  currentWebPages, teamId, closeModal, displayModal,\n}) => {\n  const dispatch = useDispatch();\n  // All our web-page offerings\n  const availablePages = pages;\n  // webpageOfferings = availablePages - currentWebPages\n  const webpageOfferings = availablePages.filter(\n    (page) => !currentWebPages.includes(page),\n  );\n  const pagePlaceholder = 'Select page to add';\n\n  const [selectedPage, setSelectedPage] = useState(pagePlaceholder);\n\n  // To control disabling the 'Next' Button in the pop-up\n  const [displayButton, setDisplayButton] = useState(true);\n\n  const handlePageSelection = (e) => {\n    setSelectedPage(e);\n    setDisplayButton(false);\n  };\n\n  const handleSubmit = () => {\n    dispatch(addPage(teamId, selectedPage));\n    setSelectedPage(pagePlaceholder);\n    closeModal();\n  };\n\n  return (\n    <>\n      <Modal show={displayModal} onHide={closeModal} centered size=\"lg\">\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title-center\">\n            Choose the Page you want to add to your website\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <DropdownButton\n            className=\"mx-10\"\n            id=\"dropdown-basic-button\"\n            variant=\"secondary\"\n            title={selectedPage}\n            onSelect={handlePageSelection}\n          >\n            {webpageOfferings.map((pageName) => (\n              <Dropdown.Item key={pageName} eventKey={pageName}>\n                {pageName}\n              </Dropdown.Item>\n            ))}\n          </DropdownButton>\n          <PrimaryButton\n            className=\"float-right\"\n            disabled={displayButton}\n            onClick={handleSubmit}\n          >\n            Confirm\n          </PrimaryButton>\n        </Modal.Body>\n      </Modal>\n    </>\n  );\n};\n\n// props validation\nWebpageSelector.propTypes = {\n  currentWebPages: PropTypes.array.isRequired,\n  teamId: PropTypes.string.isRequired,\n  closeModal: PropTypes.func.isRequired,\n  displayModal: PropTypes.bool.isRequired,\n};\n\nexport default WebpageSelector;\n","/**\n * ConditionalWrapper is a component that can be used to make tooltips appear conditionally.\n * For usage:\n * @see ImportSuccessPage.js\n * @see Webpages.js\n */\nconst ConditionalWrapper = ({ condition, wrapper, children }) => (condition ? wrapper(children) : children);\n\nexport default ConditionalWrapper;\n","import React, { useState, useEffect } from 'react';\nimport { BsPencilSquare } from 'react-icons/bs';\nimport {\n  Table,\n  Tooltip,\n  OverlayTrigger,\n  Spinner,\n} from 'react-bootstrap';\nimport '../Dashboard.css';\nimport { PropTypes } from 'prop-types';\nimport WebpageDelete from './WebpageDelete';\nimport WebpageSelector from './WebpageSelector';\nimport ConditionalWrapper from '../../shared/ConditionalWrapper';\nimport {\n  PrimaryButton, SecondaryButton, DangerButton,\n} from '../../shared/styledComponents';\n\nconst Webpages = ({\n  currentWebPages,\n  directToAnotherPage,\n  teamId,\n  setSelectedPage,\n  selectedPage,\n  availablePages,\n  loading,\n}) => {\n  const [displayDeleteModal, setDeleteModal] = useState(false);\n  const showDeleteModal = () => setDeleteModal(true);\n  const closeDeleteModal = () => setDeleteModal(false);\n\n  const [displayPageModal, setDisplayPageModal] = useState(false);\n  const showDisplayPageModal = () => setDisplayPageModal(true);\n  const closeDisplayPageModal = () => setDisplayPageModal(false);\n\n  const [disableAddButton, setDisableAddButton] = useState(false);\n\n  const renderDisableAddButtonTooltip = (props) => (\n    <Tooltip id=\"button-tooltip\" {...props}>\n      All available pages have been added\n    </Tooltip>\n  );\n\n  useEffect(() => {\n    if (\n      availablePages.filter((page) => !currentWebPages.includes(page))\n        .length === 0\n    ) {\n      setDisableAddButton(true);\n    } else {\n      setDisableAddButton(false);\n    }\n  }, [currentWebPages]);\n\n  const promptDeleteConfirmation = (pageName) => {\n    setSelectedPage(pageName);\n    showDeleteModal();\n  };\n\n  return (\n    <>\n      <WebpageDelete\n        teamId={teamId}\n        selectedPage={selectedPage}\n        displayModal={displayDeleteModal}\n        closeModal={closeDeleteModal}\n        setSelectedPage={setSelectedPage}\n      />\n      <WebpageSelector\n        teamId={teamId}\n        currentWebPages={currentWebPages}\n        displayModal={displayPageModal}\n        closeModal={closeDisplayPageModal}\n      />\n      <div className=\"mb-3 text-center\">\n        <ConditionalWrapper\n          condition={disableAddButton}\n          wrapper={(children) => (\n            <OverlayTrigger\n              placement=\"bottom\"\n              overlay={renderDisableAddButtonTooltip}\n            >\n              {children}\n            </OverlayTrigger>\n          )}\n        >\n          <div style={{ display: 'inline-block', cursor: 'not-allowed' }}>\n            <PrimaryButton\n              className=\"mr-2\"\n              onClick={showDisplayPageModal}\n              disabled={disableAddButton}\n              style={disableAddButton ? { pointerEvents: 'none' } : {}}\n            >\n              Add Page\n            </PrimaryButton>\n          </div>\n        </ConditionalWrapper>\n      </div>\n\n      {loading ? (\n        <div className=\"text-center\">\n          <Spinner animation=\"border\" />\n        </div>\n      ) : (\n        <Table striped bordered hover>\n          {\n            // Display appropriate message when no webpage is added\n            currentWebPages.length === 0 && (\n              <thead>\n                <tr>\n                  <th className=\"reduced-column tableHeading\">\n                    Click &apos;Add Page&apos; to add more pages\n                  </th>\n                </tr>\n              </thead>\n            )\n          }\n          <tbody>\n            <tr key=\"default-homepage\">\n              <td className=\"body\">\n                HOMEPAGE\n                <SecondaryButton\n                  className=\"action float-right mx-2\"\n                  onClick={() => {\n                    directToAnotherPage('HOME PAGE');\n                  }}\n                >\n                  <BsPencilSquare />\n                </SecondaryButton>\n              </td>\n            </tr>\n\n            {currentWebPages.map((webPage) => (\n              <tr key={webPage}>\n                <td className=\"body\">\n                  {webPage}\n                  <DangerButton\n                    className=\"action primary-danger float-right\"\n                    onClick={() => promptDeleteConfirmation(webPage)}\n                  >\n                    Delete\n                  </DangerButton>\n                  <SecondaryButton\n                    className=\"action float-right mx-2\"\n                    onClick={() => {\n                      directToAnotherPage(webPage);\n                    }}\n                  >\n                    <BsPencilSquare />\n                  </SecondaryButton>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      )}\n    </>\n  );\n};\n\n// props validation\nWebpages.propTypes = {\n  currentWebPages: PropTypes.array.isRequired,\n  directToAnotherPage: PropTypes.func.isRequired,\n  teamId: PropTypes.string.isRequired,\n  setSelectedPage: PropTypes.func.isRequired,\n  selectedPage: PropTypes.string.isRequired,\n  availablePages: PropTypes.array.isRequired,\n  loading: PropTypes.bool,\n};\nWebpages.defaultProps = {\n  loading: false,\n};\n\nexport default Webpages;\n","/**\n * Exports configuration necessary for users to authorize with GitHub OAuth, so\n * that our API server can be communicated with to deploy the client's website\n * to GitHub Pages.\n *\n * Note: process.env.NODE_ENV will be automatically set to 'production' when\n * building; see:\n * https://create-react-app.dev/docs/adding-custom-environment-variables/\n */\n\n/// We require access to the \"public_repo\" scope to allow pushing to the pages repo.\nexport const scope = 'public_repo';\n/// Configured client ID of the GitHub OAuth application.\nexport let githubClientId; // eslint-disable-line import/no-mutable-exports\n\n// Values depend on whether we're running in dev mode or prod.\nif (process.env.NODE_ENV === 'production') {\n  githubClientId = 'bf0b026536ac6923e06e';\n} else {\n  githubClientId = '0a58958e33b392f837b6';\n}\n","/**\n * This file houses our auth-related Action Creators.\n */\nimport * as api from '../api';\nimport {\n  LOG_IN_REQUEST,\n  LOG_IN_SUCCESS,\n  LOG_OUT,\n  LOG_IN_FAIL,\n  FETCH_TEAM_INFO,\n  FETCH_WEBSITE_INFO,\n} from './types';\nimport { errorActionGlobalCreator } from '../notification/notificationReduxFunctions';\n\n/**\n * This action creator will be called when a user signs in.\n *\n * @param authData data associated to the authentication response.\n * @returns an action of type AUTH_SIGN_IN with the payload as the authData.\n */\nexport const login = (authData, setFieldError) => async (dispatch) => {\n  try {\n    dispatch({\n      type: LOG_IN_REQUEST,\n    });\n    await api.loginTeam(authData);\n    dispatch({\n      type: LOG_IN_SUCCESS,\n    });\n  } catch (error) {\n    dispatch({\n      type: LOG_IN_FAIL,\n    });\n    // only show pop up error if it's not a client error, otherwise, show the error on the form instead\n    if (error.response.status === 400) {\n      // assuming the only client error is 'Incorrect email/passord'\n      setFieldError('password', 'Incorrect email/password');\n      setFieldError('email', ' ');\n    } else {\n      dispatch(errorActionGlobalCreator(error));\n    }\n  }\n};\n\n/**\n * This action creator will be called when a user signs out.\n * @returns an action of type AUTH_SIGN_OUT.\n */\nexport const logout = () => async (dispatch) => {\n  try {\n    await api.logoutTeam();\n    dispatch({\n      type: LOG_OUT,\n    });\n  } catch (err) {\n    dispatch(errorActionGlobalCreator(err));\n  }\n};\n\nexport const authorizeJWT = () => async (dispatch) => {\n  try {\n    const { data } = await api.getTeamJWT();\n    const teamId = data._id;\n    const { data: clientWebsiteData } = await api.getWebsiteInfo(teamId);\n\n    dispatch({\n      type: LOG_IN_SUCCESS,\n    });\n    dispatch({\n      type: FETCH_TEAM_INFO,\n      payload: data,\n    });\n    dispatch({\n      type: FETCH_WEBSITE_INFO,\n      payload: clientWebsiteData,\n    });\n  } catch (err) {\n    dispatch(errorActionGlobalCreator(err));\n  }\n};\n","/**\n * This file houses our team-related Action Creators.\n */\nimport * as api from '../api';\nimport {\n  LINK_TEAM_TWITTER,\n  UNLINK_TEAM_TWITTER,\n  FETCH_TEAM_INFO,\n  GET_TEAM_MEMBERS_BY_TEAM_ID,\n  CREATE_TEAM_MEMBER,\n  UPDATE_TEAM_MEMBER,\n  DELETE_TEAM_MEMBER,\n  GET_GH_ACCESS_TOKEN,\n  DEPLOY_REQUEST,\n  DEPLOY_SUCCESS,\n  DEPLOY_FAIL,\n  UPDATE_TEAM,\n} from './types';\nimport { login } from './auth';\nimport {\n  errorActionGlobalCreator,\n  successMessageCreator,\n} from '../notification/notificationReduxFunctions';\n\n/**\n * Create a new team to database.\n * @param teamInfo contains teamName, orgName and email\n */\nexport const createTeam = (teamInfo, setFieldError) => async (dispatch) => {\n  try {\n    await api.createTeam(teamInfo);\n    const authData = { email: teamInfo.email, password: teamInfo.password };\n    dispatch(login(authData));\n    dispatch(successMessageCreator('Team has been created')); // showing a success notification\n  } catch (err) {\n    // only show pop up error if it's not a client error, otherwise, show the error on the form instead\n    if (err.response.status === 400) {\n      // assuming the only client error is 'Email had been registered'\n      setFieldError('email', 'Email has been registered');\n    } else {\n      dispatch(errorActionGlobalCreator(err));\n    }\n  }\n};\n\n/**\n * This action creator will be called to populate a signed-in-user's team information.\n *\n * @note: this should be invoked just after a user has signed in as components such as the TwitterPanel\n * depend on the team information being populated.\n *\n * @note: this function returns a fake for now for the purposes of testing twitter integration.\n *\n * @param teamId id of the team for which to get team information.\n * @returns a thunk responsible for getting team information from the api and dispatching a FETCH_TEAM_INFO action\n */\nexport const getTeamInfo = (teamId) => async (dispatch) => {\n  try {\n    const { data } = await api.fetchTeamInfo(teamId);\n    const teamData = teamDataAllocator(data);\n    dispatch({\n      type: FETCH_TEAM_INFO,\n      payload: teamData,\n    });\n  } catch (err) {\n    dispatch(errorActionGlobalCreator(err));\n  }\n};\n\n/**\n * This action creator will be called when a researcher links their twitter account for their research team to\n * show tweets.\n *\n * @param teamId id of the team to which the handle is to be associated.\n * @param handle the twitter handle the researcher wishes to associate with their site.\n * @returns a thunk responsible for posting the handle to the api and dispatching a LINK_TEAM_TWITTER action\n */\nexport const linkTwitter = (teamId, handle) => async (dispatch) => {\n  try {\n    const { data } = await api.registerTwitterHandle(teamId, {\n      twitterHandle: handle,\n    });\n    dispatch({\n      type: LINK_TEAM_TWITTER,\n      payload: data.twitterHandle,\n    });\n  } catch (err) {\n    dispatch({\n      // if linking unsuccessful, set payload to empty string and dispatch\n      type: LINK_TEAM_TWITTER,\n      payload: null,\n    });\n    dispatch(errorActionGlobalCreator(err));\n  }\n};\n\n/**\n * This action creator will be called when a researcher de-registers a previously-linked twitter handle for their team.\n *\n * @param teamId id of the team to which the handle is to be disassociated.\n * @returns a thunk responsible for posting the handle to the api and dispatching an UNLINK_TEAM_TWITTER action.\n */\nexport const unlinkTwitter = (teamId) => async (dispatch) => {\n  try {\n    const { data } = await api.deregisterTwitterHandle(teamId, {\n      twitterHandle: '',\n    });\n    dispatch({\n      type: UNLINK_TEAM_TWITTER,\n      payload: data.twitterHandle,\n    });\n  } catch (err) {\n    dispatch(errorActionGlobalCreator(err));\n  }\n};\n\n/**\n * This action creator will be called when a user click on the team page to retrieve all the team members from that team\n *\n * @param teamId id of the team\n * @returns a thunk responsible for calling the api and dispatching a GET_TEAM_MEMBERS_BY_TEAM_ID action\n */\nexport const getTeamMembersByTeamId = (teamId) => async (dispatch) => {\n  try {\n    const { data } = await api.fetchTeamMembersByTeamId(teamId);\n    dispatch({\n      type: GET_TEAM_MEMBERS_BY_TEAM_ID,\n      payload: data,\n    });\n  } catch (err) {\n    dispatch(errorActionGlobalCreator(err));\n  }\n};\n\n/**\n * This action creator will be called when a user create a new team member to the team\n * show tweets.\n *\n * @param teamId id of the team\n * @param teamMember the new team member\n * @returns a thunk responsible for calling api and dispatching a CREATE_TEAM_MEMBER action\n */\nexport const createTeamMember = (teamId, teamMember) => async (dispatch) => {\n  try {\n    const { data } = await api.createTeamMember(teamId, teamMember);\n\n    dispatch({\n      type: CREATE_TEAM_MEMBER,\n      payload: data,\n    });\n  } catch (err) {\n    dispatch(errorActionGlobalCreator(err));\n  }\n};\n\n/**\n * This action creator will be called when a user update the details of a team member\n *\n * @param teamId id of the team\n * @param teamMember the updated new member\n * @returns a thunk responsible for calling the api and dispatching a UPDATE_TEAM_MEMBER action\n */\nexport const updateTeamMember = (id, teamMember) => async (dispatch) => {\n  try {\n    const { data } = await api.updateTeamMember(id, teamMember);\n\n    dispatch({\n      type: UPDATE_TEAM_MEMBER,\n      payload: data,\n    });\n  } catch (err) {\n    dispatch(errorActionGlobalCreator(err));\n  }\n};\n\n/**\n * This action creator will be called when a user remove a team member from the team\n *\n * @param teamId id of the team\n * @param memberId id of the team member\n * @returns a thunk responsible for calling the api and dispatching a DELETE_TEAM_MEMBER action\n */\nexport const deleteTeamMember = (teamId, memberId) => async (dispatch) => {\n  try {\n    await api.deleteTeamMember(teamId, memberId);\n    dispatch({\n      type: DELETE_TEAM_MEMBER,\n      payload: memberId,\n    });\n  } catch (err) {\n    dispatch(errorActionGlobalCreator(err));\n  }\n};\n\nexport const getGHAccessToken = (teamId, code) => async (dispatch) => {\n  try {\n    const { data } = await api.getGHAccessToken(teamId, code);\n\n    localStorage.setItem('GH_access_token', data.access_token);\n    dispatch({\n      type: GET_GH_ACCESS_TOKEN,\n    });\n  } catch (err) {\n    dispatch(errorActionGlobalCreator(err));\n  }\n};\n\nexport const deployToGHPages = (teamId, accessToken) => async (dispatch) => {\n  try {\n    dispatch({\n      type: DEPLOY_REQUEST,\n    });\n    // get publications\n    const { data: teamPublications } = await api.fetchPublicationsByTeamId(\n      teamId,\n    );\n    const newTeamPubs = teamPublications.map(\n      (pub) => {\n        const updatedPub = {\n          ...pub,\n          yearPublished: pub.yearPublished.substring(0, 4), // only get the year from the date format\n        };\n        return updatedPub;\n      },\n    );\n    // get teamInfo\n    const { data: teamInfo } = await api.getTeamJWT();\n    // get team members\n    const { data: teamMembers } = await api.fetchTeamMembersByTeamId(teamId);\n    // get team homepage content\n    const { data: teamHomepage } = await api.getHomepage(teamId);\n    // get user selected web pages to deploy\n    const { data: teamSiteMetadata } = await api.getWebsiteInfo(teamId);\n    // get achievements\n    const { data: teamAchievements } = await api.fetchAchievementsByTeamId(teamId);\n\n    const body = {\n      ghToken: accessToken,\n      teamPublications: newTeamPubs,\n      teamInfo,\n      teamMembers,\n      teamHomepage,\n      teamSiteMetadata,\n      teamAchievements,\n    };\n\n    await api.deployToGHPages(teamId, body);\n    dispatch({\n      type: DEPLOY_SUCCESS,\n    });\n    dispatch(successMessageCreator('Deployed successfully'));\n  } catch (err) {\n    dispatch(errorActionGlobalCreator(err));\n    dispatch({\n      type: DEPLOY_FAIL,\n    });\n  }\n};\n\n/**\n * A function to allocates team data from back-end.\n * @param {*} teamData raw data from back-end\n * @returns full team data that adheres to team state\n * @see teamReducer#INITIAL_TEAM_STATE\n */\nfunction teamDataAllocator(teamData) {\n  return {\n    teamId: teamData._id,\n    email: teamData.email,\n    teamName: teamData.teamName,\n    orgName: teamData.orgName,\n    profilePic: teamData.profilePic,\n    twitterHandle: teamData.twitterHandle,\n    repoCreated: teamData.repoCreated,\n    error: null,\n    retrievedAccessToken: false,\n    themeId: teamData.themeId,\n  };\n}\n\n/**\n * This action creator will be called when a user want to update the team profile\n *\n * @param {*} teamId id of the team\n * @param {*} teamData data object of the data to be patched\n * @returns\n */\nexport const updateTeam = (teamId, teamData) => async (dispatch) => {\n  try {\n    const { data } = await api.updateTeam(teamId, teamData);\n    const updatedTeam = teamDataAllocator(data);\n    dispatch({\n      type: UPDATE_TEAM,\n      payload: updatedTeam,\n    });\n    dispatch(successMessageCreator('Team has been updated'));\n  } catch (error) {\n    dispatch(errorActionGlobalCreator(error));\n  }\n};\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { GoMarkGithub } from 'react-icons/go';\nimport { Spinner } from 'react-bootstrap';\nimport GitHubLogin from 'react-github-login';\nimport toast from 'react-hot-toast';\nimport { PropTypes } from 'prop-types';\n\nimport styled from 'styled-components';\nimport { githubClientId, scope } from '../../../config/deploy';\nimport { getGHAccessToken, deployToGHPages } from '../../../actions/team';\n\nimport { PrimaryButton } from '../../shared/styledComponents';\n\nconst GHButton = styled(GitHubLogin)` //Purple\n    padding: .375rem .75rem;\n    border: 1px solid #56658a;\n    border-radius: .25rem;\n    background-color: #56658a;\n    color: white;\n    transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n    font-size: ${(props) => props.fontSize}; //.875rem;\n  &:hover{\n    background-color:rgb(60, 70, 96);\n  }\n`;\n\n// const GHButton = styled(GitHubLogin)` //Gold\n//     padding: .375rem .75rem;\n//     border: 1px solid #AB9671 !important;\n//     border-radius: .25rem;\n//     background-color: #AB9671;\n//     color: white;\n//     transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n//     font-size: ${(props) => props.fontSize}; //.875rem;\n//   &:hover{\n//     background-color: rgb(119, 105, 79);\n//   }\n// `;\n\nconst DeployPage = ({ teamId }) => {\n  const dispatch = useDispatch();\n  const loading = useSelector((state) => state.deploy.loading);\n  const retrievedAccessToken = useSelector(\n    (state) => state.team.retrievedAccessToken,\n  );\n\n  const handleDeploy = () => {\n    const accessToken = localStorage.getItem('GH_access_token');\n    // call backend endpoint to deploy and give the access token\n    dispatch(deployToGHPages(teamId, accessToken));\n  };\n\n  const onSuccessfulLogin = (response) => {\n    const { code } = response;\n    // Now that we have the temporary code, we wish to exchange it for a GitHub\n    // access token. This action will fetch the token and push it to localstorage.\n    dispatch(getGHAccessToken(teamId, code));\n  };\n\n  // handle error toast when fail to log in\n  // usually is when user close the login window\n  const onLoginFail = () => {\n    toast.error('You must login with GitHub to deploy');\n  };\n\n  const GitHubLoginButton = (\n    <GHButton\n      className=\"float-right\"\n      clientId={githubClientId}\n      scope={scope}\n      onSuccess={onSuccessfulLogin}\n      onFailure={onLoginFail}\n      redirectUri=\"\"\n    >\n      <GoMarkGithub className=\"mr-2\" />\n      Login with GitHub\n    </GHButton>\n  );\n\n  const DeployButton = (\n    <PrimaryButton\n      className=\"float-right\"\n      disabled={!retrievedAccessToken}\n      onClick={handleDeploy}\n    >\n      Deploy to GitHub Pages\n    </PrimaryButton>\n  );\n\n  return (\n    <>\n      Deploy Website with GitHub\n      { (() => {\n        if (loading) {\n          return (\n            <div className=\"mb-3 mt-3 text-center\">\n              <Spinner animation=\"border\" />\n            </div>\n          );\n        } if (retrievedAccessToken) {\n          return (DeployButton);\n        }\n        return (GitHubLoginButton);\n      })()}\n    </>\n  );\n};\n\n// props validation\nDeployPage.propTypes = {\n  teamId: PropTypes.string.isRequired,\n};\n\nexport default DeployPage;\n","/**\n * This file exports the content in of Researchify Dashboard Page\n */\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport {\n  Container, Card, Tabs, Tab,\n} from 'react-bootstrap';\nimport { useSelector } from 'react-redux';\nimport TemplateSelector from './TemplateSelector';\nimport './Dashboard.css';\n\nimport Webpages from './webpage/Webpages';\nimport DeployPage from './deploy/DeployPage';\nimport { availablePages } from '../../config/clientWebsite';\n\nconst Dashboard = () => {\n  const history = useHistory();\n\n  const teamId = useSelector((state) => state.team.teamId);\n  const { pages: currentWebPages, loading } = useSelector((state) => state.website);\n\n  const pagePlaceholder = 'Select page to add';\n  const [selectedPage, setSelectedPage] = useState(pagePlaceholder);\n\n  const [currentTab, setCurrentTab] = useState('home');\n\n  const directToAnotherPage = (pageName) => {\n    switch (pageName) {\n      case 'PUBLICATIONS':\n        history.push('/publications');\n        break;\n      case 'TEAM':\n        history.push('/team');\n        break;\n      case 'HOME PAGE':\n        history.push('/about-us');\n        break;\n      case 'ACHIEVEMENTS':\n        history.push('/achievement');\n        break;\n      default:\n        history.push('/');\n    }\n  };\n\n  return (\n    <main>\n      <Container fluid className=\"p-5\">\n        <Tabs\n          defaultActiveKey=\"home\"\n          onSelect={(k) => setCurrentTab(k)}\n          transition={false}\n          className=\"mb-3\"\n        >\n          <Tab eventKey=\"home\" title=\"Webpages\">\n            <Webpages\n              currentWebPages={currentWebPages}\n              directToAnotherPage={directToAnotherPage}\n              teamId={teamId}\n              setSelectedPage={setSelectedPage}\n              selectedPage={selectedPage}\n              availablePages={availablePages}\n              loading={loading}\n            />\n          </Tab>\n          <Tab eventKey=\"theme\" title=\"Theme\" className=\"pb-5\">\n            <TemplateSelector teamId={teamId} />\n          </Tab>\n        </Tabs>\n        {currentTab === 'home' ? (\n          <Card className=\"text-left\" id=\"table\">\n            <Card.Footer>\n              <DeployPage teamId={teamId} currentWebPages={currentWebPages} />\n            </Card.Footer>\n          </Card>\n        ) : (\n          <Card />\n        )}\n      </Container>\n    </main>\n  );\n};\n\nexport default Dashboard;\n","export default __webpack_public_path__ + \"static/media/profilepic.7b7dc363.jpg\";","/**\n * This file exports a profile page management component that displays the ability to edit user information\n */\n\nimport React, { useState, useEffect } from 'react';\n\nimport {\n  Form, Container, Image,\n} from 'react-bootstrap';\nimport './ProfileInfoEdit.css';\nimport toast from 'react-hot-toast';\nimport { useSelector, useDispatch } from 'react-redux';\nimport defaultProfilePic from '../../images/profilepic.jpg';\nimport { updateTeam } from '../../actions/team';\n\nimport { PrimaryButton, DangerButton } from '../shared/styledComponents';\n\n/**\n * Form component for user update profile\n */\nconst ProfileInfoEdit = () => {\n  const dispatch = useDispatch();\n\n  const {\n    teamId, teamName, orgName, email, profilePic,\n  } = useSelector(\n    (state) => state.team,\n  );\n\n  const [profileData, setProfileData] = useState({\n    teamName, orgName, email, profilePic,\n  });\n\n  useEffect(() => {\n    setProfileData({\n      teamName, orgName, email, profilePic,\n    });\n  }, [email, orgName, teamName, profilePic]);\n\n  const updateInputs = (form) => {\n    const { name, value } = form.target;\n    setProfileData({ ...profileData, [name]: value });\n  };\n\n  /**\n   * Updates profile image field when user uploads file\n  */\n\n  // If profilePic is undefined, set a default profile pic\n  profileData.profilePic = profileData.profilePic ?? defaultProfilePic;\n\n  /* eslint-disable no-shadow */\n  const handleImageUpload = (e) => {\n    e.preventDefault();\n    const reader = new FileReader();\n    const file = e.target.files[0];\n\n    if (e.target.files[0]) {\n      reader.onload = (e) => {\n        setProfileData({ ...profileData, profilePic: e.target.result });\n      };\n\n      reader.readAsDataURL(file);\n    }\n  };\n\n  const [validated, setValidated] = useState(false);\n  const handleUpdate = (event) => {\n    const form = event.currentTarget;\n    event.preventDefault();\n    if (form.checkValidity() === false) {\n      event.stopPropagation();\n    } else {\n      dispatch(updateTeam(teamId, profileData));\n    }\n    setValidated(true);\n  };\n\n  const profileDeleted = () => {\n    // TODO: Delete profile function is not implemented yet in ProfileInfoEdit.js\n    toast.error('Profile has not been deleted');\n  };\n\n  return (\n    <div className=\"mt-5\">\n      <Container className=\"profile-container\">\n        <Form\n          className=\"profile-form\"\n          noValidate\n          validated={validated}\n          onSubmit={handleUpdate}\n        >\n          <p className=\"profile-title-name\">Account Settings</p>\n\n          <Form.Group controlId=\"formProfilePic\">\n            <Image\n              className=\"profile-img\"\n              src={profileData.profilePic}\n              roundedCircle\n            />\n            <Form.Label className=\"upload-label\">\n              Change Profile Photo\n            </Form.Label>\n            <Form.Control className=\"profile-pic\" type=\"file\" accept=\"image/*\" onChange={handleImageUpload} multiple={false} name=\"profilePic\" />\n          </Form.Group>\n\n          <Form.Group>\n            <Form.Label>Research Group Name</Form.Label>\n            <Form.Control\n              className=\"placeholder-text\"\n              type=\"text\"\n              placeholder=\"Allan Lab\"\n              defaultValue={profileData.teamName}\n              onChange={updateInputs}\n              required\n              name=\"teamName\"\n            />\n          </Form.Group>\n\n          <Form.Group>\n            <Form.Label>Organisation Name</Form.Label>\n            <Form.Control\n              className=\"placeholder-text\"\n              type=\"text\"\n              placeholder=\"Leiden University\"\n              defaultValue={profileData.orgName}\n              onChange={updateInputs}\n              required\n              name=\"orgName\"\n            />\n          </Form.Group>\n\n          <Form.Group>\n            <Form.Label>Email</Form.Label>\n            <Form.Control\n              className=\"placeholder-text\"\n              type=\"email\"\n              placeholder=\"allenlab@gmail.com\"\n              name=\"email\"\n              defaultValue={profileData.email}\n              onChange={updateInputs}\n              required\n            />\n          </Form.Group>\n\n          <PrimaryButton\n            id=\"updateButton\"\n            type=\"submit\"\n            color=\"primary\"\n            className=\"my-2\"\n          >\n            Update\n          </PrimaryButton>\n          <DangerButton\n            variant=\"outline-danger\"\n            onClick={profileDeleted}\n            className=\"mt-2\"\n            style={{ float: 'right' }}\n          >\n            Delete account\n          </DangerButton>\n        </Form>\n      </Container>\n    </div>\n  );\n};\n\nexport default ProfileInfoEdit;\n","import * as api from '../api';\nimport {\n  GET_PUBLICATIONS_BY_TEAM_ID,\n  CREATE_PUBLICATION,\n  UPDATE_PUBLICATION,\n  DELETE_PUBLICATION,\n  CREATE_BULK_PUBLICATIONS,\n  IMPORT_REQUEST,\n  IMPORT_SUCCESS,\n  IMPORT_FAIL,\n  IMPORT_END,\n  IMPORT_EMPTY,\n  DELETE_BATCH_PUBLICATIONS,\n} from './types';\nimport {\n  errorActionGlobalCreator,\n  successMessageCreator,\n} from '../notification/notificationReduxFunctions';\nimport { pageSize } from '../config/publications';\n\nexport const getPublicationsByTeamId = (teamId) => async (dispatch) => {\n  try {\n    const { data } = await api.fetchPublicationsByTeamId(teamId);\n\n    const newData = data.map((pub) => {\n      const updatedPub = {\n        ...pub,\n        yearPublished: pub.yearPublished.substring(0, 4), // only get the year from the date format\n      };\n      return updatedPub;\n    });\n\n    dispatch({\n      type: GET_PUBLICATIONS_BY_TEAM_ID,\n      payload: newData,\n    });\n  } catch (error) {\n    dispatch(errorActionGlobalCreator(error));\n  }\n};\n\nexport const createPublication = (publication) => async (dispatch) => {\n  try {\n    const result = await api.createPublication(publication);\n    result.data.yearPublished = result.data.yearPublished.substring(0, 4); // only get the year from the date format\n\n    dispatch({\n      type: CREATE_PUBLICATION,\n      payload: { ...result.data, isNewlyAdded: true },\n    });\n    dispatch(successMessageCreator('Publication has been created'));\n  } catch (error) {\n    dispatch(errorActionGlobalCreator(error));\n  }\n};\n\nexport const deletePublication = (id) => async (dispatch) => {\n  try {\n    await api.deletePublication(id);\n\n    dispatch({\n      type: DELETE_PUBLICATION,\n      payload: id,\n    });\n    dispatch(successMessageCreator('Publication has been deleted'));\n  } catch (error) {\n    dispatch(errorActionGlobalCreator(error));\n  }\n};\n\nexport const updatePublication = (id, publication) => async (dispatch) => {\n  try {\n    const { data } = await api.updatePublication(id, publication);\n    data.yearPublished = data.yearPublished.substring(0, 4); // only get the year from the date format\n    dispatch({\n      type: UPDATE_PUBLICATION,\n      payload: data,\n    });\n    dispatch(successMessageCreator('Publication has been updated'));\n  } catch (error) {\n    dispatch(errorActionGlobalCreator(error));\n  }\n};\n\nexport const importPublications = (authorId, startFrom, teamId) => async (dispatch) => {\n  try {\n    dispatch({\n      type: IMPORT_REQUEST,\n    });\n    const result = await api.importPublications(authorId, startFrom, teamId);\n    const pageNo = startFrom / pageSize + 1;\n    if (result.data.reachedEnd) {\n      // reached the end of the user's profile\n      if (result.data.newPublications.length > 0) {\n        dispatch({\n          type: IMPORT_SUCCESS,\n          payload: result.data.newPublications,\n        });\n      } else {\n        dispatch({\n          type: IMPORT_EMPTY,\n        });\n        dispatch(successMessageCreator('No publications left to retrieve!'));\n      }\n      dispatch({\n        type: IMPORT_END,\n      });\n    } else if (\n      result.data.newPublications.length === 0\n        && result.data.retrieved > 0\n    ) {\n      // no new publications retrieved but not end of profile\n      dispatch({\n        type: IMPORT_EMPTY,\n      });\n      dispatch(\n        successMessageCreator(\n          `No new publications were found on page ${pageNo}`,\n        ),\n      );\n    } else {\n      dispatch({\n        type: IMPORT_SUCCESS,\n        payload: result.data.newPublications,\n      });\n      dispatch(\n        successMessageCreator(`New publications were found on page ${pageNo}`),\n      );\n    }\n  } catch (error) {\n    dispatch({\n      type: IMPORT_FAIL,\n    });\n    dispatch(errorActionGlobalCreator(error));\n  }\n};\n\nexport const createBulkPublications = (teamId, publicationList) => async (dispatch) => {\n  try {\n    const result = await api.createBulkPublications(teamId, publicationList);\n    const createdPublications = result.data.map((pub) => ({\n      ...pub,\n      yearPublished: pub.yearPublished.substring(0, 4),\n      isNewlyAdded: true,\n    }));\n\n    dispatch({\n      type: CREATE_BULK_PUBLICATIONS,\n      payload: createdPublications,\n    });\n    dispatch(successMessageCreator(`${createdPublications.length} publication(s) have been imported`));\n  } catch (error) {\n    dispatch(errorActionGlobalCreator(error));\n  }\n};\n\nexport const deleteBatchPublications = (publicationIdList) => async (dispatch) => {\n  try {\n    await api.deleteBatchPublications(publicationIdList);\n    dispatch({\n      type: DELETE_BATCH_PUBLICATIONS,\n      payload: publicationIdList,\n    });\n    dispatch(successMessageCreator(`${publicationIdList.length} publication(s) have been deleted`));\n  } catch (error) {\n    dispatch(errorActionGlobalCreator(error));\n  }\n};\n","/**\n * The MainInfoPage component displays a form of a publication's main attributes: Title, Published Year, Authors, Description and Link\n */\n\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport React from 'react';\nimport {\n  Row,\n  InputGroup,\n  Button,\n  Tooltip,\n  OverlayTrigger,\n  Form,\n} from 'react-bootstrap';\nimport '../publications.css';\nimport { PropTypes } from 'prop-types';\nimport { PrimaryButton, DangerButton } from '../../shared/styledComponents';\n\nconst MainInfoPage = ({\n  next, data, type, pub, closeModal,\n}) => {\n  const stepOneValidationSchema = yup.object({\n    title: yup\n      .string()\n      .required('Title is required')\n      .min(3, 'Title must be at least 3 characters'),\n    yearPublished: yup.string().required(),\n    authors: yup\n      .array()\n      .of(yup.string().required('Authors must not be empty'))\n      .required('Author is required'),\n    description: yup\n      .string()\n      .required('Description is required')\n      .min(5, 'Description must be at least 5 characters'),\n    link: yup\n      .string()\n      .url(\n        'Link URL provided is not a valid URL, including the protocol (http/https)',\n      ),\n  });\n\n  const handleSubmit = (values) => {\n    next(values);\n  };\n\n  const year = new Date().getFullYear();\n  const years = Array.from(\n    new Array(year - 1899),\n    (val, index) => year - index,\n  );\n\n  const renderTooltip = (props) => (\n    <Tooltip id=\"button-tooltip\" {...props}>\n      You will lose your progress\n    </Tooltip>\n  );\n\n  const renderAuthors = (values, touched, errors, handleChange, setValues) => values.authors.map((author, index) => (\n    //  ↓↓ need to use index as key, will cause the author field lose focus when typing if use author as key\n    // eslint-disable-next-line react/no-array-index-key\n    <InputGroup key={index}>\n      <Form.Control\n        className=\"placeholder-text\"\n        type=\"text\"\n        placeholder=\"John Smith\"\n        name={`authors[${index}]`}\n        value={values.authors[index]}\n        onChange={handleChange}\n        isInvalid={touched.authors && errors.authors && errors.authors[index]}\n      />\n      <InputGroup.Append>\n        <Button\n          onClick={() => {\n            const newAuthors = values.authors;\n            newAuthors.splice(index, 1);\n            setValues({ ...values, authors: newAuthors });\n          }}\n          variant=\"outline-secondary\"\n          disabled={values.authors.length === 1}\n        >\n          Remove\n        </Button>\n      </InputGroup.Append>\n      <Form.Control.Feedback type=\"invalid\">\n        {errors.authors && errors.authors[index]}\n      </Form.Control.Feedback>\n    </InputGroup>\n  ));\n\n  return (\n    <>\n      <Formik\n        enableReinitialize\n        validationSchema={stepOneValidationSchema}\n        onSubmit={handleSubmit}\n        initialValues={type === 'update' ? pub : data}\n      >\n        {({\n          // ↓↓ formik validation need it\n          handleSubmit, // eslint-disable-line no-shadow\n          handleChange,\n          values,\n          touched,\n          errors,\n          setValues,\n        }) => (\n          <Form noValidate onSubmit={handleSubmit}>\n            <Form.Group>\n              <Form.Label>Publication Title</Form.Label>\n              <Form.Control\n                className=\"placeholder-text\"\n                as=\"textarea\"\n                row={2}\n                name=\"title\"\n                placeholder=\"A neural model for method name generation from functional description\"\n                value={values.title}\n                onChange={handleChange}\n                isInvalid={touched.title && errors.title}\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                {errors.title}\n              </Form.Control.Feedback>\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>Published Year</Form.Label>\n              <Form.Control\n                className=\"placeholder-text\"\n                as=\"select\"\n                type=\"text\"\n                name=\"yearPublished\"\n                value={values.yearPublished}\n                onChange={handleChange}\n              >\n                {years.map((eachYear) => (\n                  <option key={eachYear} value={eachYear}>\n                    {eachYear}\n                  </option>\n                ))}\n              </Form.Control>\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label> Authors </Form.Label>\n              {renderAuthors(values, touched, errors, handleChange, setValues)}\n              <Button\n                variant=\"secondary\"\n                onClick={() => {\n                  setValues({ ...values, authors: [...values.authors, ''] });\n                }}\n              >\n                Add Author\n              </Button>\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>Description</Form.Label>\n              <Form.Control\n                className=\"placeholder-text\"\n                as=\"textarea\"\n                row={4}\n                name=\"description\"\n                placeholder=\"The names of software artifacts, e.g., method names, are important for software understanding and maintenance...\"\n                value={values.description}\n                onChange={handleChange}\n                isInvalid={touched.description && errors.description}\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                {errors.description}\n              </Form.Control.Feedback>\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>Link</Form.Label>\n              <Form.Control\n                className=\"placeholder-text\"\n                type=\"text\"\n                name=\"link\"\n                placeholder=\"https://ieeexplore.ieee.org/abstract/document/8667994/\"\n                value={values.link}\n                onChange={handleChange}\n                isInvalid={touched.link && errors.link}\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                {errors.link}\n              </Form.Control.Feedback>\n            </Form.Group>\n\n            <Row>\n              <div className=\"ml-3\">\n                <OverlayTrigger\n                  trigger={['hover', 'focus']}\n                  placement=\"bottom\"\n                  overlay={renderTooltip}\n                >\n                  <DangerButton\n                    className=\"mr-2\"\n                    onClick={closeModal}\n                  >\n                    Cancel\n                  </DangerButton>\n                </OverlayTrigger>\n              </div>\n              <div className=\"ml-auto mr-3\">\n                <PrimaryButton type=\"submit\">\n                  {' '}\n                  Next\n                  {' '}\n                </PrimaryButton>\n              </div>\n            </Row>\n          </Form>\n        )}\n      </Formik>\n    </>\n  );\n};\n\n// props validation\nMainInfoPage.propTypes = {\n  next: PropTypes.func.isRequired,\n  data: PropTypes.object.isRequired,\n  type: PropTypes.string.isRequired,\n  pub: PropTypes.object,\n  closeModal: PropTypes.func.isRequired,\n};\nMainInfoPage.defaultProps = {\n  pub: undefined,\n};\n\nexport default MainInfoPage;\n","/**\n * The CategoryPage component displays a form of a publication's category related attributed: Category type, Category title, Volume, Issue, Page and Publisher\n */\n\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport React from 'react';\nimport {\n  Row,\n  Tooltip,\n  OverlayTrigger,\n  Form,\n  ButtonGroup,\n  ToggleButton,\n} from 'react-bootstrap';\nimport { PropTypes } from 'prop-types';\nimport { categoryTypes } from '../../../config/publications';\nimport '../publications.css';\nimport { PrimaryButton, DangerButton } from '../../shared/styledComponents';\n\nconst CategoryPage = ({\n  next, prev, data, closeModal,\n}) => {\n  const stepTwoValidationSchema = yup.object({\n    category: yup.object({\n      type: yup.string(),\n      categoryTitle: yup\n        .string()\n        .required('Category title is required')\n        .min(3, 'Category title must be at least 3 characters'),\n      volume: yup.string(),\n      issue: yup.string(),\n      pages: yup.string(),\n      publisher: yup.string(),\n    }),\n  });\n\n  const handleSubmit = (values) => {\n    next(values, true);\n  };\n\n  const renderTooltip = (props) => (\n    <Tooltip id=\"button-tooltip\" {...props}>\n      You will lose your progress\n    </Tooltip>\n  );\n\n  const placeholderText = {\n    JOURNAL: 'Nature',\n    CONFERENCE: '26th International Conference on Intelligent User Interfaces',\n    BOOK: 'QED: Beauty in mathematical proof',\n    Volume: '420',\n    Issue: '6915',\n    Pages: '476-476',\n    Publisher: 'Nature Publishing Group',\n  };\n\n  return (\n    <>\n      <Formik\n        enableReinitialize\n        validationSchema={stepTwoValidationSchema}\n        onSubmit={handleSubmit}\n        initialValues={data}\n      >\n        {({\n          // ↓↓ formik validation need it\n          handleSubmit, // eslint-disable-line no-shadow\n          handleChange,\n          values,\n          touched,\n          errors,\n          setValues,\n        }) => (\n          <Form noValidate onSubmit={handleSubmit}>\n            <Form.Group>\n              <div className=\"text-center\">\n                <ButtonGroup toggle>\n                  {Object.keys(categoryTypes).map((category) => (\n                    <ToggleButton\n                      key={category}\n                      type=\"radio\"\n                      variant=\"outline-secondary\"\n                      value={category}\n                      checked={values.category.type.toUpperCase() === category.toUpperCase()}\n                      onChange={(e) => setValues({\n                        ...values,\n                        category: {\n                          ...values.category,\n                          type: e.currentTarget.value,\n                        },\n                      })}\n                    >\n                      {category}\n                    </ToggleButton>\n                  ))}\n                </ButtonGroup>\n              </div>\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>\n                {' '}\n                {Object.keys(categoryTypes)\n                  .filter(\n                    (category) => category.toUpperCase() === values.category.type.toUpperCase(),\n                  )\n                  .map((category) => `${\n                    category.charAt(0) + category.slice(1).toLowerCase()\n                  } title`)}\n                {' '}\n              </Form.Label>\n              <Form.Control\n                className=\"placeholder-text\"\n                type=\"text\"\n                name=\"category.categoryTitle\"\n                placeholder={placeholderText[values.category.type.toUpperCase()]}\n                value={values.category.categoryTitle}\n                onChange={handleChange}\n                isInvalid={\n                  touched.category\n                  && touched.category.categoryTitle\n                  && errors.category\n                  && errors.category.categoryTitle\n                }\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                {errors.category && errors.category.categoryTitle}\n              </Form.Control.Feedback>\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label> Volume </Form.Label>\n              <Form.Control\n                className=\"placeholder-text\"\n                type=\"text\"\n                name=\"category.volume\"\n                placeholder={placeholderText.Volume}\n                value={values.category.volume}\n                onChange={handleChange}\n              />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label> Issue </Form.Label>\n              <Form.Control\n                className=\"placeholder-text\"\n                type=\"text\"\n                name=\"category.issue\"\n                placeholder={placeholderText.Issue}\n                value={values.category.issue}\n                onChange={handleChange}\n              />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label> Pages </Form.Label>\n              <Form.Control\n                className=\"placeholder-text\"\n                type=\"text\"\n                name=\"category.pages\"\n                placeholder={placeholderText.Pages}\n                value={values.category.pages}\n                onChange={handleChange}\n              />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label> Publisher </Form.Label>\n              <Form.Control\n                className=\"placeholder-text\"\n                type=\"text\"\n                name=\"category.publisher\"\n                placeholder={placeholderText.Publisher}\n                value={values.category.publisher}\n                onChange={handleChange}\n              />\n            </Form.Group>\n\n            <Row>\n              <div className=\"ml-3\">\n                <OverlayTrigger\n                  trigger={['hover', 'focus']}\n                  placement=\"bottom\"\n                  overlay={renderTooltip}\n                >\n                  <DangerButton\n                    className=\"mr-2\"\n                    onClick={closeModal}\n                  >\n                    Cancel\n                  </DangerButton>\n                </OverlayTrigger>\n              </div>\n\n              <div className=\"ml-auto mr-3\">\n                <PrimaryButton\n                  className=\"mr-2\"\n                  onClick={() => prev(values)}\n                >\n                  {' '}\n                  Back\n                  {' '}\n                </PrimaryButton>\n                <PrimaryButton type=\"submit\"> Confirm </PrimaryButton>\n              </div>\n            </Row>\n          </Form>\n        )}\n      </Formik>\n    </>\n  );\n};\n\n// props validation\nCategoryPage.propTypes = {\n  next: PropTypes.func.isRequired,\n  prev: PropTypes.func.isRequired,\n  data: PropTypes.object.isRequired,\n  closeModal: PropTypes.func.isRequired,\n};\n\nexport default CategoryPage;\n","/**\n * The PublicationForm component displays a mutli-step publication form\n */\n\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  updatePublication,\n  createPublication,\n} from '../../../actions/publications';\nimport MainInfoPage from './MainInfoPage';\nimport CategoryPage from './CategoryPage';\nimport { categoryTypes } from '../../../config/publications';\n\nconst PublicationForm = (props) => {\n  const dispatch = useDispatch();\n  const teamId = useSelector((state) => state.team.teamId);\n  const [data, setData] = useState({\n    title: '',\n    yearPublished: new Date().getFullYear().toString(),\n    authors: [''],\n    description: '',\n    link: '',\n    category: {\n      type: categoryTypes.Journal,\n      categoryTitle: '',\n      volume: '',\n      issue: '',\n      pages: '',\n      publisher: '',\n    },\n    teamId,\n  });\n\n  const [currentStep, setCurrentStep] = useState(0);\n\n  const submitForm = (newData) => {\n    if (props.type === 'update') {\n      dispatch(updatePublication(props.pub._id, newData));\n    } else if (props.type === 'create') {\n      dispatch(createPublication(newData));\n    }\n    props.closeModal();\n  };\n\n  const handleNextStep = (newData, final = false) => {\n    setData((prev) => ({ ...prev, ...newData }));\n    if (final) {\n      submitForm(newData);\n      return;\n    }\n    setCurrentStep((prev) => prev + 1);\n  };\n\n  const handlePrevStep = (newData) => {\n    setData((prev) => ({ ...prev, ...newData }));\n    setCurrentStep((prev) => prev - 1);\n  };\n\n  const steps = [\n    <MainInfoPage\n      next={handleNextStep}\n      data={data}\n      type={props.type}\n      pub={props.pub}\n      closeModal={props.closeModal}\n    />,\n    <CategoryPage\n      next={handleNextStep}\n      prev={handlePrevStep}\n      data={data}\n      closeModal={props.closeModal}\n    />,\n  ];\n\n  return steps[currentStep];\n};\n\nexport default PublicationForm;\n","/**\n * The ImportedPublication component displays an individual imported publication when the import is success\n */\n\nimport { Form, Card, Collapse } from 'react-bootstrap';\nimport './importedPublication.css';\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { PropTypes } from 'prop-types';\n\nconst ImportedPublication = ({ pub, index, setChecked }) => {\n  const [expand, setExpand] = useState(false);\n  const { publicationsToImport } = useSelector(\n    (state) => state.importedPublications,\n  );\n  const { publications } = useSelector((state) => state.importedPublications);\n\n  const dropDown = (\n    <Collapse in={expand}>\n      <div className=\"ml-3\">\n        <h6>\n          {pub.category.type.charAt(0)\n            + pub.category.type.slice(1).toLowerCase()}\n          :\n          {` ${pub.category.categoryTitle}`}\n        </h6>\n        {pub.category.issue && (\n        <h6>\n          Issue:\n          {` ${pub.category.issue}`}\n        </h6>\n        )}\n        {pub.category.volume && (\n        <h6>\n          Volume:\n          {` ${pub.category.volume}`}\n        </h6>\n        )}\n        {pub.category.pages && (\n        <h6>\n          Pages:\n          {` ${pub.category.pages}`}\n        </h6>\n        )}\n        {pub.category.publisher && (\n          <h6>\n            Publisher:\n            {` ${pub.category.publisher}`}\n          </h6>\n        )}\n        <h6>\n          Description:\n          {` ${pub.description}`}\n        </h6>\n        {/* { pub.link && <h6> Link: <a style={{cursor: 'pointer'}} onClick={() => window.open(`${pub.link}`, '_blank')}>{pub.link} </a> </h6> } */}\n        {pub.link && (\n          <h6>\n            Link:\n            <a\n              href={pub.link}\n              style={{ cursor: 'pointer' }}\n              onClick={() => window.open(`${pub.link}`, '_blank')}\n            >\n              {` ${pub.link}`}\n            </a>\n          </h6>\n        )}\n      </div>\n    </Collapse>\n  );\n\n  const handleChange = () => {\n    setChecked(index);\n    setExpand(expand);\n  };\n\n  return (\n    <>\n      <Card onClick={() => setExpand(!expand)}>\n        <Card.Body>\n          <Form>\n            <Form.Group>\n              <div className=\"inputGroupWithCheckbox\">\n                <Form.Check\n                  type=\"checkbox\"\n                  checked={publicationsToImport[publications.indexOf(pub)]}\n                  onChange={handleChange}\n                />\n                <Card.Title>\n                  {' '}\n                  {pub.title}\n                  {' '}\n                </Card.Title>\n              </div>\n            </Form.Group>\n          </Form>\n\n          <Card.Subtitle className=\"m-3 text-muted\">\n            {' '}\n            {pub.authors.map((author) => `${author}`).join(', ')}\n            {' '}\n          </Card.Subtitle>\n          <h6 className=\"ml-3\">\n            {' '}\n            Year Published:\n            {` ${pub.yearPublished}`}\n          </h6>\n          {dropDown}\n        </Card.Body>\n      </Card>\n    </>\n  );\n};\n\n// props validation\nImportedPublication.propTypes = {\n  pub: PropTypes.object.isRequired,\n  index: PropTypes.number.isRequired,\n  setChecked: PropTypes.func.isRequired,\n};\n\nexport default ImportedPublication;\n","import { useState } from 'react';\nimport { FaAngleLeft, FaAngleRight } from 'react-icons/fa';\nimport styled from 'styled-components';\n\nconst ArrowButton = styled.button`\n  color: #b8b5b5 !important;\n  border: 1px none ;\n  border-radius: 3px;\n  transition: all 0.3s ease 0s;\n  ${({ hover }) => (hover\n    && 'color: #494949 !important; &:hover { background: lightgray }')\n}\n`;\n\nconst usePagination = (data, itemPerPage) => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const maxPage = Math.ceil(data.length / itemPerPage);\n  const currentData = () => {\n    if (data.length > 0) {\n      const start = (currentPage - 1) * itemPerPage;\n      const end = start + itemPerPage;\n      const dataOnCurrentPage = data.slice(start, end);\n      if (dataOnCurrentPage.length === 0) { // check if the current page has data (user might delete all data on the current page)\n        setCurrentPage(maxPage);\n        return data.slice(maxPage - 1 * itemPerPage);\n      }\n      return dataOnCurrentPage;\n    }\n    return [];\n  };\n  const nextPage = () => {\n    setCurrentPage(() => Math.min(currentPage + 1, maxPage));\n  };\n  const prevPage = () => {\n    setCurrentPage(() => Math.max(currentPage - 1, 1));\n  };\n  const pagination = () => (\n    <div style={{ paddingBottom: '5px' }}>\n      {\n          currentData().length === 1\n            ? ((currentPage - 1) * itemPerPage + 1)\n            : (\n              <>\n                {(currentPage - 1) * itemPerPage + 1}\n                -\n                {(currentPage - 1) * itemPerPage + currentData().length}\n              </>\n            )\n          }\n      {' '}\n      of\n      {' '}\n      { data.length }\n      {' '}\n      <ArrowButton onClick={prevPage} hover={currentPage !== 1}>\n        <FaAngleLeft />\n      </ArrowButton>\n      <ArrowButton onClick={nextPage} hover={currentPage !== maxPage}>\n        <FaAngleRight />\n      </ArrowButton>\n    </div>\n  );\n\n  return { currentData, pagination };\n};\n\nexport default usePagination;\n","/**\n * The ImportSucessPage component displays a list of publications returned by scholar api if the import is success\n */\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport React from 'react';\nimport {\n  Row,\n  Tooltip,\n  OverlayTrigger,\n} from 'react-bootstrap';\nimport { PropTypes } from 'prop-types';\nimport ImportedPublication from '../importedPublication/ImportedPublication';\nimport {\n  createBulkPublications,\n  importPublications,\n} from '../../../actions/publications';\nimport {\n  IMPORT_CLEAR_STATE,\n  UPDATE_PUBLICATIONS_TO_IMPORT,\n} from '../../../actions/types';\nimport { pageSize } from '../../../config/publications';\nimport usePagination from '../../shared/usePagination';\nimport ConditionalWrapper from '../../shared/ConditionalWrapper';\nimport { PrimaryButton, DangerButton } from '../../shared/styledComponents';\n\nconst ImportSuccessPage = ({ closeModal }) => {\n  const teamId = useSelector((state) => state.team.teamId);\n  const dispatch = useDispatch();\n  const {\n    publications,\n    startFrom,\n    gScholarId,\n    reachedEnd,\n    publicationsToImport,\n  } = useSelector((state) => state.importedPublications);\n  const { currentData, pagination } = usePagination(publications, pageSize);\n\n  const checkPublication = (index) => {\n    const chosenPublication = currentData()[index];\n    const globalIndex = publications.indexOf(chosenPublication);\n    const newCheckArray = publicationsToImport;\n    newCheckArray[globalIndex] = !newCheckArray[globalIndex];\n    dispatch({\n      type: UPDATE_PUBLICATIONS_TO_IMPORT,\n      payload: newCheckArray,\n    });\n    return newCheckArray[index];\n  };\n\n  const renderNoPublicationsSelectedTooltip = (props) => (\n    <Tooltip id=\"button-tooltip\" {...props}>\n      No publications are selected\n    </Tooltip>\n  );\n\n  const renderEndOfPublicationsTooltip = (props) => (\n    <Tooltip id=\"button-tooltip\" {...props}>\n      All publications have been retrieved\n    </Tooltip>\n  );\n\n  const renderTooltip = (props) => (\n    <Tooltip id=\"button-tooltip\" {...props}>\n      You will lose your progress\n    </Tooltip>\n  );\n\n  const handleClose = () => {\n    closeModal();\n    dispatch({\n      type: IMPORT_CLEAR_STATE,\n    });\n  };\n\n  const handlePagination = () => {\n    dispatch(importPublications(gScholarId, startFrom, teamId));\n  };\n\n  const handleConfirmImport = () => {\n    let checkedPublications = publications.filter(\n      (pub, idx) => publicationsToImport[idx],\n    );\n    for (let i = 0; i < checkedPublications.length; i++) {\n      checkedPublications[i].yearPublished = `${checkedPublications[i].yearPublished.toString()}-01-01`;\n    }\n    checkedPublications = checkedPublications.map((pub) => ({\n      ...pub,\n      teamId,\n    }));\n    dispatch(createBulkPublications(teamId, checkedPublications));\n    handleClose();\n  };\n\n  return (\n    <>\n      {currentData().map((pub, idx) => (\n        <ImportedPublication\n          key={pub}\n          pub={pub}\n          index={idx}\n          setChecked={checkPublication}\n        />\n      ))}\n      <div style={{ display: 'flex', justifyContent: 'center' }}>\n        {publications.length > 0 ? (\n          pagination()\n        ) : (\n          <h4>No publications retrieved so far...</h4>\n        )}\n      </div>\n      <Row>\n        <div className=\"mt-2 ml-3\">\n          <OverlayTrigger\n            trigger={['hover', 'focus']}\n            placement=\"bottom\"\n            overlay={renderTooltip}\n          >\n            <DangerButton\n              className=\"mr-2\"\n              onClick={handleClose}\n            >\n              Cancel\n            </DangerButton>\n          </OverlayTrigger>\n        </div>\n        <ConditionalWrapper\n          condition={reachedEnd}\n          wrapper={(children) => (\n            <OverlayTrigger\n              placement=\"bottom\"\n              overlay={renderEndOfPublicationsTooltip}\n            >\n              {children}\n            </OverlayTrigger>\n          )}\n        >\n          <div\n            className=\"mt-2 ml-auto mr-3 text-center\"\n            style={{ display: 'inline-block', cursor: 'not-allowed' }}\n          >\n            <PrimaryButton\n              disabled={reachedEnd}\n              onClick={handlePagination}\n              style={reachedEnd ? { pointerEvents: 'none' } : {}}\n            >\n              Show more\n            </PrimaryButton>\n          </div>\n        </ConditionalWrapper>\n\n        <div className=\"mt-2 ml-auto mr-3\">\n          <ConditionalWrapper\n            condition={!publicationsToImport.includes(true)}\n            wrapper={(children) => (\n              <OverlayTrigger\n                placement=\"bottom\"\n                overlay={renderNoPublicationsSelectedTooltip}\n              >\n                {children}\n              </OverlayTrigger>\n            )}\n          >\n            <div style={{ display: 'inline-block', cursor: 'not-allowed' }}>\n              <PrimaryButton\n                disabled={!publicationsToImport.includes(true)}\n                style={\n                  !publicationsToImport.includes(true)\n                    ? { pointerEvents: 'none' }\n                    : {}\n                }\n                onClick={handleConfirmImport}\n              >\n                Import\n              </PrimaryButton>\n            </div>\n          </ConditionalWrapper>\n        </div>\n      </Row>\n    </>\n  );\n};\n\n// props validation\nImportSuccessPage.propTypes = {\n  closeModal: PropTypes.func.isRequired,\n};\n\nexport default ImportSuccessPage;\n","/**\n * The ImportFailPage component displays an error message sent by scholar api if the import is failed\n */\n\nimport { Alert, Row } from 'react-bootstrap';\n\nimport { PropTypes } from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { IMPORT_CLEAR_STATE } from '../../../actions/types';\nimport { DangerButton } from '../../shared/styledComponents';\n\nconst ImportFailPage = ({ closeModal }) => {\n  const dispatch = useDispatch();\n\n  const handleClose = () => {\n    closeModal();\n    dispatch({\n      type: IMPORT_CLEAR_STATE,\n    });\n  };\n\n  return (\n    <>\n      <Alert variant=\"danger\">We were unable to import your publications.</Alert>\n      <Row>\n        <div className=\"ml-auto mt-3 mr-3\">\n          <DangerButton\n            className=\"mr-2\"\n            onClick={handleClose}\n          >\n            Close\n          </DangerButton>\n        </div>\n      </Row>\n    </>\n  );\n};\n\n// props validation\nImportFailPage.propTypes = {\n  closeModal: PropTypes.func.isRequired,\n};\n\nexport default ImportFailPage;\n","import { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  Row, InputGroup, Form,\n} from 'react-bootstrap';\nimport { BsFillPersonFill } from 'react-icons/bs';\nimport { PropTypes } from 'prop-types';\nimport { importPublications } from '../../../actions/publications';\nimport { IMPORT_FAIL, UPDATE_GSCHOLAR_ID } from '../../../actions/types';\nimport '../publications.css';\nimport { PrimaryButton, DangerButton } from '../../shared/styledComponents';\n\nconst ProfileLinkPage = ({ closeModal }) => {\n  const teamId = useSelector((state) => state.team.teamId);\n  const dispatch = useDispatch();\n  let gScholarId;\n\n  const validationSchema = yup.object({\n    profileLink: yup\n      .string()\n      .required('Please provide Google Scholar Profile Link'),\n  });\n  const initValues = {\n    profileLink: '',\n  };\n\n  const validation = (values) => {\n    // extracting the authorId from the profileLink\n    const position = values.profileLink.indexOf('user=');\n    if (position === -1) {\n      dispatch({\n        type: IMPORT_FAIL,\n        payload: 'Please provide a valid profile link',\n      });\n      return false;\n    }\n    gScholarId = values.profileLink.substring(position + 5, position + 17);\n    dispatch({\n      type: UPDATE_GSCHOLAR_ID,\n      payload: gScholarId,\n    });\n    return true;\n  };\n\n  const submitForm = (values) => {\n    if (validation(values)) {\n      dispatch(importPublications(gScholarId, 0, teamId));\n    }\n  };\n\n  return (\n    <Formik\n      enableReinitialize\n      validationSchema={validationSchema}\n      onSubmit={submitForm}\n      initialValues={initValues}\n    >\n      {({\n        handleSubmit, handleChange, values, touched, errors,\n      }) => (\n        <Form noValidate onSubmit={handleSubmit}>\n          <Form.Group>\n            <Form.Label>\n              Enter your Google Scholar profile link below:\n            </Form.Label>\n            <InputGroup className=\"mb-3\">\n              <InputGroup.Prepend>\n                <InputGroup.Text>\n                  <BsFillPersonFill />\n                </InputGroup.Text>\n              </InputGroup.Prepend>\n              <Form.Control\n                className=\"placeholder-text\"\n                type=\"text\"\n                name=\"profileLink\"\n                placeholder=\"https://scholar.google.com.sg/citations?user=3tyGlPsAAAAJ\"\n                value={values.profileLink}\n                onChange={handleChange}\n                isInvalid={touched.profileLink && errors.profileLink}\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                {errors.profileLink}\n              </Form.Control.Feedback>\n            </InputGroup>\n          </Form.Group>\n\n          <Row>\n            <div className=\"ml-auto mr-3\">\n              <DangerButton\n                className=\"mr-2\"\n                onClick={closeModal}\n              >\n                Cancel\n              </DangerButton>\n              <PrimaryButton variant=\"primary\" type=\"submit\">\n                {' '}\n                Confirm\n                {' '}\n              </PrimaryButton>\n            </div>\n          </Row>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\n// props validation\nProfileLinkPage.propTypes = {\n  closeModal: PropTypes.func.isRequired,\n};\n\nexport default ProfileLinkPage;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Spinner } from 'react-bootstrap';\nimport { PropTypes } from 'prop-types';\nimport ImportSuccessPage from './ImportSuccessPage';\nimport ImportFailPage from './ImportFailPage';\nimport ProfileLinkPage from './ProfileLinkPage';\n\nconst ImportForm = ({ closeModal }) => {\n  const { importStatus, loading } = useSelector(\n    (state) => state.importedPublications,\n  );\n\n  const displayResult = () => {\n    switch (importStatus) {\n      case 'SUCCESS':\n        return <ImportSuccessPage closeModal={closeModal} />;\n      case 'FAIL':\n        return <ImportFailPage closeModal={closeModal} />;\n      default:\n        return <ProfileLinkPage closeModal={closeModal} />;\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"mb-3 mt-3 text-center\">\n        <Spinner animation=\"border\" />\n      </div>\n    );\n  } if (importStatus !== null) {\n    return (<div>{displayResult()}</div>);\n  }\n  return (<ProfileLinkPage closeModal={closeModal} />);\n};\n\n// props validation\nImportForm.propTypes = {\n  closeModal: PropTypes.func.isRequired,\n};\n\n// props validation\nImportForm.propTypes = {\n  closeModal: PropTypes.func.isRequired,\n};\n\nexport default ImportForm;\n","import React from 'react';\nimport { Dropdown, Row, Col } from 'react-bootstrap';\nimport { useDispatch } from 'react-redux';\nimport styled from 'styled-components';\nimport { PropTypes } from 'prop-types';\nimport { sortingOptions, groupByOptions } from '../../../config/publications';\nimport { updatePublicationOptions } from '../../../actions/website';\nimport '../publications.css';\nimport { PrimaryButton } from '../../shared/styledComponents';\n\nexport const StyledButtonGroup = styled.div`\n  background-color: transparent;\n  border-radius: 0;\n  padding: 5px;\n  color: black;\n`;\n\nexport const ButtonGroupItem = styled.button` \n  background: #ededed;\n  border: 1px solid ${(props) => props.borderColor || '#ccc'};\n  padding: 1px 8px;\n  border-radius: 3px;\n  cursor: pointer;\n  font-family: \"Trebuchet MS\", \"Lucida Sans Unicode\", \"Lucida Grande\";\n  width: auto;\n  transition: all 0.2s ease 0s;\n  color: ${(props) => props.color};\n  &:hover{\n    background: ${(props) => props.hoverBorderColor || 'lightgrey'};\n    color: ${(props) => props.hoverColor};\n  }\n  ${({ press }) => (press\n    && 'color: #4d4d4d; background: #ededed; outline: none; -webkit-box-shadow: inset 0px 0px 10px #c1c1c1; -moz-box-shadow: inset 0px 0px 10px #c1c1c1; box-shadow: inset 0px 0px 10px #c1c1c1;&:hover { background: #BEBEBE }'\n  )\n}\n`;\n\nexport const StyledDropdownToggle = styled(Dropdown.Toggle)` //Purple\n    padding: .375rem .75rem;\n    border: 1px solid #56658a;\n    border-radius: .25rem;\n    background-color: #56658a;\n    color: white;\n    transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n    font-size: ${(props) => props.fontSize};\n  &:not(:disabled){\n    background-color:#56658a !important;\n  }\n  &:not(:disabled):hover{\n    background-color:rgb(60, 70, 96) !important;\n  }\n`;\n\n// export const StyledDropdownToggle = styled(Dropdown.Toggle)` //Gold\n//     padding: .375rem .75rem;\n//     border: 1px solid #AB9671;\n//     border-radius: .25rem;\n//     border-color: #AB9671;\n//     background-color: #AB9671;\n//     color: white;\n//     transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n//     font-size: ${(props) => props.fontSize};\n//   &:not(:disabled){\n//     background-color:#AB9671 !important;\n//   }\n//   &:not(:disabled):hover{\n//     background-color:rgb(119, 105, 79) !important;\n//   }\n// `;\n\nexport const StyledDropdowItem = styled(Dropdown.Item)`\n  &:not(:disabled):hover{\n    background-color:#F6F6F6 !important;\n  }\n`;\n\nconst PublicationsEditor = ({\n  options,\n  setOptions,\n  publications,\n  teamId,\n  sortPublications,\n  setShowCreateForm,\n  setShowImportForm,\n}) => {\n  const dispatch = useDispatch();\n\n  const handleUpdate = () => {\n    dispatch(updatePublicationOptions(teamId, options));\n  };\n  return (\n    <Row>\n      <Col md={1} sm={2}>\n        <StyledButtonGroup>\n          <Dropdown>\n            <StyledDropdownToggle size=\"sm\">\n              Add\n            </StyledDropdownToggle>\n            <Dropdown.Menu>\n              <StyledDropdowItem onClick={() => setShowCreateForm(true)}>Add Manually</StyledDropdowItem>\n              <StyledDropdowItem onClick={() => setShowImportForm(true)}>Import Publications</StyledDropdowItem>\n            </Dropdown.Menu>\n          </Dropdown>\n        </StyledButtonGroup>\n      </Col>\n\n      <Col md={4} sm={4}>\n        <StyledButtonGroup>\n          Group By\n          {' '}\n          {Object.keys(groupByOptions).map((groupBy) => (\n            <ButtonGroupItem\n              color=\"grey\"\n              press={options.groupBy === groupByOptions[groupBy]}\n              key={groupBy}\n              onClick={() => setOptions({ ...options, groupBy: groupByOptions[groupBy] })}\n            >\n              {groupByOptions[groupBy]}\n            </ButtonGroupItem>\n          ))}\n        </StyledButtonGroup>\n      </Col>\n\n      <Col md={5} sm={4}>\n        <StyledButtonGroup>\n          Sort By\n          {' '}\n          {Object.keys(sortingOptions).map((sortBy) => (\n            <ButtonGroupItem\n              color=\"grey\"\n              press={options.sortBy === sortingOptions[sortBy]}\n              key={sortBy}\n              value={sortingOptions[sortBy]}\n              onClick={(e) => {\n                setOptions({ ...options, sortBy: sortingOptions[sortBy] });\n                sortPublications(publications, e.target.value);\n              }}\n            >\n              {sortingOptions[sortBy]}\n            </ButtonGroupItem>\n          ))}\n          {options.groupBy === groupByOptions.CATEGORY\n                && (\n                <ButtonGroupItem\n                  color=\"grey\"\n                  press={options.sortBy === 'Category Title'}\n                  value=\"Category Title\"\n                  onClick={(e) => {\n                    setOptions({ ...options, sortBy: e.target.value });\n                    sortPublications(publications, e.target.value);\n                  }}\n                >\n                  Category Title\n                </ButtonGroupItem>\n                )}\n        </StyledButtonGroup>\n      </Col>\n\n      <Col md={2} sm={2}>\n        <StyledButtonGroup>\n          <PrimaryButton\n            fontSize=\"0.875rem\"\n            onClick={handleUpdate}\n          >\n            Update Layout\n          </PrimaryButton>\n        </StyledButtonGroup>\n      </Col>\n    </Row>\n  );\n};\n// props validation\nPublicationsEditor.propTypes = {\n  options: PropTypes.object.isRequired,\n  setOptions: PropTypes.func.isRequired,\n  publications: PropTypes.array.isRequired,\n  teamId: PropTypes.string.isRequired,\n  sortPublications: PropTypes.func.isRequired,\n  setShowCreateForm: PropTypes.func.isRequired,\n  setShowImportForm: PropTypes.func.isRequired,\n};\nexport default PublicationsEditor;\n","/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n/**\n * The Publication component displays a single publication details\n */\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport React, { useState, useEffect } from 'react';\nimport {\n  Modal,\n  Row,\n  Col,\n  Collapse,\n} from 'react-bootstrap';\nimport { RiEdit2Line, RiDeleteBin6Line } from 'react-icons/ri';\nimport { PropTypes } from 'prop-types';\nimport PublicationForm from '../form/PublicationForm';\nimport { StyledButtonGroup, ButtonGroupItem } from '../publicationsLayout/PublicationsEditor';\nimport { deletePublication } from '../../../actions/publications';\nimport { CHECK_PUBLICATIONS, UNCHECK_PUBLICATIONS } from '../../../actions/types';\nimport '../publications.css';\nimport { SecondaryButton, DangerButton } from '../../shared/styledComponents';\n\nconst Publication = ({ pub }) => {\n  const dispatch = useDispatch();\n  const [newlyAdded, setNewlyAdded] = useState(false);\n  const [showUpdateForm, setShowUpdateForm] = useState(false);\n  const [showDeleteMessage, setShowDeleteMessage] = useState(false);\n  const [expand, setExpand] = useState(false);\n  const [isHovering, setIsHovering] = useState(false);\n  const { checkedPublications } = useSelector((state) => state.publications);\n\n  useEffect(() => {\n    if (pub.isNewlyAdded) {\n      delete pub.isNewlyAdded;\n      setInterval(() => {\n        setNewlyAdded(false);\n      }, 2500);\n      setNewlyAdded(true);\n    }\n  }, [pub]);\n\n  const handleDelete = () => {\n    dispatch(deletePublication(pub._id));\n    setShowDeleteMessage(false);\n  };\n\n  const dropDown = (\n    <Collapse in={expand}>\n      <div className=\"pub\" onClick={() => setExpand(!expand)}>\n        <div className=\"pubs-props\">\n          {' '}\n          <b>Description:</b>\n          {' '}\n          {pub.description}\n          {' '}\n        </div>\n        <div className=\"pubs-props\">\n          <b>\n            {pub.category.type.charAt(0)\n              + pub.category.type.slice(1).toLowerCase()}\n            :\n          </b>\n          {' '}\n          {pub.category.categoryTitle}\n          {' '}\n        </div>\n        {pub.category.issue && (\n          <div className=\"pubs-props\">\n            {' '}\n            <b>Issue:</b>\n            {' '}\n            {pub.category.issue}\n            {' '}\n          </div>\n        )}\n        {pub.category.volume && (\n          <div className=\"pubs-props\">\n            {' '}\n            <b>Volume:</b>\n            {' '}\n            {pub.category.volume}\n            {' '}\n          </div>\n        )}\n        {pub.category.pages && (\n          <div className=\"pubs-props\">\n            {' '}\n            <b>Pages:</b>\n            {' '}\n            {pub.category.pages}\n            {' '}\n          </div>\n        )}\n        {pub.category.publisher && (\n          <div className=\"pubs-props\">\n            {' '}\n            <b>Publisher:</b>\n            {' '}\n            {pub.category.publisher}\n            {' '}\n          </div>\n        )}\n      </div>\n    </Collapse>\n  );\n\n  const handleMouseOver = () => {\n    setIsHovering(true);\n  };\n\n  const handleMouseLeave = () => {\n    setIsHovering(false);\n  };\n\n  const handleCheck = () => {\n    if (checkedPublications.includes(pub._id)) {\n      dispatch({\n        type: UNCHECK_PUBLICATIONS,\n        payload: [pub._id],\n      });\n    } else {\n      dispatch({\n        type: CHECK_PUBLICATIONS,\n        payload: [pub._id],\n      });\n    }\n  };\n\n  return (\n    <div className=\"publication-container\" onMouseOver={handleMouseOver} onFocus={handleMouseOver} onMouseLeave={handleMouseLeave} onBlur={handleMouseLeave}>\n      <div\n        className={newlyAdded ? 'newlyAddedPublicationHeader' : 'modalHeader'}\n      >\n        <Row>\n          <Col md={10} onClick={handleCheck}>\n            <div style={{ display: 'flex' }}>\n              <div style={{ paddingTop: '10px', paddingLeft: '10px' }}>\n                <input type=\"checkbox\" checked={checkedPublications.includes(pub._id) || false} onChange={handleCheck} />\n              </div>\n              <div className=\"pubs-title\">\n                {pub.link ? (\n                  <a href={pub.link} target=\"_blank\" rel=\"noreferrer\">\n                    {pub.title}\n                  </a>\n                ) : (\n                  pub.title\n                )}\n              </div>\n            </div>\n          </Col>\n          <Col md={2}>\n            {\n              isHovering\n            && (\n            <StyledButtonGroup className=\"float-right\">\n              <ButtonGroupItem color=\"#56658a\" onClick={() => setShowUpdateForm(true)}><RiEdit2Line /></ButtonGroupItem>\n              <ButtonGroupItem color=\"#9c503d\" hoverBorderColor=\"#9c503d\" hoverColor=\"white\" onClick={() => setShowDeleteMessage(true)}>\n                <RiDeleteBin6Line />\n              </ButtonGroupItem>\n            </StyledButtonGroup>\n            )\n            }\n          </Col>\n        </Row>\n      </div>\n\n      <div className=\"pub\" onClick={() => setExpand(!expand)}>\n        <div className=\"pubs-props\">\n          <b> Authors: </b>\n          {pub.authors.map((author) => `${author}`).join(', ')}\n        </div>\n        <div className=\"pubs-props\">\n          {' '}\n          <b>Year Published: </b>\n          {pub.yearPublished}\n          {' '}\n        </div>\n      </div>\n\n      {dropDown}\n\n      {/* A modal for showing update publication from */}\n      <Modal show={showUpdateForm}>\n        <Modal.Header className=\"modalHeader\">\n          <Modal.Title> Edit Publication </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <PublicationForm\n            type=\"update\"\n            pub={pub}\n            closeModal={() => setShowUpdateForm(false)}\n          />\n        </Modal.Body>\n      </Modal>\n\n      {/* A modal for showing confirm delete message */}\n      <Modal show={showDeleteMessage}>\n        <Modal.Header className=\"modalHeader\">\n          <Modal.Title> Delete Publication </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          Are you sure you want to delete this publication?\n        </Modal.Body>\n        <Modal.Footer>\n          <SecondaryButton onClick={() => setShowDeleteMessage(false)}>\n            {' '}\n            Cancel\n            {' '}\n          </SecondaryButton>\n          <DangerButton onClick={handleDelete}>\n            {' '}\n            Confirm\n            {' '}\n          </DangerButton>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  );\n};\n\n// props validation\nPublication.propTypes = {\n  pub: PropTypes.object.isRequired,\n};\n\nexport default Publication;\n","/**\n * The GroupByNone component displays a list of publications\n */\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RiDeleteBin6Line } from 'react-icons/ri';\nimport {\n  Row, Col, Modal, Button,\n} from 'react-bootstrap';\nimport { PropTypes } from 'prop-types';\nimport usePagination from '../../shared/usePagination';\nimport Publication from '../publication/Publication';\nimport { pageSize as configPageSize } from '../../../config/publications';\nimport { CHECK_PUBLICATIONS, UNCHECK_PUBLICATIONS } from '../../../actions/types';\nimport { deleteBatchPublications } from '../../../actions/publications';\nimport { ButtonGroupItem } from './PublicationsEditor';\n\nconst GroupByNone = ({ teamPublications, pageSize, groupBy }) => {\n  const { currentData, pagination } = usePagination(teamPublications, pageSize || configPageSize);\n  const [checkAll, setCheckAll] = useState(false);\n  const [checkedCounter, setCheckedCounter] = useState(0);\n  const dispatch = useDispatch();\n  const { checkedPublications } = useSelector((state) => state.publications);\n  const [showDeleteMessage, setShowDeleteMessage] = useState(false);\n\n  useEffect(() => {\n    let count = 0;\n    teamPublications.forEach((pub) => {\n      if (checkedPublications.includes(pub._id)) count += 1;\n    });\n    setCheckedCounter(count);\n  }, [checkAll, checkedPublications, teamPublications]);\n\n  const handleChange = () => {\n    if (checkAll) {\n      dispatch({\n        type: UNCHECK_PUBLICATIONS,\n        payload: teamPublications.map((pub) => pub._id),\n      });\n    } else {\n      dispatch({\n        type: CHECK_PUBLICATIONS,\n        payload: teamPublications.map((pub) => pub._id),\n      });\n    }\n    setCheckAll(!checkAll);\n  };\n\n  const handleDelete = () => {\n    const publicationIdList = teamPublications.filter((pub) => checkedPublications.includes(pub._id));\n    dispatch(deleteBatchPublications(publicationIdList.map((pub) => pub._id)));\n    setCheckedCounter(0);\n    setShowDeleteMessage(false);\n  };\n\n  return (\n    <>\n      <div className=\"publicationList\">\n        <Row>\n          <Col>\n            <div style={{ padding: '10px', fontSize: '15px' }}>\n              <input type=\"checkbox\" checked={checkedCounter === teamPublications.length} onChange={handleChange} />\n              {' '}\n              { checkedCounter > 0 ? (\n                <>\n                  <ButtonGroupItem borderColor=\"#9c503d\" color=\"#9c503d\" hoverBorderColor=\"#9c503d\" hoverColor=\"white\" onClick={() => setShowDeleteMessage(true)}>\n                    <RiDeleteBin6Line />\n                    {' '}\n                    {checkedCounter}\n                    {' '}\n                    Publications\n                    {' '}\n                  </ButtonGroupItem>\n                </>\n              )\n                : 'Select All'}\n            </div>\n          </Col>\n          <Col>\n            <h5 className=\"text-center\">\n              {groupBy || ' '}\n            </h5>\n          </Col>\n          <Col>\n            <div className=\"float-right\">\n              { pagination() }\n            </div>\n          </Col>\n        </Row>\n        {\n        currentData().map((pub) => (\n          <Publication pub={pub} key={pub._id} />))\n      }\n      </div>\n\n      {/* A modal for showing confirm delete message */}\n      <Modal show={showDeleteMessage}>\n        <Modal.Header className=\"modalHeader\">\n          <Modal.Title> Delete Publications </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          Are you sure you want to delete\n          {' '}\n          {checkedCounter}\n          {' '}\n          publication(s)?\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"light\" onClick={() => setShowDeleteMessage(false)}>\n            {' '}\n            Cancel\n            {' '}\n          </Button>\n          <Button variant=\"danger\" onClick={handleDelete}>\n            {' '}\n            Confirm\n            {' '}\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\n// props validation\nGroupByNone.propTypes = {\n  teamPublications: PropTypes.array.isRequired,\n  pageSize: PropTypes.number,\n  groupBy: PropTypes.string,\n};\nGroupByNone.defaultProps = {\n  pageSize: 10,\n  groupBy: null,\n};\n\nexport default GroupByNone;\n","/**\n * The GroupByCategory component displays a list of publications group by category type selcted by user\n */\n\nimport { categoryTypes, categoryPageSize } from '../../../config/publications';\nimport GroupByNone from './GroupByNone';\n\nconst GroupByCategory = ({ teamPublications, setCheckedPublicationId }) => {\n  const renderPublicationsByCategory = (categoryType) => {\n    const publicationsByCategory = teamPublications.filter(\n      (pub) => pub.category.type === categoryType,\n    );\n    return (\n      publicationsByCategory.length > 0 && (\n      <GroupByNone\n        teamPublications={publicationsByCategory}\n        pageSize={categoryPageSize}\n        groupBy={categoryType}\n        setCheckedPublications={setCheckedPublicationId}\n      />\n      )\n    );\n  };\n  return Object.keys(categoryTypes).map((category) => (\n    <div key={category}>\n      {renderPublicationsByCategory(category)}\n    </div>\n  ));\n};\n\nexport default GroupByCategory;\n","/**\n * The Publications component displays a list of publications\n */\n\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  Modal, Alert, Jumbotron, Container,\n} from 'react-bootstrap';\nimport { getPublicationsByTeamId } from '../../actions/publications';\nimport PublicationForm from './form/PublicationForm';\nimport ImportForm from './form/ImportForm';\nimport './publications.css';\nimport GroupByNone from './publicationsLayout/GroupByNone';\nimport GroupByCategory from './publicationsLayout/GroupByCategory';\nimport PublicationsEditor from './publicationsLayout/PublicationsEditor';\nimport { groupByOptions, sortingOptions } from '../../config/publications';\nimport { REVERT_HEADER_COLOR } from '../../actions/types';\n\nconst Publications = () => {\n  const dispatch = useDispatch();\n  const teamId = useSelector((state) => state.team.teamId);\n  const { publicationOptions } = useSelector((state) => state.website);\n  const { loading, teamPublications } = useSelector((state) => state.publications);\n  const [showCreateForm, setShowCreateForm] = useState(false);\n  const [showImportForm, setShowImportForm] = useState(false);\n  const [options, setOptions] = useState(publicationOptions);\n  const [publications, setPublications] = useState(teamPublications);\n\n  useEffect(() => {\n    if (teamId) {\n      dispatch(getPublicationsByTeamId(teamId));\n    }\n  }, [dispatch, teamId]);\n\n  useEffect(() => {\n    setOptions(publicationOptions);\n  }, [publicationOptions]);\n\n  const renderPublications = useCallback(() => {\n    switch (options.groupBy) {\n      case groupByOptions.CATEGORY:\n        return <GroupByCategory teamPublications={publications} />;\n      default:\n        return <GroupByNone teamPublications={publications} />;\n    }\n  }, [options, publications, teamPublications]);\n\n  const sortPublications = (publicationToBeSorted, option) => {\n    switch (option) {\n      case sortingOptions.AUTHOR:\n        publicationToBeSorted.sort((a, b) => {\n          if (a.authors[0].toLowerCase() > b.authors[0].toLowerCase()) return 1;\n          if (a.authors[0].toLowerCase() < b.authors[0].toLowerCase()) return -1;\n          return 0;\n        });\n        break;\n      case sortingOptions.TITLE:\n        // publication title\n        publicationToBeSorted.sort((a, b) => {\n          if (a.title.toLowerCase() > b.title.toLowerCase()) return 1;\n          if (a.title.toLowerCase() < b.title.toLowerCase()) return -1;\n          return 0;\n        });\n        break;\n      case sortingOptions.YEAR:\n        // year\n        publicationToBeSorted.sort((a, b) => {\n          if (a.year > b.year) return -1;\n          if (a.year < b.year) return 1;\n          return 0;\n        });\n        break;\n      case 'Category Title':\n        // journal or conference title\n        publicationToBeSorted.sort((a, b) => {\n          if (a.category.categoryTitle.toLowerCase() > b.category.categoryTitle.toLowerCase()) return 1;\n          if (a.category.categoryTitle.toLowerCase() < b.category.categoryTitle.toLowerCase()) return -1;\n          return 0;\n        });\n        break;\n      default:\n        // sort by title then year for consistency with the db\n        publicationToBeSorted.sort((a, b) => {\n          if (a.title.toLowerCase() > b.title.toLowerCase()) return 1;\n          if (a.title.toLowerCase() < b.title.toLowerCase()) return -1;\n          return 0;\n        });\n        publicationToBeSorted.sort((a, b) => {\n          if (a.year > b.year) return -1;\n          if (a.year < b.year) return 1;\n          return 0;\n        });\n        break;\n    }\n    return publicationToBeSorted;\n  };\n\n  useEffect(() => {\n    const sortedPublication = sortPublications(teamPublications, options.sortBy);\n    setPublications(sortedPublication);\n    const newlyAddedPublications = teamPublications.filter((pub) => pub.isNewlyAdded);\n    if (newlyAddedPublications.length > 0) {\n      setTimeout(() => {\n        dispatch({\n          type: REVERT_HEADER_COLOR,\n          payload: newlyAddedPublications,\n        });\n      }, 2500);\n    }\n  }, [teamPublications]);\n\n  return (\n    <Jumbotron style={{ minHeight: '85vH', height: 'auto' }}>\n      <Container className=\"publication-editor\">\n        <div>\n          <PublicationsEditor\n            options={options}\n            setOptions={setOptions}\n            sortPublications={sortPublications}\n            publications={publications}\n            teamId={teamId}\n            setShowCreateForm={setShowCreateForm}\n            setShowImportForm={setShowImportForm}\n          />\n        </div>\n      </Container>\n\n      {teamPublications.length === 0 && !loading ? (\n        <div style={{ marginTop: '30px' }} className=\"publicationList\">\n          <Alert variant=\"primary\">\n            There is no publication for this team. Please add or import\n            publications.\n          </Alert>\n        </div>\n      ) : (\n        renderPublications()\n      )}\n\n      {/* A modal for showing create publication form */}\n      <Modal show={showCreateForm}>\n        <Modal.Header className=\"modalHeader\">\n          <Modal.Title> New Publication </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <PublicationForm\n            type=\"create\"\n            closeModal={() => setShowCreateForm(false)}\n          />\n        </Modal.Body>\n      </Modal>\n\n      {/* A modal for showing import publication form */}\n      <Modal size=\"lg\" show={showImportForm}>\n        <Modal.Header className=\"modalHeader\">\n          <Modal.Title> Import from Google Scholar </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <ImportForm closeModal={() => setShowImportForm(false)} />\n        </Modal.Body>\n      </Modal>\n    </Jumbotron>\n  );\n};\n\nexport default Publications;\n","/**\n * The PublicationPage component renders TwitterFeed component and Publications component .\n */\n\nimport React from 'react';\nimport Publications from './Publications';\n\nconst PublicationPage = () => (\n  <>\n    <Publications />\n  </>\n);\n\nexport default PublicationPage;\n","/**\n * The TeamMemberForm component displays a team member form, which is used fro creating and updating team member\n */\n\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  Row, Tooltip, OverlayTrigger, Form,\n} from 'react-bootstrap';\nimport { PropTypes } from 'prop-types';\nimport { createTeamMember, updateTeamMember } from '../../../actions/team';\n\nimport { PrimaryButton, DangerButton } from '../../shared/styledComponents';\n\nconst TeamMemberForm = ({ closeModal, member, type }) => {\n  const dispatch = useDispatch();\n  const teamId = useSelector((state) => state.team.teamId);\n  const validationSchema = yup.object({\n    fullName: yup\n      .string()\n      .required('Name is required')\n      .min(3, 'Name is at least 3 characters'),\n    position: yup.string().required('Posiiton is required'),\n    summary: yup\n      .string()\n      .required('Summary is required')\n      .min(3, 'Summary is at least 3 characters')\n      .max(200, 'Max 200 characters'),\n  });\n\n  const initValues = {\n    fullName: '',\n    position: '',\n    summary: '',\n  };\n\n  const submitForm = (values) => {\n    if (type === 'update') {\n      dispatch(updateTeamMember(teamId, values));\n    } else if (type === 'create') {\n      dispatch(createTeamMember(teamId, values));\n    }\n    closeModal();\n  };\n\n  const renderTooltip = (props) => (\n    <Tooltip id=\"button-tooltip\" {...props}>\n      You will lose your progress\n    </Tooltip>\n  );\n\n  return (\n    <Formik\n      enableReinitialize\n      validationSchema={validationSchema}\n      onSubmit={submitForm}\n      initialValues={type === 'update' ? member : initValues}\n    >\n      {({\n        handleSubmit, handleChange, values, touched, errors,\n      }) => (\n        <Form noValidate onSubmit={handleSubmit}>\n          <Form.Group>\n            <Form.Label>Full Name</Form.Label>\n            <Form.Control\n              className=\"placeholder-text\"\n              type=\"text\"\n              name=\"fullName\"\n              placeholder=\"John Smith\"\n              value={values.fullName}\n              onChange={handleChange}\n              isInvalid={touched.fullName && errors.fullName}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              {errors.fullName}\n            </Form.Control.Feedback>\n          </Form.Group>\n\n          <Form.Group>\n            <Form.Label>Position</Form.Label>\n            <Form.Control\n              className=\"placeholder-text\"\n              type=\"text\"\n              name=\"position\"\n              placeholder=\"Associated Professor\"\n              value={values.position}\n              onChange={handleChange}\n              isInvalid={touched.position && errors.position}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              {errors.position}\n            </Form.Control.Feedback>\n          </Form.Group>\n\n          <Form.Group>\n            <Form.Label>Summary</Form.Label>\n            <Form.Control\n              className=\"placeholder-text\"\n              as=\"textarea\"\n              row={5}\n              name=\"summary\"\n              placeholder=\"Summary\"\n              value={values.summary}\n              onChange={handleChange}\n              isInvalid={touched.summary && errors.summary}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              {errors.summary}\n            </Form.Control.Feedback>\n          </Form.Group>\n\n          <Row>\n            <div className=\"ml-3\">\n              <OverlayTrigger\n                trigger={['hover', 'focus']}\n                placement=\"bottom\"\n                overlay={renderTooltip}\n              >\n                <DangerButton\n                  className=\"mr-2\"\n                  onClick={closeModal}\n                >\n                  Cancel\n                </DangerButton>\n              </OverlayTrigger>\n            </div>\n            <div className=\"ml-auto mr-3\">\n              <PrimaryButton type=\"submit\">\n                {' '}\n                Confirm\n                {' '}\n              </PrimaryButton>\n            </div>\n          </Row>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\n// props validation\nTeamMemberForm.propTypes = {\n  closeModal: PropTypes.func.isRequired,\n  member: PropTypes.object,\n  type: PropTypes.string.isRequired,\n};\nTeamMemberForm.defaultProps = {\n  member: undefined,\n};\n\nexport default TeamMemberForm;\n","/**\n * The TeamMember component displays a single team member details\n */\n\nimport {\n  Card,\n  Row,\n  Col,\n  Image,\n  Modal,\n  ButtonGroup,\n  OverlayTrigger,\n  Button,\n} from 'react-bootstrap';\nimport { useState } from 'react';\nimport { BsThreeDotsVertical } from 'react-icons/bs';\nimport { IconContext } from 'react-icons';\nimport { AiFillDelete, AiFillEdit } from 'react-icons/ai';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { PropTypes } from 'prop-types';\nimport TeamMemberForm from './form/TeamMemberForm';\nimport { deleteTeamMember } from '../../actions/team';\nimport profilePic from '../../images/profilepic.jpg';\nimport {\n  SecondaryButton,\n  DangerButton,\n  OptionEditButton,\n  RedDeleteButton,\n} from '../shared/styledComponents';\nimport './teamMember.css';\nimport './teamPage.css';\n\nconst TeamMember = ({ member }) => {\n  const dispatch = useDispatch();\n  const [showUpdateForm, setShowUpdateForm] = useState(false);\n  const [showDeleteMessage, setShowDeleteMessage] = useState(false);\n  const teamId = useSelector((state) => state.team.teamId);\n\n  const handleDelete = () => {\n    dispatch(deleteTeamMember(teamId, member._id));\n    setShowDeleteMessage(false);\n  };\n\n  const displayOptions = (\n    <ButtonGroup>\n      <OptionEditButton\n        backgroundColor=\"white\"\n        onClick={() => setShowUpdateForm(true)}\n        data-toggle=\"modal\"\n      >\n        {' '}\n        <AiFillEdit />\n        {' '}\n      </OptionEditButton>\n      <RedDeleteButton\n        backgroundColor=\"white\"\n        onClick={() => setShowDeleteMessage(true)}\n        data-toggle=\"modal\"\n      >\n        <AiFillDelete />\n      </RedDeleteButton>\n    </ButtonGroup>\n  );\n\n  return (\n    <>\n      <Col className=\"container-fluid mt-4\">\n        <Card id=\"team-card\" bg=\"light\" style={{ width: '25rem', height: '100%' }}>\n          <Row>\n            <Col md={{ span: 2, offset: 10 }}>\n              <OverlayTrigger\n                rootClose\n                trigger=\"click\"\n                placement=\"bottom\"\n                overlay={displayOptions}\n              >\n                <Button variant=\"default\">\n                  <IconContext.Provider\n                    value={{ color: '#56658a', size: '20px' }}\n                  >\n                    <BsThreeDotsVertical />\n                  </IconContext.Provider>\n                </Button>\n              </OverlayTrigger>\n            </Col>\n          </Row>\n          <Image\n            src={profilePic}\n            roundedCircle\n            height=\"130px\"\n            width=\"130px\"\n            style={{ alignSelf: 'center' }}\n          />\n          <Card.Body>\n            <Card.Title className=\"text-center\">{member.fullName}</Card.Title>\n            <Card.Subtitle className=\"text-center mb-2 text-muted\">\n              {member.position}\n            </Card.Subtitle>\n            <Card.Text>{member.summary}</Card.Text>\n          </Card.Body>\n        </Card>\n      </Col>\n\n      <Modal show={showUpdateForm} id=\"teamMemberModal\">\n        <Modal.Header className=\"teamMemberModalHeader\">\n          <Modal.Title className=\"teamMemberTitle\"> Edit Team Member </Modal.Title>\n        </Modal.Header>\n        <Modal.Body className=\"teamMemberBody\">\n          <TeamMemberForm\n            type=\"update\"\n            member={member}\n            closeModal={() => setShowUpdateForm(false)}\n          />\n        </Modal.Body>\n      </Modal>\n\n      <Modal show={showDeleteMessage} id=\"teamMemberModal\">\n        <Modal.Header className=\"teamMemberModalHeader\">\n          <Modal.Title> Delete Team Member </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          Are you sure you want to delete this team member?\n        </Modal.Body>\n        <Modal.Footer>\n          <SecondaryButton onClick={() => setShowDeleteMessage(false)}>\n            {' '}\n            Cancel\n            {' '}\n          </SecondaryButton>\n          <DangerButton variant=\"danger\" onClick={handleDelete}>\n            {' '}\n            Confirm\n            {' '}\n          </DangerButton>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\n// props validation\nTeamMember.propTypes = {\n  member: PropTypes.object.isRequired,\n};\n\nexport default TeamMember;\n","/**\n * The TeamPage component displays the team member page\n */\n\nimport {\n  Container, CardDeck, Modal, Spinner, Alert,\n} from 'react-bootstrap';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport React, { useEffect, useState } from 'react';\nimport TeamMember from './TeamMember';\nimport TeamMemberForm from './form/TeamMemberForm';\nimport { getTeamMembersByTeamId } from '../../actions/team';\nimport './teamPage.css';\nimport { PrimaryButton } from '../shared/styledComponents';\n\nconst TeamPage = () => {\n  const dispatch = useDispatch();\n  const teamId = useSelector((state) => state.team.teamId);\n  const [showCreateForm, setShowCreateForm] = useState(false);\n\n  useEffect(() => {\n    if (teamId) {\n      dispatch(getTeamMembersByTeamId(teamId));\n    }\n  }, [dispatch, teamId]);\n\n  const { loading, teamMembers } = useSelector((state) => state.teamMember);\n\n  return (\n    <div className=\"teamPageContainer\">\n      <h1>Team Members</h1>\n      <PrimaryButton className=\"mt-2\" onClick={() => setShowCreateForm(true)}>\n        Add Team Member\n      </PrimaryButton>\n\n      <div className=\"text-center\">\n        {loading && <Spinner className=\"mt-5\" animation=\"border\" />}\n      </div>\n\n      {!loading && teamMembers.length === 0 ? (\n        <Alert className=\"mt-3\" variant=\"primary\">\n          There is no member for this team. Please add team members.\n        </Alert>\n      ) : (\n        <Container>\n          <CardDeck\n            style={{ display: 'flex', flexDirection: 'row' }}\n            className=\"mt-4 mb-4\"\n          >\n            {teamMembers.map((member) => (\n              <TeamMember member={member} key={member._id} />\n            ))}\n          </CardDeck>\n        </Container>\n      )}\n\n      {/* A modal for showing create a team member */}\n      <Modal show={showCreateForm} id=\"teamMemberModal\">\n        <Modal.Header className=\"teamMemberModalHeader\">\n          <Modal.Title className=\"teamMemberTitle\"> New Team Member </Modal.Title>\n        </Modal.Header>\n        <Modal.Body className=\"teamMemberBody\">\n          <TeamMemberForm\n            type=\"create\"\n            closeModal={() => setShowCreateForm(false)}\n          />\n        </Modal.Body>\n      </Modal>\n    </div>\n  );\n};\n\nexport default TeamPage;\n","/**\n * The Achievement form component displays an achievement form, which is used for creating and updating achievements\n */\n\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  Row, Tooltip, OverlayTrigger, Form,\n} from 'react-bootstrap';\nimport { PropTypes } from 'prop-types';\nimport { updateAchievement, createAchievement } from '../../../actions/achievements';\nimport './achievementForm.css';\nimport { PrimaryButton, DangerButton } from '../../shared/styledComponents';\n\nconst AchievementForm = ({ closeModal, achievement, type }) => {\n  const dispatch = useDispatch();\n  const teamId = useSelector((state) => state.team.teamId);\n  const validationSchema = yup.object({\n    title: yup\n      .string()\n      .required('Achievement Name is required')\n      .min(3, 'Achievement Name is at least 3 characters')\n      .max(60, 'Achievement Name is at less than 60 characters'),\n    yearAwarded: yup\n      .number()\n      .min(1000, 'Invalid year')\n      .max(new Date().getFullYear(), 'Invalid year')\n      .required('Year is required'),\n    description: yup\n      .string()\n      .required('Description is required')\n      .min(3, 'Description is at least 3 characters')\n      .max(500, 'Max 500 characters'),\n  });\n\n  const initValues = {\n    title: '',\n    yearAwarded: '',\n    description: '',\n  };\n\n  const submitForm = (values) => {\n    const data = {\n      title: values.title,\n      yearAwarded: values.yearAwarded,\n      description: values.description,\n      teamId,\n    };\n\n    if (type === 'update') {\n      dispatch(updateAchievement(achievement._id, data));\n    } else if (type === 'create') {\n      dispatch(createAchievement(data));\n    }\n    closeModal();\n  };\n\n  const renderTooltip = (props) => (\n    <Tooltip id=\"button-tooltip\" {...props}>\n      You will lose your progress\n    </Tooltip>\n  );\n\n  return (\n    <Formik\n      enableReinitialize\n      validationSchema={validationSchema}\n      onSubmit={submitForm}\n      initialValues={type === 'update' ? achievement : initValues}\n    >\n      {({\n        handleSubmit, handleChange, values, touched, errors,\n      }) => (\n        <Form noValidate onSubmit={handleSubmit}>\n          <Form.Group>\n            <Form.Label>Achievement Title</Form.Label>\n            <Form.Control\n              type=\"text\"\n              name=\"title\"\n              placeholder=\"Achievement Title\"\n              value={values.title}\n              onChange={handleChange}\n              isInvalid={touched.title && errors.title}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              {errors.title}\n            </Form.Control.Feedback>\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Year</Form.Label>\n            <Form.Control\n              type=\"text\"\n              name=\"yearAwarded\"\n              placeholder=\"YYYY\"\n              value={values.yearAwarded}\n              onChange={handleChange}\n              isInvalid={touched.yearAwarded && errors.yearAwarded}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              {errors.yearAwarded}\n            </Form.Control.Feedback>\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Description</Form.Label>\n            <Form.Control\n              as=\"textarea\"\n              row={5}\n              name=\"description\"\n              placeholder=\"Description\"\n              value={values.description}\n              onChange={handleChange}\n              isInvalid={touched.description && errors.description}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              {errors.description}\n            </Form.Control.Feedback>\n          </Form.Group>\n\n          <Row>\n            <div className=\"ml-3\">\n              <OverlayTrigger\n                trigger={['hover', 'focus']}\n                placement=\"bottom\"\n                overlay={renderTooltip}\n              >\n                <DangerButton\n                  className=\"mr-2\"\n                  onClick={closeModal}\n                >\n                  Cancel\n                </DangerButton>\n              </OverlayTrigger>\n            </div>\n            <div className=\"ml-auto mr-3\">\n              <PrimaryButton type=\"submit\">\n                {' '}\n                Confirm\n                {' '}\n              </PrimaryButton>\n            </div>\n          </Row>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\n// props validation\nAchievementForm.propTypes = {\n  achievement: PropTypes.object,\n  closeModal: PropTypes.func.isRequired,\n  type: PropTypes.string.isRequired,\n};\nAchievementForm.defaultProps = {\n  achievement: undefined,\n};\n\nexport default AchievementForm;\n","/**\n * This file houses our achievement-related Action Creators.\n */\nimport * as api from '../api';\nimport {\n  GET_ACHIEVEMENTS_BY_TEAM_ID,\n  CREATE_ACHIEVEMENT,\n  UPDATE_ACHIEVEMENT,\n  DELETE_ACHIEVEMENT,\n} from './types';\nimport {\n  errorActionGlobalCreator,\n} from '../notification/notificationReduxFunctions';\n\nexport const getAchievementsByTeamId = (teamId) => async (dispatch) => {\n  try {\n    const { data } = await api.fetchAchievementsByTeamId(teamId);\n\n    dispatch({\n      type: GET_ACHIEVEMENTS_BY_TEAM_ID,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch(errorActionGlobalCreator(error));\n  }\n};\n\nexport const createAchievement = (achievement) => async (dispatch) => {\n  try {\n    const result = await api.createAchievement(achievement);\n\n    dispatch({\n      type: CREATE_ACHIEVEMENT,\n      payload: { ...result.data, newlyAdded: true },\n    });\n  } catch (error) {\n    dispatch(errorActionGlobalCreator(error));\n  }\n};\n\nexport const deleteAchievement = (id) => async (dispatch) => {\n  try {\n    await api.deleteAchievement(id);\n\n    dispatch({\n      type: DELETE_ACHIEVEMENT,\n      payload: id,\n    });\n  } catch (error) {\n    dispatch(errorActionGlobalCreator(error));\n  }\n};\n\nexport const updateAchievement = (id, achievement) => async (dispatch) => {\n  try {\n    const { data } = await api.updateAchievement(id, achievement);\n    dispatch({\n      type: UPDATE_ACHIEVEMENT,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch(errorActionGlobalCreator(error));\n  }\n};\n","/**\n * The Achievement component displays a single Achievement details\n */\n\nimport {\n  Card,\n  Row,\n  Col,\n  Modal,\n  ButtonGroup,\n  OverlayTrigger,\n} from 'react-bootstrap';\nimport { Button } from '@material-ui/core';\nimport { useState } from 'react';\nimport { BsThreeDotsVertical } from 'react-icons/bs';\nimport { IconContext } from 'react-icons';\nimport { AiFillDelete, AiFillEdit } from 'react-icons/ai';\nimport { useDispatch } from 'react-redux';\nimport { PropTypes } from 'prop-types';\nimport {\n  DangerButton,\n  SecondaryButton,\n  OptionEditButton,\n  RedDeleteButton,\n} from '../shared/styledComponents';\nimport './form/achievementForm.css';\nimport { deleteAchievement } from '../../actions/achievements';\nimport AchievementForm from './form/AchievementForm';\n\nconst Achievement = ({ achievement }) => {\n  const dispatch = useDispatch();\n  const [showUpdateForm, setShowUpdateForm] = useState(false);\n  const [showDeleteMessage, setShowDeleteMessage] = useState(false);\n\n  const handleDelete = () => {\n    dispatch(deleteAchievement(achievement._id));\n    setShowDeleteMessage(false);\n  };\n\n  const displayOptions = (\n    <ButtonGroup>\n      <OptionEditButton\n        onClick={() => setShowUpdateForm(true)}\n        data-toggle=\"modal\"\n      >\n        {' '}\n        <AiFillEdit />\n        {' '}\n      </OptionEditButton>\n      <RedDeleteButton\n        onClick={() => setShowDeleteMessage(true)}\n        data-toggle=\"modal\"\n      >\n        <AiFillDelete />\n      </RedDeleteButton>\n    </ButtonGroup>\n  );\n\n  return (\n    <>\n      <Row id=\"achievement\" className=\"container-fluid mt-4\">\n        <Card id=\"card\">\n          <Card.Header as=\"h5\" id=\"card-header\">\n            <Row>\n              <Col id=\"achievementTitle\">{achievement.title}</Col>\n              <Col md={{ span: 1 }}>\n                <OverlayTrigger\n                  rootClose\n                  trigger=\"click\"\n                  placement=\"bottom\"\n                  overlay={displayOptions}\n                >\n                  <Button variant=\"default\">\n                    <IconContext.Provider\n                      value={{ color: 'white', size: '20px' }}\n                    >\n                      <BsThreeDotsVertical />\n                    </IconContext.Provider>\n                  </Button>\n                </OverlayTrigger>\n              </Col>\n            </Row>\n          </Card.Header>\n          <Card.Body>\n            <Card.Text>{achievement.description}</Card.Text>\n            <Card.Text id=\"yearAwarded\">\n              <b>Date:</b>\n              {' '}\n              {achievement.yearAwarded}\n            </Card.Text>\n          </Card.Body>\n        </Card>\n      </Row>\n\n      <Modal show={showUpdateForm}>\n        <Modal.Header className=\"achievementModalHeader\">\n          <Modal.Title className=\"achievementsModalTitle\"> Edit Achievement </Modal.Title>\n        </Modal.Header>\n        <Modal.Body className=\"achievementsModalBody\">\n          <AchievementForm\n            type=\"update\"\n            achievement={achievement}\n            closeModal={() => setShowUpdateForm(false)}\n          />\n        </Modal.Body>\n      </Modal>\n\n      <Modal show={showDeleteMessage}>\n        <Modal.Header>\n          <Modal.Title> Delete Achievement </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          Are you sure you want to delete this achievement?\n        </Modal.Body>\n        <Modal.Footer>\n          <div>\n            <SecondaryButton\n              onClick={() => setShowDeleteMessage(false)}\n            >\n              Cancel\n            </SecondaryButton>\n          </div>\n          <div>\n            <DangerButton\n              onClick={handleDelete}\n            >\n              Confirm\n            </DangerButton>\n          </div>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\n// props validation\nAchievement.propTypes = {\n  achievement: PropTypes.object.isRequired,\n};\n\nexport default Achievement;\n","/**\n * The AchievementPage component displays the team Achievement page\n */\n\nimport {\n  Container, CardDeck, Modal, Spinner, Alert,\n} from 'react-bootstrap';\nimport { useSelector, useDispatch } from 'react-redux';\nimport React, { useEffect, useState } from 'react';\nimport AchievementForm from './form/AchievementForm';\nimport { getAchievementsByTeamId } from '../../actions/achievements';\nimport Achievement from './Achievement';\nimport './achievementPage.css';\nimport './form/achievementForm.css';\nimport { PrimaryButton } from '../shared/styledComponents';\n\nconst AchievementPage = () => {\n  const dispatch = useDispatch();\n  const teamId = useSelector((state) => state.team.teamId);\n  const [showCreateForm, setShowCreateForm] = useState(false);\n\n  useEffect(() => {\n    if (teamId) {\n      dispatch(getAchievementsByTeamId(teamId));\n    }\n  }, [dispatch, teamId]);\n\n  const { loading, achievements } = useSelector((state) => state.achievements);\n\n  return (\n    <div className=\"achievementPageContainer\">\n      <h1>Achievements</h1>\n      <PrimaryButton\n        className=\"mt-2\"\n        onClick={() => setShowCreateForm(true)}\n      >\n        Add Achievement\n      </PrimaryButton>\n\n      <div className=\"text-center\">\n        {loading && <Spinner className=\"mt-5\" animation=\"border\" />}\n      </div>\n\n      {!loading && achievements.length === 0 ? (\n        <Alert className=\"mt-3\" variant=\"primary\">\n          There are no achievements to show at this moment. Add an Achievement!\n        </Alert>\n      ) : (\n        <Container>\n          <CardDeck\n            style={{ display: 'flex', flexDirection: 'row' }}\n            className=\"mt-4 mb-4\"\n          >\n            {achievements.map((achievement) => (\n              <Achievement achievement={achievement} key={achievement._id} />\n            ))}\n          </CardDeck>\n        </Container>\n      )}\n\n      {/* A modal for showing create an Achievement */}\n      <Modal show={showCreateForm} id=\"achievementsModal\">\n        <Modal.Header>\n          <Modal.Title className=\"achievementsModalTitle\"> New Achievement </Modal.Title>\n        </Modal.Header>\n        <Modal.Body className=\"achievementsModalBody\">\n          <AchievementForm\n            type=\"create\"\n            closeModal={() => setShowCreateForm(false)}\n          />\n        </Modal.Body>\n      </Modal>\n    </div>\n  );\n};\n\nexport default AchievementPage;\n","/**\n * The TwitterFeed component displays a panel that renders a linked\n * twitter account's feed.\n */\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Timeline } from 'react-twitter-widgets';\nimport { unlinkTwitter } from '../../actions/team';\nimport { PrimaryButton } from '../shared/styledComponents';\n\n// css styles\nconst styles = {\n  twitterFeed: {\n    paddingTop: '15px',\n    paddingBottom: '30px',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    borderWidth: '1px',\n    borderColor: '#ccc',\n    borderStyle: 'solid',\n    borderRadius: '16px',\n    position: 'fixed',\n  },\n};\n\n// function of changing twitter height according window\nconst twitterTimelineHeight = () => {\n  const windowHeight = window.innerHeight;\n  switch (true) {\n    case (windowHeight >= 1000):\n      return { height: 800 };\n    case (windowHeight < 1000 && windowHeight >= 800):\n      return { height: 600 };\n    case (windowHeight < 800 && windowHeight >= 600):\n      return { height: 400 };\n    default:\n      return { height: 300 };\n  }\n};\n\n// function returning twitter component\nconst TwitterFeed = () => {\n  // get team from state\n  const dispatch = useDispatch();\n  const team = useSelector((state) => state.team);\n\n  return (\n    <div style={styles.twitterFeed}>\n      <Timeline\n        dataSource={{ sourceType: 'profile', screenName: team.twitterHandle }}\n        options={twitterTimelineHeight()}\n      />\n      <PrimaryButton\n        fontSize=\"0.875rem\"\n        onClick={() => dispatch(unlinkTwitter(team.teamId))}\n      >\n        Unlink Twitter\n      </PrimaryButton>\n    </div>\n  );\n};\n\nexport default TwitterFeed;\n","/**\n * The TwitterLink component displays a \"dynamic\" button that a user will click to link/unlink their twitter feed.\n */\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport {\n  Form, Spinner, Jumbotron,\n} from 'react-bootstrap';\nimport { linkTwitter } from '../../actions/team';\nimport './TwitterLink.css';\n\nimport { PrimaryButton } from '../shared/styledComponents';\n\nconst TwitterLink = () => {\n  const dispatch = useDispatch();\n  const teamId = useSelector((state) => state.team.teamId);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const validationSchema = yup.object({\n    twitterHandle: yup\n      .string()\n      .required('Please provide a Twitter handle.')\n      .min(1, 'Must be at least 1 character')\n      .max(15, 'Must be no longer than 15 characters')\n      .trim(),\n  });\n\n  const initValues = {\n    twitterHandle: '',\n  };\n\n  const submitForm = (values) => {\n    if (values.twitterHandle !== '') {\n      setIsLoading(true);\n    }\n    dispatch(linkTwitter(teamId, values.twitterHandle));\n    setIsLoading(false);\n  };\n\n  return (\n    <Jumbotron className=\"twitter-link\">\n      <h6 className=\"twitter-link_link_message\">Link your Twitter account?</h6>\n      {isLoading ? (\n        <div className=\"mb-3 mt-3 text-center\">\n          <Spinner animation=\"border\" />\n        </div>\n      ) : (\n        <Formik\n          enableReinitialize\n          validationSchema={validationSchema}\n          onSubmit={submitForm}\n          initialValues={initValues}\n        >\n          {({\n            handleSubmit, handleChange, values, touched, errors,\n          }) => (\n            <Form noValidate onSubmit={handleSubmit}>\n              <Form.Group>\n                <Form.Control\n                  type=\"text\"\n                  name=\"twitterHandle\"\n                  placeholder=\"Twitter Handle\"\n                  value={values.twitterHandle}\n                  onChange={handleChange}\n                  isInvalid={touched.twitterHandle && errors.twitterHandle}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.twitterHandle}\n                </Form.Control.Feedback>\n\n                <PrimaryButton\n                  fontSize=\"0.875rem\"\n                  type=\"submit\"\n                  className=\"twitter-link_button\"\n                >\n                  Link Twitter\n                </PrimaryButton>\n              </Form.Group>\n            </Form>\n          )}\n        </Formik>\n      )}\n    </Jumbotron>\n  );\n};\n\nexport default TwitterLink;\n","/**\n * This file exports a page for client to edit content in their homepage.\n */\n\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Form, Container } from 'react-bootstrap';\nimport './css/ClientHomeEditor.css';\nimport {\n  getHomepageDataByTeamId,\n  updateHomepage,\n} from '../../actions/homepage';\n\nimport { PrimaryButton } from '../shared/styledComponents';\n\nconst ClientHomeEditor = () => {\n  // get state from redux\n  const dispatch = useDispatch();\n  const teamId = useSelector((state) => state.team.teamId);\n  const aboutUs = useSelector((state) => state.homepage.aboutUs);\n\n  // values\n  const [homepageValues, setValues] = useState({\n    aboutUs,\n    teamId,\n  });\n\n  useEffect(() => {\n    if (teamId) {\n      dispatch(getHomepageDataByTeamId(teamId));\n    }\n  }, [dispatch, teamId]);\n\n  // setValues when teamId and aboutUs change\n  useEffect(() => {\n    setValues({\n      aboutUs,\n      teamId,\n    });\n  }, [teamId, aboutUs]);\n\n  // Handles whenever the form value is changing\n  const handleFormChanges = (form) => {\n    const { name, value } = form.target;\n    // store paragraphs into an array and remove empty paragraph\n    let splittedValue = value.split('\\n');\n    splittedValue = splittedValue.filter((e) => e !== '');\n    setValues({ ...homepageValues, [name]: splittedValue });\n  };\n\n  // Save values in editor and send to back end\n  const saveEditor = (event) => {\n    // prevent refreshing page after save\n    event.preventDefault();\n    dispatch(updateHomepage(teamId, homepageValues));\n  };\n\n  return (\n    <Container className=\"client-homepage-container\">\n      <Form onSubmit={saveEditor}>\n        <Form.Group onChange={handleFormChanges}>\n          <Form.Label>\n            <div className=\"section-title\">About Us</div>\n            <div className=\"section-description\">\n              Tell people about your team!\n            </div>\n          </Form.Label>\n          <Form.Control\n            name=\"aboutUs\"\n            as=\"textarea\"\n            rows={33}\n            // join the string list to display paragraphs\n            defaultValue={homepageValues.aboutUs.join('\\n\\n')}\n          />\n        </Form.Group>\n        <PrimaryButton type=\"submit\">\n          Save\n        </PrimaryButton>\n      </Form>\n    </Container>\n  );\n};\n\nexport default ClientHomeEditor;\n","/**\n * This file houses Action Creators for client homepage\n */\nimport * as api from '../api';\nimport { FETCH_HOMEPAGE, UPDATE_HOMEPAGE } from './types';\nimport {\n  errorActionGlobalCreator,\n  successMessageCreator,\n} from '../notification/notificationReduxFunctions';\n\nexport const getHomepageDataByTeamId = (teamId) => async (dispatch) => {\n  try {\n    const { data } = await api.getHomepage(teamId);\n    const homepageData = {\n      teamId,\n      aboutUs: data.aboutUs,\n    };\n    dispatch({\n      type: FETCH_HOMEPAGE,\n      payload: homepageData,\n    });\n  } catch (error) {\n    dispatch(errorActionGlobalCreator(error));\n  }\n};\n\nexport const updateHomepage = (teamId, homepageData) => async (dispatch) => {\n  try {\n    const { data } = await api.createOrUpdateHomepage(teamId, homepageData);\n    const updatedHomepage = {\n      teamId,\n      aboutUs: data.aboutUs,\n    };\n    dispatch({\n      type: UPDATE_HOMEPAGE,\n      payload: updatedHomepage,\n    });\n    dispatch(successMessageCreator('Saved'));\n  } catch (error) {\n    dispatch(errorActionGlobalCreator(error));\n  }\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport TwitterFeed from '../twitter/TwitterFeed';\nimport TwitterLink from '../twitter/TwitterLink';\nimport ClientHomeEditor from './ClientHomeEditor';\nimport './css/home-editor-page.mobile.css';\n\nconst ClientHomeEditorPage = () => {\n  // css\n  const styles = {\n    leftCol: {\n      width: '80%',\n      float: 'left',\n    },\n    rightCol: {\n      float: 'right',\n      width: '20%',\n      height: 'inherit',\n      maxWidth: '333px',\n      padding: '16px',\n    },\n  };\n  // check if twitter linked\n  const linkedHandle = useSelector((state) => state.team.twitterHandle);\n  // return entire page\n  return (\n    <>\n      <Row>\n        <Col style={styles.leftCol}>\n          <ClientHomeEditor />\n        </Col>\n        <Col\n          style={styles.rightCol}\n          className=\"home-editor-right-col\"\n        >\n          {linkedHandle ? <TwitterFeed /> : <TwitterLink />}\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default ClientHomeEditorPage;\n","/**\n * This file exports Sidebar component for layouts\n */\nimport './Sidebar.css';\nimport { Link, useLocation } from 'react-router-dom';\nimport { PropTypes } from 'prop-types';\n\nconst Sidebar = ({ data }) => {\n  const location = useLocation();\n\n  return (\n    <>\n      <ul className=\"SidebarList\">\n        {data.map((val) => (\n          // if the link property of a sidebar item is undefined, stays in the current page\n          <Link\n            to={val.link ? val.link : '#'}\n            key={val.title}\n            onClick={val.action}\n            onKeyPress={val.action} // usability, see WCAG 2.1.1\n          >\n            <li\n              className=\"row\"\n              id={location.pathname === val.link ? 'active' : ''} // set sidebar nav to active (blue)\n            >\n              <div id=\"icon\">{val.icon}</div>\n              <div id=\"title\">{val.title}</div>\n            </li>\n          </Link>\n        ))}\n      </ul>\n    </>\n  );\n};\n\n// props validation\nSidebar.propTypes = {\n  data: PropTypes.array.isRequired,\n};\n\nexport default Sidebar;\n","import { Image } from 'react-bootstrap';\nimport React from 'react';\nimport { PropTypes } from 'prop-types';\n\nconst HeaderProfileThumbnail = React.forwardRef(({ children, onClick }, ref) => (\n  <Image\n    className=\"header-profile-img\"\n    src={children}\n    roundedCircle\n    height=\"45px\"\n    width=\"45px\"\n    ref={ref}\n    onClick={(e) => {\n      e.preventDefault();\n      onClick(e);\n    }}\n\n  />\n));\n\nHeaderProfileThumbnail.propTypes = {\n  children: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\nexport default HeaderProfileThumbnail;\n","import React, { useEffect, useState } from 'react';\nimport {\n  Navbar, Nav, Dropdown, Image, Row, Container,\n} from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { AiOutlineUser, AiOutlineLogout } from 'react-icons/ai';\nimport './Header.css';\nimport { PropTypes } from 'prop-types';\nimport defaultProfilePic from '../../../images/profilepic.jpg';\nimport HeaderProfileThumbnail from './HeaderProfileThumbnail';\n/**\n * This function provides header for Layout.js\n * @returns Header component to be rendered in Layout.js\n */\nconst Header = ({ data, setLogoutAlert }) => {\n  const { teamName, orgName, profilePic } = useSelector((state) => state.team);\n  const [profileData, setProfileData] = useState({\n    teamName, orgName, profilePic,\n  });\n  useEffect(() => {\n    setProfileData({\n      teamName, orgName, profilePic,\n    });\n  }, [orgName, teamName, profilePic]);\n\n  /**\n   * Updates profile image field when user uploads file\n   */\n\n  // If profilePic is undefined, set a default profile pic\n  profileData.profilePic = profileData.profilePic ?? defaultProfilePic;\n  const history = useHistory();\n  // TODO: Remove hard-coded team id and publications id from the links\n  return (\n    <>\n      <Navbar className=\"header\" fixed=\"top\">\n        <Navbar.Brand href={data.dashboardURL}>\n          <h2 style={{ color: '#414656' }}>\n            RE\n            <b style={{ color: '#56658a' }}>SEARCH</b>\n            IFY\n          </h2>\n        </Navbar.Brand>\n        <Nav className=\"mr-auto\" />\n        <Nav>\n          <Dropdown drop=\"down\" alignRight=\"end\" className=\"header-link\">\n            <Dropdown.Toggle\n              as={HeaderProfileThumbnail}\n              className=\"dashboard-dropdown-toggle\"\n              cursor=\"pointer\"\n            >\n              {profilePic}\n            </Dropdown.Toggle>\n            <Dropdown.Menu>\n              <Dropdown.Item className=\"dashboard-dropdown-login-details\" disabled>\n                <Container fluid>\n                  <Row className=\"flex-nowrap\">\n                    <Image\n                      className=\"header-profile-img\"\n                      src={profileData.profilePic}\n                      roundedCircle\n                      height=\"45px\"\n                      width=\"45px\"\n                    />\n                    <div className=\"dashboard-dropdown-login-details-info\">\n                      <strong style={{ fontSize: '110%' }}>\n                        {profileData.teamName}\n                      </strong>\n                      <br />\n                      {profileData.orgName}\n                    </div>\n                  </Row>\n                </Container>\n\n              </Dropdown.Item>\n              <Dropdown.Divider />\n              <Dropdown.Item className=\"dashboard-login-dropdown-item\" eventKey=\"2\" onClick={() => history.push('/dashboard/profile')} active={false}>\n                <AiOutlineUser />\n                {' '}\n                Account\n              </Dropdown.Item>\n              <Dropdown.Item className=\"dashboard-login-dropdown-item\" eventKey=\"3\" onClick={() => setLogoutAlert(true)} active={false}>\n                <AiOutlineLogout />\n                {' '}\n                Logout\n              </Dropdown.Item>\n            </Dropdown.Menu>\n\n          </Dropdown>\n        </Nav>\n      </Navbar>\n    </>\n  );\n};\n\n// props validation\nHeader.propTypes = {\n  data: PropTypes.object.isRequired,\n  setLogoutAlert: PropTypes.func.isRequired,\n};\n\nexport default Header;\n","/*\n * This file stores the link data of side bar\n */\nimport React from 'react';\n// icons\nimport {\n  BsFillGridFill,\n  BsBookHalf,\n  BsPeople,\n  BsFillAwardFill,\n  BsCardText,\n} from 'react-icons/bs';\nimport { useSelector } from 'react-redux';\n\n/*\n    List of navigation inside the sidebar. Change the link to Nav.Link either here or in Sidebar.js.\n*/\nconst DashboardSidebarData = () => {\n  const sidebarLinks = [\n    {\n      title: 'Dashboard',\n      icon: <BsFillGridFill />,\n      link: '/dashboard',\n    },\n    {\n      title: 'Our Homepage',\n      icon: <BsCardText />,\n      link: '/about-us',\n    },\n    {\n      title: 'Publications',\n      icon: <BsBookHalf />,\n      link: '/publications',\n      name: 'PUBLICATIONS',\n    },\n    {\n      title: 'Team Members',\n      icon: <BsPeople />,\n      link: '/team',\n      name: 'TEAM',\n    },\n    {\n      title: 'Achievements',\n      icon: <BsFillAwardFill />,\n      link: '/achievement',\n      name: 'ACHIEVEMENTS',\n    },\n  ];\n\n  const pagesAdded = useSelector((state) => state.website.pages);\n\n  // Only show client website related pages on the sidebar if they have been added by client\n  // i.e. do not show PUBLICATIONS page if not added by client yet.\n  const links = sidebarLinks.filter((pageInfo) => {\n    if ('name' in pageInfo) {\n      if (!pagesAdded.includes(pageInfo.name)) {\n        return false;\n      }\n    }\n    return true;\n  });\n\n  return links;\n};\n\nexport default DashboardSidebarData;\n","/**\n * LogoutModal component display a modal and ask for confirmation when the sign out button is clicked\n */\nimport { Modal } from 'react-bootstrap';\nimport { PropTypes } from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { logout } from '../../actions/auth';\nimport { SecondaryButton, DangerButton } from './styledComponents';\n\nconst LogoutModal = ({ logoutAlert, setLogoutAlert }) => {\n  const dispatch = useDispatch();\n  const handleSignOut = () => {\n    dispatch(logout());\n  };\n  return (\n    <Modal show={logoutAlert}>\n      <Modal.Header className=\"modalHeader\">\n        <Modal.Title> Logging out </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        Are you sure you want to log out?\n      </Modal.Body>\n      <Modal.Footer>\n        <SecondaryButton onClick={() => setLogoutAlert(false)}>\n          Cancel\n        </SecondaryButton>\n        <DangerButton onClick={handleSignOut}>\n          Yes\n        </DangerButton>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\n// props validation\nLogoutModal.propTypes = {\n  logoutAlert: PropTypes.bool.isRequired,\n  setLogoutAlert: PropTypes.func.isRequired,\n};\n\nexport default LogoutModal;\n","/**\n * This file exports the layout of Researchify Dashboard\n */\n\nimport React, { useState } from 'react';\nimport { Container, Col, Row } from 'react-bootstrap';\nimport { PropTypes } from 'prop-types';\nimport Sidebar from '../layoutComponents/Sidebar';\nimport Header from '../layoutComponents/Header';\nimport DashboardSidebarData from '../DashboardSidebarData';\nimport '../Layout.css';\nimport LogoutModal from '../../shared/LogoutModal';\n\nconst headerData = {\n  title: 'Researchify',\n  dashboardURL: '/dashboard',\n  profileURL: '/dashboard/profile',\n};\n\nconst DashboardLayout = ({ children }) => {\n  const [logoutAlert, setLogoutAlert] = useState(false);\n\n  return (\n    <>\n      <Header data={headerData} setLogoutAlert={setLogoutAlert} />\n      <Container fluid className=\"researchify-content-top-padding\">\n        <Row className=\"content-under-header\">\n          <Col className=\"sidebar-wrapper\">\n            <Sidebar data={DashboardSidebarData()} />\n          </Col>\n          <Col className=\"page-content-wrapper\">\n            {children}\n          </Col>\n        </Row>\n      </Container>\n      <LogoutModal logoutAlert={logoutAlert} setLogoutAlert={setLogoutAlert} />\n    </>\n  );\n};\n\n// props validation\nDashboardLayout.propTypes = {\n  children: PropTypes.element.isRequired,\n};\n\nexport default DashboardLayout;\n","/**\n * This file exports the Route that is embeded with Researchify Dashboard Layout\n */\n\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { PropTypes } from 'prop-types';\nimport DashboardLayout from './DashboardLayout';\n\nconst DashboardLayoutRoute = ({ component: Component, ...rest }) => (\n// get 'component' and renamed to 'Component', any other 'props' renamed to 'rest'\n  <Route\n    {...rest}\n    render={(routeProps) => (\n      <DashboardLayout>\n        <Component {...routeProps} />\n      </DashboardLayout>\n    )}\n  />\n);\n\n// props validation\nDashboardLayoutRoute.propTypes = {\n  component: PropTypes.func.isRequired,\n};\n\nexport default DashboardLayoutRoute;\n","/**\n * This file export all the private route\n */\nimport { Switch, Redirect } from 'react-router-dom';\nimport React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport Cookies from 'js-cookie';\n// Pages\nimport Dashboard from '../dashboard/Dashboard';\nimport ProfileInfoEdit from '../profileInfoEdit/ProfileInfoEdit';\nimport PublicationPage from '../publications/PublicationPage';\nimport TeamPage from '../teamPage/TeamPage';\nimport AchievementPage from '../achievements/AchievementPage';\nimport ClientHomeEditorPage from '../clientHomeEditor/ClientHomeEditorPage';\n// Layout\nimport DashboardLayoutRoute from '../layouts/dashboardLayout/DashboardLayoutRoute';\nimport { logout } from '../../actions/auth';\n\nconst PrivateRoute = () => {\n  const dispatch = useDispatch();\n  const signInCookie = !!Cookies.get('isLogin');\n\n  useEffect(() => {\n    // after a user signIn, we need to keep track of the signInCookie as it might be removed after the tokens expire\n    // if that the case, a sign out action need to be dispatched\n    if (!signInCookie) {\n      setTimeout(() => {\n        dispatch(logout());\n      }, 3000);\n    }\n  }, [dispatch, signInCookie]);\n\n  return (\n    <Switch>\n      <DashboardLayoutRoute path=\"/dashboard\" exact component={Dashboard} />\n      <DashboardLayoutRoute\n        path=\"/dashboard/profile\"\n        exact\n        component={ProfileInfoEdit}\n      />\n      <DashboardLayoutRoute\n        path=\"/publications\"\n        exact\n        component={PublicationPage}\n      />\n      <DashboardLayoutRoute path=\"/team\" exact component={TeamPage} />\n      <DashboardLayoutRoute path=\"/achievement\" exact component={AchievementPage} />\n      <DashboardLayoutRoute\n        path=\"/about-us\"\n        exact\n        component={ClientHomeEditorPage}\n      />\n      {/*  If login, any other route not stated above will be redirect dashboard page */}\n      <Redirect to=\"/dashboard\" />\n    </Switch>\n  );\n};\n\nexport default PrivateRoute;\n","import React from 'react';\nimport { Box } from '@material-ui/core';\nimport { PropTypes } from 'prop-types';\n\nconst Divider = ({ width, color }) => {\n  const style = {\n    minWidth: 100,\n    width: !!width ? width : '5vw', // eslint-disable-line no-extra-boolean-cast\n    height: 6,\n    margin: '20px auto',\n    background:\n      color === 'blue'\n        ? 'linear-gradient(20deg, rgba(65, 70, 86, 1) 0%, rgba(86, 101, 138, 1) 100%)'\n        : 'linear-gradient(200deg, rgba(171,150,113,1) 0%, rgba(118,99,64,1) 80%)',\n  };\n  return <Box style={style} />;\n};\n\n// props validation\nDivider.propTypes = {\n  width: PropTypes.string,\n  color: PropTypes.string,\n};\nDivider.defaultProps = {\n  color: 'blue',\n  width: '5vw',\n};\n\nexport default Divider;\n","const theme = {\n  primary: '#56658a',\n  secondary: '#AB9671',\n  warning: '#d7a319',\n  success: '#2bc194',\n  danger: '#9c503d',\n  info: '#3997be',\n  dark: '#414656',\n  light: '#f5f9ff',\n};\n\nconst palette = {\n  'dark-blue': theme.primary,\n  navy: theme.dark,\n  grey: '#A6ABBD',\n  'dark-gold': '#766340',\n  gold: theme.secondary,\n};\n\nexport { theme, palette };\n","import React from 'react';\nimport styled from 'styled-components';\nimport Tab from '@material-ui/core/Tab';\nimport { theme as colour } from '../theme';\n\nconst StyledTab = styled(({ ...props }) => (\n  <Tab {...props} classes={{ selected: 'selected' }} />\n))`\n  &.selected {\n    color: white;\n    background-color: ${colour.secondary};\n  }\n`;\n\nconst StyledComponentsTab = (props) => (\n  <>\n    <StyledTab {...props} />\n  </>\n);\n\nexport default StyledComponentsTab;\n","import React from 'react';\nimport { PropTypes } from 'prop-types';\n\nimport {\n  Box,\n  Grid,\n  Tabs,\n  Typography,\n  useMediaQuery,\n  makeStyles,\n} from '@material-ui/core';\nimport Divider from '../utils/Divider';\nimport StyledTab from '../utils/StyledTabButton';\n\nconst TabPanel = (props) => {\n  const {\n    children, value, index, ...other\n  } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`wrapped-tabpanel-${index}`}\n      aria-labelledby={`wrapped-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box\n          color=\"secondary.main\"\n          fontSize=\"1.2rem\"\n          padding={4}\n          lineHeight={1.5}\n        >\n          {children}\n        </Box>\n      )}\n    </Typography>\n  );\n};\n\nconst a11yProps = (index) => ({\n  id: `full-width-tab-${index}`,\n  'aria-controls': `full-width-tabpanel-${index}`,\n});\n\nconst AboutUs = () => {\n  const isMobile = useMediaQuery('(max-width:600px)'); // should be refactored\n\n  const useStyles = makeStyles(() => ({\n    root: { flexGrow: 1 },\n    container: {\n      minHeight: '60vh',\n      maxWidth: isMobile ? '90vw' : '70vw',\n      margin: '5rem auto',\n    }, // Elevation\n    borderedCard: {\n      borderRadius: '25px',\n      padding: 20,\n      minWidth: '300px',\n      width: '60vw',\n      maxWidth: '95vw',\n      minHeight: '65vh',\n      boxShadow: '0px 12px 20px 0px rgba(0,0,0,0.2)',\n    },\n  }));\n\n  const classes = useStyles();\n\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <div className={classes.container}>\n      <Grid container justify=\"center\" direction=\"row\">\n        <Grid\n          container\n          item\n          direction=\"column\"\n          alignItems=\"center\"\n          md={3}\n          xs={12}\n        >\n          <Grid item>\n            <Box\n              fontSize=\"h4.fontSize\"\n              fontWeight=\"bold\"\n              color=\"primary.main\"\n              textAlign=\"center\"\n            >\n              OUR STORY\n            </Box>\n          </Grid>\n          <Grid item style={{ maxWidth: '90vw' }}>\n            <Divider invert />\n\n            <Tabs\n              value={value}\n              orientation={isMobile ? 'horizontal' : 'vertical'}\n              variant=\"scrollable\"\n              onChange={handleChange}\n              aria-label=\"wrapped label tabs about us\"\n            >\n              {/** TODO: Can be refactored with loop */}\n              <StyledTab value={0} label=\"Vision\" {...a11yProps('one')} />\n              <StyledTab\n                value={1}\n                label=\"Meet Our Team\"\n                {...a11yProps('two')}\n              />\n              <StyledTab\n                value={2}\n                label=\"Goals &amp; Objectives\"\n                {...a11yProps('two')}\n              />\n            </Tabs>\n          </Grid>\n        </Grid>\n\n        {/** TODO: Can be refactored with loop */}\n        <Grid item className={classes.borderedCard} md={9} xs={12}>\n          <center>\n            <TabPanel value={value} index={0}>\n              <Box fontSize=\"h3.fontSize\">Vision</Box>\n              <Box color=\"black\" fontSize=\"p.fontSize\">\n                <p>\n                  The Researchify Platform will remain a one-stop shop from\n                  inception to deployment of an academic research website\n                  allowing non-tech-savvy researchers to significantly reduce\n                  expenditures related to web development and the time before\n                  the website goes live.\n                </p>\n              </Box>\n            </TabPanel>\n            <TabPanel value={value} index={1}>\n              <Box fontSize=\"h3.fontSize\">Meet our Team</Box>\n              <Box color=\"black\" fontSize=\"p.fontSize\">\n                <p>\n                  Undergraduate students from Monash University collaborating\n                  under the supervision of our mentor to provide researchers\n                  with a tool to create their own website.\n                </p>\n              </Box>\n            </TabPanel>\n            <TabPanel value={value} index={2}>\n              <Box fontSize=\"h3.fontSize\">Goals &amp; Objecitves</Box>\n              <Box color=\"black\" fontSize=\"p.fontSize\">\n                <p>\n                  To provide a free website creation tool for Researchers to\n                  showcase their research to the community. Researchify is aimed\n                  at researchers with diverse backgrounds. Ranging from\n                  experienced website builders to those that are inexperienced.\n                </p>\n              </Box>\n            </TabPanel>\n          </center>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\n// props validation\nTabPanel.propTypes = {\n  children: PropTypes.array.isRequired,\n  value: PropTypes.number.isRequired,\n  index: PropTypes.number.isRequired,\n};\n\nexport default AboutUs;\n","export default __webpack_public_path__ + \"static/media/intro.43223279.svg\";","import React from 'react';\nimport { Row, Col } from 'reactstrap';\nimport { Button } from '@material-ui/core';\nimport '../css/big-intro.css';\nimport '../css/big-intro.mobile.css';\nimport styled from 'styled-components';\nimport AnchorLink from 'react-anchor-link-smooth-scroll';\nimport IntroImage from '../../../images/intro.svg';\n\nconst StyledButtonLink = styled(AnchorLink)`\n  &:hover {\n    text-decoration: none;\n  }\n`;\nconst DiscoverButtonLink = (props) => (\n  <>\n    <StyledButtonLink {...props} />\n  </>\n);\n\nconst Content = () => (\n  <div className=\"context\">\n    <Row style={{ margin: 0 }}>\n      <Col lg={{ size: 7, offset: 1 }} className=\"frosted-glass\">\n        <div style={{ padding: '2rem' }}>\n          <h1>\n            A Research Profile Builder\n          </h1>\n          <p>\n            Researchify is a web application that helps researchers without programming nor\n            graphic design knowledge to build and publish their own research profile website.\n          </p>\n\n          <DiscoverButtonLink href=\"#about\" style={{}}>\n            <Button\n              variant=\"contained\"\n              size=\"large\"\n              color=\"secondary\"\n              className=\"mr-2\"\n            >\n              Discover More\n            </Button>\n\n          </DiscoverButtonLink>\n        </div>\n      </Col>\n      <Col lg={{ size: 2 }}>\n        <img src={IntroImage} alt=\"man watching presentation\" width={370} />\n      </Col>\n    </Row>\n  </div>\n);\n\nconst BigIntro = () => {\n  const boxes = () => {\n    const array = [];\n    const numberOfBox = 15;\n    for (let i = 0; i < numberOfBox; i++) array.push(i);\n    return array;\n  };\n\n  const styles = {\n    container: {\n      position: 'relative',\n      top: 0,\n      minHeight: '50vh',\n    },\n  };\n\n  return (\n    <div style={styles.container}>\n      <Content />\n      <div className=\"area\">\n        <ul className=\"circles\">\n          {boxes().map((i) => (\n            <li key={i} />\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default BigIntro;\n","import React from 'react';\nimport ImportContacts from '@material-ui/icons/ImportContacts';\nimport Twitter from '@material-ui/icons/Twitter';\nimport Palette from '@material-ui/icons/Palette';\nimport Group from '@material-ui/icons/Group';\nimport MoneyOff from '@material-ui/icons/MoneyOff';\nimport GitHub from '@material-ui/icons/GitHub';\n\nimport { theme } from '../theme';\n\nconst headerLinks = [\n  {\n    label: 'ABOUT',\n    link: '#about',\n  },\n  {\n    label: 'FEATURES',\n    link: '#features',\n  },\n  {\n    label: 'OUR STORY',\n    link: '#company',\n  },\n];\n\nconst aboutDescription = {\n  one: `Organize all your research projects into a single collection and share it online. Compatible with Google Scholar or manually insert your research projects,\n  Researchify provides flexible options in customizing your own website.`,\n  two: `No coding experience necessary. From registration to choosing your website design, to filtering which content to display in your website and having your website hosted publically,\n   Researchify will ensure its users a smooth journey.`,\n};\n\nconst styles = {\n  icon: { fontSize: '5rem', color: theme.secondary },\n};\n\nconst featuresData = [\n  {\n    logo: <ImportContacts style={styles.icon} />,\n    title: 'Publication',\n    description: 'Import your existing publications from Google scholar.',\n  },\n  {\n    logo: <Twitter style={styles.icon} />,\n    title: 'Social Media',\n    description:\n      'Update your website with real time social media feeds.',\n  },\n  {\n    logo: <Palette style={styles.icon} />,\n    title: 'Themes',\n    description: 'Choose from a variety of colour and layout for your website.',\n  },\n  {\n    logo: <Group style={styles.icon} />,\n    title: 'Teams',\n    description: 'Showcase the members of your organization to the community',\n  },\n  {\n    logo: <GitHub style={styles.icon} />,\n    title: 'Hosting',\n    description: 'Researchify uses GitHub pages to host your website. Totally free!',\n  },\n  {\n    logo: <MoneyOff style={styles.icon} />,\n    title: 'Free',\n    description: 'Researchify is a free to use service.',\n  },\n];\n\nexport { featuresData, headerLinks, aboutDescription };\n","import React from 'react';\nimport { Box, useMediaQuery, makeStyles } from '@material-ui/core';\nimport { aboutDescription } from '../data/landing-page-labels';\n\nconst Description = () => {\n  const isMobile = useMediaQuery('(max-width:600px)');\n  const useStyles = makeStyles((theme) => ({\n    root: { flexGrow: 1 },\n    crophover: {\n      marginTop: '-5vh',\n      marginBottom: '5vh',\n    },\n    layout: {\n      width: '100%',\n      minHeight: '30vh',\n      padding: isMobile ? '1rem' : '2rem',\n      borderRadius: '25px',\n      boxShadow: '0px 12px 21px 0px rgba(0,0,0,0.2)',\n    },\n    golden: {\n      color: 'white',\n      background:\n        'linear-gradient(200deg, rgba(171,150,113,1) 0%, rgba(118,99,64,1) 80%)',\n    },\n    white: {\n      background: 'white',\n      color: theme.palette.secondary.main,\n    },\n  }));\n\n  const classes = useStyles();\n  return (\n    <div style={{ position: 'relative', zIndex: 2 }} className=\"container\">\n      <Box\n        className={` ${classes.crophover} ${classes.layout} ${classes.golden}`}\n      >\n        <Box\n          fontSize={isMobile ? '2rem' : 'h3.fontSize'}\n          style={{ textAlign: 'center' }}\n        >\n          Showcasing your research to the world.\n        </Box>\n        <Box\n          fontSize={isMobile ? '1rem' : '1.2rem'}\n          padding={4}\n          lineHeight={1.8}\n        >\n          {aboutDescription.one}\n        </Box>\n      </Box>\n\n      <Box\n        alignItems=\"flex-end\"\n        className={`${classes.layout} ${classes.white}`}\n      >\n        <Box\n          fontSize={isMobile ? '2rem' : 'h3.fontSize'}\n          style={{ textAlign: 'center' }}\n        >\n          Easy to use.\n        </Box>\n        <Box\n          fontSize={isMobile ? '1rem' : '1.2rem'}\n          padding={4}\n          lineHeight={1.8}\n        >\n          {aboutDescription.two}\n        </Box>\n      </Box>\n    </div>\n  );\n};\n\nexport default Description;\n","import '../css/features.css';\nimport {\n  Box, Grid, Paper, Button, useMediaQuery,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport React, { useState } from 'react';\nimport ReactCardFlip from 'react-card-flip';\nimport { PropTypes } from 'prop-types';\nimport Divider from '../utils/Divider';\nimport { featuresData } from '../data/landing-page-labels';\n\n// icons\n\nconst FlippingCard = ({\n  logo, title, description, classes, isMobile,\n}) => {\n  const [isFlipped, setIsFlipped] = useState(false);\n\n  return (\n    <Grid key={title} item>\n      <ReactCardFlip isFlipped={isFlipped} flipDirection=\"horizontal\">\n        <Paper className={classes.paper}>\n          <Box\n            display=\"flex\"\n            flexDirection=\"column\"\n            height=\"100%\"\n            justifyContent=\"center\"\n            alignItems=\"center\"\n          >\n            <Box>\n              {' '}\n              {logo}\n            </Box>\n            <Box fontSize={isMobile ? 'h6.fontSize' : 'h5.fontSize'} margin={!isMobile && 2} color=\"secondary.main\">\n              {title}\n            </Box>\n            <Button\n              variant=\"outlined\"\n              color=\"primary\"\n              onClick={() => setIsFlipped(true)}\n            >\n              Info\n            </Button>\n          </Box>\n        </Paper>\n        <Paper\n          className={classes.paper}\n          onMouseLeave={() => setIsFlipped(false)}\n        >\n          <Grid container direction=\"column\">\n            <Box\n              display=\"flex\"\n              justifyContent=\"flex-end\"\n              fontWeight=\"bold\"\n              color=\"secondary.main\"\n              style={{ margin: '-15px -10px 0 0', cursor: 'pointer' }}\n              onClick={() => setIsFlipped(false)}\n            >\n              X\n            </Box>\n            <Box>{description}</Box>\n          </Grid>\n        </Paper>\n      </ReactCardFlip>\n    </Grid>\n  );\n};\n\nconst Features = () => {\n  const isMobile = useMediaQuery('(max-width:600px)');\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n    },\n    paper: {\n      height: isMobile ? 160 : 250,\n      width: isMobile ? 160 : 250,\n      padding: isMobile ? '1rem' : '2rem',\n    },\n    container: {\n      width: isMobile ? 'inherit' : '80vw',\n      margin: '0 auto',\n    },\n    control: {\n      padding: theme.spacing(2),\n    },\n  }));\n\n  const classes = useStyles();\n\n  return (\n    <div className=\"slanted-bg\">\n      <Grid\n        container\n        direction=\"column\"\n        spacing={3}\n        className={classes.container}\n      >\n        <Grid item xs={12}>\n          <Box fontSize=\"h3.fontSize\" color=\"secondary.main\" textAlign=\"center\">\n            FEATURES\n          </Box>\n          <Divider color=\"golden\" />\n          <Box\n            textAlign=\"center\"\n            fontSize=\"h5.fontSize\"\n            color=\"white\"\n            fontWeight=\"100\"\n          >\n            Here are our amazing features:\n          </Box>\n        </Grid>\n\n        <Grid item xs={12}>\n          <Grid container justify=\"center\" spacing={isMobile ? 5 : 10}>\n            {featuresData.map(({ logo, title, description }) => (\n              <FlippingCard\n                logo={logo}\n                title={title}\n                description={description}\n                classes={classes}\n                key={title}\n                isMobile={isMobile}\n              />\n            ))}\n          </Grid>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\n// props validation\nFlippingCard.propTypes = {\n  logo: PropTypes.element.isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  classes: PropTypes.object.isRequired,\n  isMobile: PropTypes.bool.isRequired,\n};\n\nexport default Features;\n","import React from 'react';\nimport { Button, Grid } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\n\nconst AuthButtons = () => (\n  <Grid container spacing={2}>\n    <Grid item xs={6}>\n      <Link to=\"/register\" style={{ textDecoration: 'none' }}>\n        <Button\n          variant=\"contained\"\n          size=\"large\"\n          color=\"primary\"\n        >\n          Register\n        </Button>\n      </Link>\n    </Grid>\n    <Grid item xs={6}>\n      <Link to=\"/login\" style={{ textDecoration: 'none' }}>\n        <Button\n          variant=\"contained\"\n          size=\"large\"\n          color=\"secondary\"\n          style={{ color: 'white' }}\n        >\n          Log In\n        </Button>\n      </Link>\n    </Grid>\n  </Grid>\n);\n\nexport default AuthButtons;\n","import React from 'react';\nimport AnchorLink from 'react-anchor-link-smooth-scroll';\nimport styled from 'styled-components';\nimport { theme } from '../theme';\n\nconst HeaderLink = styled(AnchorLink)`\n  color: ${theme.secondary};\n  display: block;\n  font-size: 1.2rem;\n  padding: 0.7rem;\n  text-decoration: none;\n  transition: 0.5s;\n  margin: 0 0.1rem;\n\n  &:hover {\n    background-color: ${theme.dark};\n    transform: translateY(-2px);\n    border-radius: 5%;\n    color: white;\n    text-decoration: none;\n  }\n`;\n\nconst StyledHeaderLink = (props) => (\n  <>\n    <HeaderLink {...props} />\n  </>\n);\n\nexport default StyledHeaderLink;\n","import React, { useState, useEffect } from 'react';\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n} from 'reactstrap';\n// import logo from \"Assets/images/logo.png\";\nimport { PropTypes } from 'prop-types';\nimport AuthButtons from './AuthButtons';\nimport HeaderLink from '../../utils/StyledHeaderLink';\nimport { headerLinks } from '../../data/landing-page-labels';\nimport { theme } from '../../theme';\n\nconst Header = ({ linksAreShown }) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  const styles = {\n    shadow: {\n      backgroundColor: 'white',\n      transition: 'top 0.5s',\n      boxShadow: '0px 14px 25px -20px rgba(0,0,0,0.1)',\n    },\n  };\n\n  const hideAndShowNavBar = () => {\n    if (typeof window !== 'undefined') {\n      let prevScrollpos = window.pageYOffset;\n      const navbar = document.getElementById('navbar');\n      window.onscroll = function () { // eslint-disable-line func-names\n        const maxScroll = document.body.clientHeight - window.innerHeight;\n        const currentScrollPos = window.pageYOffset;\n        if (\n          (maxScroll > 0\n            && prevScrollpos > currentScrollPos\n            && prevScrollpos <= maxScroll)\n          || (maxScroll <= 0 && prevScrollpos > currentScrollPos)\n          || (prevScrollpos <= 0 && currentScrollPos <= 0)\n        ) {\n          navbar.style.top = '0'; // show\n        } else {\n          navbar.style.top = '-5.5rem'; // hide\n        }\n        prevScrollpos = currentScrollPos;\n      };\n    }\n  };\n\n  useEffect(() => {\n    hideAndShowNavBar();\n  }, []);\n\n  return (\n    <>\n      <Navbar id=\"navbar\" light expand=\"md\" style={styles.shadow} sticky=\"top\">\n        <NavbarBrand href=\"/\">\n          <h2 style={{ color: theme.dark }}>\n            RE\n            <b style={{ color: theme.primary }}>SEARCH</b>\n            IFY\n          </h2>\n        </NavbarBrand>\n        <NavbarToggler onClick={toggle} />\n        <Collapse isOpen={isOpen} navbar>\n          <Nav className=\"mr-auto\" navbar>\n            {linksAreShown\n              && headerLinks.map((h, index) => (\n                <NavItem key={h.link}>\n                  <HeaderLink id={index} href={h.link}>\n                    {h.label}\n                  </HeaderLink>\n                </NavItem>\n              ))}\n          </Nav>\n          <Nav>\n            <AuthButtons />\n          </Nav>\n        </Collapse>\n      </Navbar>\n    </>\n  );\n};\n\n// props validation\nHeader.propTypes = {\n  linksAreShown: PropTypes.bool,\n};\nHeader.defaultProps = {\n  linksAreShown: true,\n};\n\nexport default Header;\n","import React from 'react';\nimport { PropTypes } from 'prop-types';\nimport { Typography, Link } from '@material-ui/core';\n\nconst Copyright = ({ invert }) => {\n  const colour = !!invert ? 'inherit' : 'textSecondary'; // eslint-disable-line no-extra-boolean-cast\n  return (\n    <>\n      <Typography variant=\"body1\" color={colour} align=\"center\">\n        Copyright &copy;\n        <Link color=\"inherit\" href=\"/\">\n          Researchify&nbsp;\n        </Link>\n        { new Date().getFullYear()}\n        . All rights reserved.\n      </Typography>\n    </>\n  );\n};\n\n// props validation\nCopyright.propTypes = {\n  invert: PropTypes.bool.isRequired,\n};\n\nexport default Copyright;\n","import React from 'react';\nimport { theme } from '../../theme';\nimport CopyRight from '../../utils/Copyright';\n\nconst Footer = () => {\n  const styles = {\n    bg: {\n      display: 'table',\n      background: theme.dark,\n      color: 'white',\n      minHeight: '50px',\n      height: '5vh',\n      width: '100%',\n      marginTop: '-5vh',\n    },\n    middle: {\n      display: 'table-cell',\n      verticalAlign: 'middle',\n    },\n  };\n\n  return (\n    <>\n      <div style={styles.bg}>\n        <div style={styles.middle}>\n          <CopyRight invert />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Footer;\n","/* eslint-disable */\nimport React from \"react\";\nimport LandingHeader from \"./LandingHeader\";\nimport Footer from \"./Footer\";\n\nconst LandingLayout = ({ url, children }) => {\n  return (\n    <>\n      <LandingHeader linksAreShown={url === \"/\" ? true : false} /> \n      <div style={{ minHeight: \"calc(100vh)\" }}>{children}</div>\n      <Footer />\n    </>\n  );\n};\n\nexport default LandingLayout;\n","import React from 'react';\nimport { PropTypes } from 'prop-types';\n\nimport { ThemeProvider } from '@material-ui/styles'; // eslint-disable-line import/no-extraneous-dependencies\nimport { createTheme } from '@material-ui/core/styles';\n\nimport AboutUs from './landingPageComponents/AboutUs';\nimport BigIntro from './landingPageComponents/BigIntro';\nimport Description from './landingPageComponents/Description';\nimport Features from './landingPageComponents/Features';\nimport LandingLayout from './landingPageComponents/landingPageLayouts/LandingLayout';\nimport { theme as colour } from './theme';\n\n/**\n * Landing page component gets called by App.js\n * @param {*} route of component\n * @returns\n */\nconst LandingPage = ({ match }) => {\n  const theme = createTheme({\n    palette: {\n      primary: {\n        // Purple and green play nicely together.\n        main: colour.primary,\n      },\n      secondary: {\n        // This is green.A700 as hex.\n        main: colour.secondary,\n      },\n      typography: {\n        // In Chinese and Japanese the characters are usually larger,\n        // so a smaller fontsize may be appropriate.\n        fontSize: 12,\n      },\n    },\n  });\n  return (\n    <ThemeProvider theme={theme}>\n      <LandingLayout url={match.url}>\n        <BigIntro />\n        <section id=\"about\">\n          <Description />\n        </section>\n        <section id=\"features\">\n          <Features />\n        </section>\n        <section id=\"company\">\n          <AboutUs />\n        </section>\n\n      </LandingLayout>\n    </ThemeProvider>\n  );\n};\n\n// props validation\nLandingPage.propTypes = {\n  match: PropTypes.object.isRequired,\n};\n\nexport default LandingPage;\n","/**\n * File exports the fancy moving background to auth pages.\n * Forms (registration/login) can be passed in.\n */\nimport React from 'react';\nimport '../css/fancy-auth-bg.css';\nimport { PropTypes } from 'prop-types';\n\nconst AuthBackground = ({ form }) => {\n  const boxes = () => {\n    const array = [];\n    const numberOfBox = 15;\n    for (let i = 0; i < numberOfBox; i++) array.push(i);\n    return array;\n  };\n\n  const styles = {\n    container: {\n      position: 'relative',\n      top: 0,\n      minHeight: '50vh',\n    },\n    form: {\n      zIndex: 1,\n      position: 'absolute',\n      width: '100%',\n      top: '15%',\n      display: 'flex',\n      justifyContent: 'center',\n    },\n  };\n\n  return (\n    <div style={styles.container}>\n      <div style={styles.form}>\n        {form}\n      </div>\n      <div className=\"auth-area\">\n        <ul className=\"auth-circles\">\n          {boxes().map((i) => (\n            <li key={i} />\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\n// props validation\nAuthBackground.propTypes = {\n  form: PropTypes.element,\n};\nAuthBackground.defaultProps = {\n  form: undefined,\n};\n\nexport default AuthBackground;\n","/**\n * File exports register button\n */\nimport React from 'react';\nimport { Button, Grid } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\n\nconst RegisterButton = () => (\n  <Grid container spacing={2}>\n    <Grid item xs={6}>\n      <Link to=\"/register\" style={{ textDecoration: 'none' }}>\n        <Button\n          variant=\"contained\"\n          size=\"large\"\n          color=\"primary\"\n        >\n          Register\n        </Button>\n      </Link>\n    </Grid>\n  </Grid>\n);\n\nexport default RegisterButton;\n","/**\n * This file export header component for login page and register page.\n */\nimport React from 'react';\nimport { PropTypes } from 'prop-types';\nimport {\n  Navbar,\n  NavbarBrand,\n  Nav,\n} from 'reactstrap';\nimport { theme } from '../../landing-pages/theme';\n\nconst AuthHeader = ({ button }) => {\n  const styles = {\n    shadow: {\n      backgroundColor: 'white',\n      transition: 'top 0.5s',\n      boxShadow: '0px 14px 25px -20px rgba(0,0,0,0.1)',\n      width: '100%',\n      position: 'fixed',\n      left: 0,\n      top: 0,\n      zIndex: 10,\n    },\n  };\n\n  return (\n    <>\n      <Navbar id=\"navbar\" light expand=\"md\" style={styles.shadow} sticky=\"top\">\n        <NavbarBrand href=\"/\">\n          <h2 style={{ color: theme.dark }}>\n            RE\n            <b style={{ color: theme.primary }}>SEARCH</b>\n            IFY\n          </h2>\n        </NavbarBrand>\n        <Nav className=\"mr-auto\" navbar />\n        <Nav>\n          {button}\n        </Nav>\n      </Navbar>\n    </>\n  );\n};\n\n// props validation\nAuthHeader.propTypes = {\n  button: PropTypes.element.isRequired,\n};\n\nexport default AuthHeader;\n","/**\n * File exports the footer for auth pages.\n * Footer is set to fixed position (will stick at the bottom of the screen when you scroll)\n */\nimport React from 'react';\nimport { theme } from '../../landing-pages/theme';\nimport Copyright from '../../landing-pages/utils/Copyright';\n\nconst AuthFooter = () => {\n  const styles = {\n    bg: {\n      display: 'table',\n      background: theme.dark,\n      color: 'white',\n      minHeight: '50px',\n      height: '5vh',\n      width: '100%',\n      marginTop: '-5vh',\n      position: 'fixed',\n      left: 0,\n      bottom: 0,\n      zIndex: 10,\n    },\n    middle: {\n      display: 'table-cell',\n      verticalAlign: 'middle',\n    },\n  };\n\n  return (\n    <>\n      <div style={styles.bg}>\n        <div style={styles.middle}>\n          <Copyright invert />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default AuthFooter;\n","/**\n * This file exports layout of login/register page for Researchify.\n */\n\nimport React from 'react';\nimport { ThemeProvider } from '@material-ui/styles'; // eslint-disable-line import/no-extraneous-dependencies\nimport { createTheme } from '@material-ui/core/styles';\nimport { PropTypes } from 'prop-types';\nimport AuthHeader from './authComponents/AuthHeader';\nimport { theme as colour } from '../landing-pages/theme';\nimport AuthFooter from './authComponents/AuthFooter';\n\nconst AuthLayout = ({ button, children }) => {\n  // setting theme of the page\n  const theme = createTheme({\n    palette: {\n      primary: {\n        main: colour.primary, // dull blue\n      },\n      secondary: {\n        main: colour.secondary, // dull gold\n      },\n    },\n  });\n\n  return (\n    <>\n      <ThemeProvider theme={theme}>\n        <AuthHeader button={button} />\n        <div style={{ minHeight: 'calc(100vh - 70px)', marginTop: '70px' }}>\n          {children}\n        </div>\n        <AuthFooter />\n      </ThemeProvider>\n    </>\n  );\n};\n\n// props validation\nAuthLayout.propTypes = {\n  button: PropTypes.element.isRequired,\n  children: PropTypes.element,\n};\nAuthLayout.defaultProps = {\n  children: undefined,\n};\n\nexport default AuthLayout;\n","/**\n * This file exports an Auth component used to display sign-ins and sign-ups.\n */\nimport React from 'react';\nimport { Jumbotron, Form } from 'react-bootstrap';\nimport '../css/login-form.css';\nimport { useDispatch } from 'react-redux';\nimport { Button } from '@material-ui/core';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { login } from '../../../actions/auth';\n\nconst LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const teamInfoSchema = yup.object({\n    email: yup\n      .string()\n      .required('Please enter your email'),\n    password: yup\n      .string()\n      .required('Please enter your password'),\n  });\n\n  const authData = {\n    email: '',\n    password: '',\n  };\n\n  const submitForm = (values, { setFieldError }) => {\n    // error message could be passed in the setFieldError function to show error on the form\n    dispatch(login(values, setFieldError));\n  };\n\n  return (\n    <Jumbotron id=\"login-form-box\">\n      <h3 id=\"LoginHeading\">Log In</h3>\n      <hr />\n\n      <Formik\n        enableReinitialize\n        validationSchema={teamInfoSchema}\n        onSubmit={submitForm}\n        initialValues={authData}\n      >\n        {({\n          handleSubmit, handleChange, values, touched, errors,\n        }) => (\n          <Form noValidate onSubmit={handleSubmit}>\n            <Form.Group>\n              <Form.Label> Email address </Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"email\"\n                placeholder=\"Email\"\n                value={values.email}\n                onChange={handleChange}\n                isInvalid={touched.email && errors.email}\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                {errors.email}\n              </Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label> Password </Form.Label>\n              <Form.Control\n                type=\"password\"\n                name=\"password\"\n                placeholder=\"Password\"\n                value={values.password}\n                onChange={handleChange}\n                isInvalid={touched.password && errors.password}\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                {errors.password}\n              </Form.Control.Feedback>\n            </Form.Group>\n            <Button\n              id=\"loginButton\"\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"secondary\"\n              size=\"large\"\n              style={{ color: 'white' }}\n            >\n              Log in\n            </Button>\n          </Form>\n        )}\n      </Formik>\n    </Jumbotron>\n  );\n};\n\nexport default LoginForm;\n","/**\n * This file exports the login page of Researchify.\n */\n\nimport React from 'react';\nimport AuthBackground from './authComponents/AuthBackground';\nimport RegisterButton from './authComponents/RegisterButton';\nimport AuthLayout from './AuthLayout';\nimport LoginForm from './authComponents/LoginForm';\n\nconst LoginPage = () => (\n  <>\n    <AuthLayout button={RegisterButton()}>\n      <AuthBackground form={LoginForm()} />\n    </AuthLayout>\n  </>\n);\n\nexport default LoginPage;\n","/**\n * File exports login button.\n */\nimport React from 'react';\nimport { Button, Grid } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\n\nconst LoginButton = () => (\n  <Grid container spacing={2}>\n    <Grid item xs={6}>\n      <Link to=\"/login\" style={{ textDecoration: 'none' }}>\n        <Button\n          variant=\"contained\"\n          size=\"large\"\n          color=\"secondary\"\n          style={{ whiteSpace: 'nowrap', color: 'white' }}\n        >\n          Log In\n        </Button>\n      </Link>\n    </Grid>\n  </Grid>\n);\n\nexport default LoginButton;\n","/**\n * This file exports a Registration Form component used to display registration input.\n */\n\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport {\n  Col, Form, Jumbotron, OverlayTrigger, Popover,\n} from 'react-bootstrap';\nimport '../css/registration-form.css';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { BsQuestionCircle } from 'react-icons/bs';\nimport { Button } from '@material-ui/core';\nimport { createTeam } from '../../../actions/team';\n\n/**\n * Component that tell user the requirements of the password when hover.\n * @param props This variable is needed to pass placement position\n * @returns The tooltip/popover for password\n * TODO: Moved this into an individual file to reduce line numbers\n */\nconst StringPasswordHint = (props) => (\n  <Popover id=\"strong-pw-hint\" {...props}>\n    <Popover.Content>\n      Password must include:\n      <br />\n      {' '}\n      - 8-20 characters\n      <br />\n      {' '}\n      - At least 1 uppercase letter\n      <br />\n      {' '}\n      - At least 1 lowercase letter\n      <br />\n      {' '}\n      - At least 1 number\n      <br />\n      {' '}\n      - At least 1 symbol from @$!%*#?&\n    </Popover.Content>\n  </Popover>\n);\n\nconst RegistrationForm = () => {\n  const dispatch = useDispatch();\n\n  const teamInfoSchema = yup.object({\n    teamName: yup\n      .string()\n      .required('Team name is required')\n      .min(3, 'Must be at least 3 characters'),\n    orgName: yup\n      .string()\n      .required('Organization name is required')\n      .min(3, 'Must be at least 3 characters'),\n    email: yup\n      .string()\n      .email('Invalid email')\n      .required('Email is required'),\n    password: yup\n      .string()\n      .required('Please enter your password')\n      .matches(\n        /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/,\n        'Password is not strong enough',\n      ),\n    confirmedPassword: yup\n      .string()\n      .required('Please re-enter your password')\n      .oneOf([yup.ref('password'), null], 'Passwords must match'),\n  });\n\n  const initialTeamInfo = {\n    teamName: '',\n    orgName: '',\n    email: '',\n    password: '',\n    confirmedPassword: '',\n  };\n\n  const submitForm = (values, { setFieldError }) => {\n    const teamInfo = { ...values };\n    delete teamInfo.confirmedPassword;\n    // error message could be passed in the setFieldError function to show error on the form\n    dispatch(createTeam(teamInfo, setFieldError));\n  };\n\n  return (\n    <Jumbotron id=\"registration-form-box\">\n      <h3 id=\"signUpHeading\">Sign Up</h3>\n      <hr />\n      <Formik\n        enableReinitialize\n        validationSchema={teamInfoSchema}\n        onSubmit={submitForm}\n        initialValues={initialTeamInfo}\n      >\n        {({\n          handleSubmit, handleChange, values, touched, errors,\n        }) => (\n          <Form noValidate onSubmit={handleSubmit}>\n            <Form.Row>\n              <Form.Group as={Col} md=\"6\">\n                <Form.Label> Team name </Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  name=\"teamName\"\n                  placeholder=\"Team name\"\n                  value={values.teamName}\n                  onChange={handleChange}\n                  isInvalid={touched.teamName && errors.teamName}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.teamName}\n                </Form.Control.Feedback>\n              </Form.Group>\n              <Form.Group as={Col} md=\"6\">\n                <Form.Label> Organization name </Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  name=\"orgName\"\n                  placeholder=\"Organization name\"\n                  value={values.orgName}\n                  onChange={handleChange}\n                  isInvalid={touched.orgName && errors.orgName}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.orgName}\n                </Form.Control.Feedback>\n              </Form.Group>\n            </Form.Row>\n            <Form.Group>\n              <Form.Label> Email address </Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"email\"\n                placeholder=\"Email\"\n                value={values.email}\n                onChange={handleChange}\n                isInvalid={touched.email && errors.email}\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                {errors.email}\n              </Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>\n                Password\n                {'  '}\n                <OverlayTrigger trigger=\"hover\" placement=\"right\" overlay={StringPasswordHint}>\n                  <BsQuestionCircle style={{ color: 'grey' }} />\n                </OverlayTrigger>\n              </Form.Label>\n              <Form.Control\n                type=\"password\"\n                name=\"password\"\n                placeholder=\"Password\"\n                value={values.password}\n                onChange={handleChange}\n                isInvalid={touched.password && errors.password}\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                {errors.password}\n              </Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label> Confirm Password </Form.Label>\n              <Form.Control\n                type=\"password\"\n                name=\"confirmedPassword\"\n                placeholder=\"Password\"\n                value={values.confirmedPassword}\n                onChange={handleChange}\n                isInvalid={touched.confirmedPassword && errors.confirmedPassword}\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                {errors.confirmedPassword}\n              </Form.Control.Feedback>\n            </Form.Group>\n            <div>\n              <Button\n                id=\"submitButton\"\n                type=\"submit\"\n                variant=\"contained\"\n                color=\"primary\"\n                size=\"large\"\n              >\n                Sign Up\n              </Button>\n            </div>\n          </Form>\n        )}\n      </Formik>\n    </Jumbotron>\n  );\n};\n\nexport default RegistrationForm;\n","/**\n * This file exports the register page for Researchify.\n */\n\nimport React from 'react';\nimport AuthBackground from './authComponents/AuthBackground';\nimport LoginButton from './authComponents/LoginButton';\nimport AuthLayout from './AuthLayout';\nimport RegistrationForm from './authComponents/RegistrationForm';\n\nconst RegistrationPage = () => (\n  <>\n    <AuthLayout button={LoginButton()}>\n      <AuthBackground form={RegistrationForm()} />\n    </AuthLayout>\n  </>\n);\n\nexport default RegistrationPage;\n","/**\n * This file export all the public route\n */\n\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\n// Pages\nimport LandingPage from '../landing-pages/LandingPage';\nimport LoginPage from '../auth/LoginPage';\nimport RegistrationPage from '../auth/RegistrationPage';\n\nconst PublicRoute = () => (\n  <Switch>\n    <Route path=\"/\" exact component={LandingPage} />\n    <Route path=\"/register\" exact component={RegistrationPage} />\n    <Route path=\"/login\" exact component={LoginPage} />\n    {/*  If not login, any other route not stated above will be redirect home page */}\n    <Redirect to=\"/\" />\n  </Switch>\n);\n\nexport default PublicRoute;\n","/**\n * Root component.\n */\nimport React, { useEffect } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Toaster } from 'react-hot-toast';\nimport { useDispatch, useSelector } from 'react-redux';\nimport NotificationToaster from '../notification/NotificationToaster';\n\n// Pages\nimport PrivateRoute from './route/PrivateRoute';\nimport PublicRoute from './route/PublicRoute';\n\n// Function\nimport { authorizeJWT } from '../actions/auth';\n\nconst App = () => {\n  const { logIn } = useSelector((state) => state.auth);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (logIn) {\n      dispatch(authorizeJWT());\n    }\n  }, [dispatch, logIn]);\n\n  return (\n    <>\n      <Toaster position=\"bottom-center\" reverseOrder={false} />\n      <BrowserRouter>\n        <NotificationToaster />\n        { logIn ? <PrivateRoute /> : <PublicRoute /> }\n      </BrowserRouter>\n    </>\n  );\n};\n\nexport default App;\n","/**\n * This file exports our auth reducer that will handle all dispatched auth-related actions.\n */\nimport Cookies from 'js-cookie';\nimport {\n  LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAIL, LOG_OUT,\n} from '../actions/types';\n\nconst INITIAL_AUTH_STATE = {\n  logIn: !!Cookies.get('isLogin'),\n  loading: false,\n};\n\n/**\n * This authReducer will handle all auth-related actions\n *\n * @param state the state initialized with an object with an authData property set to null.\n * @param action the action that was dispatched, and now input into this reducer.\n * @returns updated state.\n */\nconst authReducer = (state = INITIAL_AUTH_STATE, action) => {\n  switch (action.type) {\n    case LOG_IN_REQUEST:\n      return { ...state, loading: true };\n    case LOG_IN_SUCCESS:\n      return { ...state, loading: false, logIn: true };\n    case LOG_IN_FAIL:\n      return { ...state, loading: false };\n    case LOG_OUT:\n      return { ...state, loading: false, logIn: false };\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n","import {\n  GET_PUBLICATIONS_BY_TEAM_ID,\n  CREATE_PUBLICATION,\n  UPDATE_PUBLICATION,\n  DELETE_PUBLICATION,\n  CREATE_BULK_PUBLICATIONS,\n  CHECK_PUBLICATIONS,\n  UNCHECK_PUBLICATIONS,\n  REVERT_HEADER_COLOR,\n  DELETE_BATCH_PUBLICATIONS,\n} from '../actions/types';\n\nconst initialState = {\n  loading: true,\n  teamPublications: [],\n  checkedPublications: [],\n};\n\nconst publicationsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_PUBLICATIONS_BY_TEAM_ID:\n      return { ...state, loading: false, teamPublications: action.payload };\n    case CREATE_PUBLICATION:\n      return {\n        ...state,\n        teamPublications: [...state.teamPublications, action.payload],\n      };\n    case UPDATE_PUBLICATION:\n      return {\n        ...state,\n        teamPublications: state.teamPublications.map((pub) => (pub._id === action.payload._id ? action.payload : pub)),\n      };\n    case DELETE_PUBLICATION:\n      return {\n        ...state,\n        teamPublications: state.teamPublications.filter(\n          (pub) => pub._id !== action.payload,\n        ),\n      };\n    case CREATE_BULK_PUBLICATIONS:\n      return {\n        ...state,\n        teamPublications: state.teamPublications.concat(action.payload),\n      };\n    case CHECK_PUBLICATIONS:\n      return {\n        ...state,\n        checkedPublications: state.checkedPublications.concat(action.payload),\n      };\n    case UNCHECK_PUBLICATIONS: {\n      const unchecks = action.payload;\n      return {\n        ...state,\n        checkedPublications: state.checkedPublications.filter((checkedPub) => !unchecks.find((uncheck) => uncheck === checkedPub)),\n      };\n    }\n    case DELETE_BATCH_PUBLICATIONS: {\n      const deletedPubIds = action.payload;\n      return {\n        ...state,\n        teamPublications: state.teamPublications.filter(\n          (pub) => !deletedPubIds.find((id) => id === pub._id),\n        ),\n      };\n    }\n    case REVERT_HEADER_COLOR: {\n      const updatedlist = state.teamPublications.map((pub) => {\n        delete pub.isNewlyAdded;\n        return pub;\n      });\n      return {\n        ...state,\n        teamPublications: updatedlist,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default publicationsReducer;\n","/**\n * This file exports our team reducer that will handle all dispatched team-related actions.\n */\nimport {\n  FETCH_TEAM_INFO,\n  LINK_TEAM_TWITTER,\n  UNLINK_TEAM_TWITTER,\n  GET_GH_ACCESS_TOKEN,\n  UPDATE_TEAM,\n  TEAM_ERROR,\n} from '../actions/types';\n\nimport { errorReducer } from '../notification/notificationReduxFunctions';\n\nconst INITIAL_TEAM_STATE = {\n  teamId: '', // todo: change to empty str when integrating\n  teamName: '',\n  orgName: '',\n  email: '',\n  profilePic: '',\n  twitterHandle: '',\n  themeId: '',\n  repoCreated: false,\n  error: null,\n  retrievedAccessToken: false,\n};\n\n/**\n * This teamReducer will handle all dispatched team-related actions, i.e. FETCH_TEAM_INFO, LINK_TEAM_TWITTER, and UNLINK_TEAM_TWITTER.\n *\n * @param state the state for a team in our application, initialized to INITIAL_TEAM_STATE.\n * @param action the action that was dispatched, and now input into this reducer.\n * @returns updated state.\n */\nconst teamReducer = (state = INITIAL_TEAM_STATE, action) => {\n  switch (action.type) {\n    case FETCH_TEAM_INFO:\n      return {\n        ...state,\n        teamId: action.payload._id,\n        email: action.payload.email,\n        teamName: action.payload.teamName,\n        orgName: action.payload.orgName,\n        twitterHandle: action.payload.twitterHandle,\n        profilePic: action.payload.profilePic,\n      };\n    case LINK_TEAM_TWITTER:\n      return {\n        ...state,\n        twitterHandle: action.payload,\n      };\n    case UNLINK_TEAM_TWITTER:\n      return { ...state, twitterHandle: action.payload };\n    case GET_GH_ACCESS_TOKEN:\n      return { ...state, retrievedAccessToken: true };\n    case UPDATE_TEAM:\n      return action.payload;\n    case TEAM_ERROR:\n      return {\n        ...errorReducer(state, action),\n      };\n    default:\n      return state;\n  }\n};\n\nexport default teamReducer;\n","import {\n  IMPORT_REQUEST,\n  IMPORT_SUCCESS,\n  IMPORT_FAIL,\n  IMPORT_CLEAR_STATE,\n  UPDATE_GSCHOLAR_ID,\n  IMPORT_END,\n  UPDATE_PUBLICATIONS_TO_IMPORT,\n  IMPORT_EMPTY,\n} from '../actions/types';\nimport { pageSize } from '../config/publications';\n\nconst initialState = {\n  loading: false,\n  importStatus: null,\n  publications: [],\n  gScholarId: '',\n  startFrom: 0,\n  reachedEnd: false,\n  publicationsToImport: [],\n};\n\nconst importedPublicationReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case IMPORT_REQUEST:\n      return { ...state, loading: true };\n    case IMPORT_SUCCESS:\n      return {\n        ...state,\n        importStatus: 'SUCCESS',\n        loading: false,\n        publications: state.publications.concat(action.payload),\n        startFrom: state.startFrom + pageSize,\n        publicationsToImport: state.publicationsToImport.concat(\n          new Array(action.payload.length).fill(true),\n        ),\n      };\n    case IMPORT_FAIL:\n      return {\n        ...state,\n        importStatus: 'FAIL',\n        loading: false,\n      };\n    case IMPORT_CLEAR_STATE:\n      return initialState;\n    case UPDATE_GSCHOLAR_ID:\n      return { ...state, gScholarId: action.payload };\n    case IMPORT_END:\n      return { ...state, reachedEnd: true, loading: false };\n    case UPDATE_PUBLICATIONS_TO_IMPORT:\n      return { ...state, publicationsToImport: action.payload };\n    case IMPORT_EMPTY:\n      return {\n        ...state,\n        importStatus: 'SUCCESS',\n        loading: false,\n        startFrom: state.startFrom + pageSize,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default importedPublicationReducer;\n","import {\n  GET_TEAM_MEMBERS_BY_TEAM_ID,\n  CREATE_TEAM_MEMBER,\n  UPDATE_TEAM_MEMBER,\n  DELETE_TEAM_MEMBER,\n} from '../actions/types';\n\nconst initialState = {\n  loading: true,\n  teamMembers: [],\n};\n\nconst teamMembersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_TEAM_MEMBERS_BY_TEAM_ID:\n      return { loading: false, teamMembers: action.payload };\n    case CREATE_TEAM_MEMBER:\n      return { ...state, teamMembers: [...state.teamMembers, action.payload] };\n    case UPDATE_TEAM_MEMBER:\n      return {\n        ...state,\n        teamMembers: state.teamMembers.map((member) => (member._id === action.payload._id ? action.payload : member)),\n      };\n    case DELETE_TEAM_MEMBER:\n      return {\n        ...state,\n        teamMembers: state.teamMembers.filter(\n          (member) => member._id !== action.payload,\n        ),\n      };\n    default:\n      return state;\n  }\n};\n\nexport default teamMembersReducer;\n","/**\n * This file exports our team reducer that will handle all dispatched team-related actions.\n */\nimport {\n  CREATE_WEBSITE,\n  ADD_WEBPAGE,\n  DELETE_WEBPAGE,\n  FETCH_WEBSITE_INFO,\n  UPDATE_PUBLICATION_OPTIONS,\n  UPDATE_WEBSITE_TITLE,\n  UPDATE_WEBSITE_TEMPLATE,\n} from '../actions/types';\n\nconst INITIAL_WEBSITE_STATE = {\n  url: '',\n  title: '',\n  pages: [],\n  publicationOptions: {},\n  template: { layout: '1', theme: 'light' },\n};\n\n/**\n * This websiteReducer will handle all dispatched client website-related actions, i.e. CREATE_WEBSITE and ADD_WEBPAGE.\n *\n * @param state the state for a client website in our application, initialized to INITIAL_WEBSITE_STATE.\n * @param action the action that was dispatched, and now input into this reducer.\n * @returns updated state.\n */\nconst websiteReducer = (state = INITIAL_WEBSITE_STATE, { payload, type }) => {\n  switch (type) {\n    case CREATE_WEBSITE:\n      return { ...state, url: payload.url, title: payload.title };\n    case ADD_WEBPAGE:\n      return { ...state, pages: [...state.pages, payload] };\n    case DELETE_WEBPAGE:\n      return {\n        ...state,\n        pages: state.pages.filter((page) => page !== payload),\n      };\n    case FETCH_WEBSITE_INFO:\n      return {\n        ...state,\n        loading: false,\n        url: payload.url ?? state.url,\n        title: payload.title ?? state.title,\n        pages: payload.pages ?? state.pages,\n        publicationOptions: payload.publicationOptions ?? state.publicationOptions,\n        template: payload.template ?? state.template,\n      };\n    case UPDATE_PUBLICATION_OPTIONS:\n      return { ...state, publicationOptions: payload };\n    case UPDATE_WEBSITE_TITLE:\n      return { ...state, title: payload };\n    case UPDATE_WEBSITE_TEMPLATE:\n      return { ...state, template: payload };\n    default:\n      return state;\n  }\n};\n\nexport default websiteReducer;\n","/**\n * This file exports our notification reducer that will handle all dispatched notification-related actions.\n */\nimport { CLEAR_NOTIFICATION, RESEARCHIFY_API_ERROR, SUCCESS_MESSAGE } from '../actions/types';\n\nimport { errorReducer } from '../notification/notificationReduxFunctions';\n\nconst INITIAL_NOTIFICATION_STATE = {\n  error: null,\n  success: null,\n};\n\nconst notificationReducer = (state = INITIAL_NOTIFICATION_STATE, action) => {\n  switch (action.type) {\n    case RESEARCHIFY_API_ERROR:\n      return {\n        ...errorReducer(state, action),\n        success: null,\n      };\n    case CLEAR_NOTIFICATION:\n      return INITIAL_NOTIFICATION_STATE;\n    case SUCCESS_MESSAGE:\n      return {\n        ...state,\n        error: null,\n        success: action.payload,\n      };\n    default:\n      return state;\n  }\n};\nexport default notificationReducer;\n","/**\n * This file exports website reducer that will handle all dispatched deploy-related actions.\n */\nimport { DEPLOY_SUCCESS, DEPLOY_FAIL, DEPLOY_REQUEST } from '../actions/types';\n\nconst INITIAL_DEPLOY_STATE = { loading: false };\n\nconst deployReducer = (state = INITIAL_DEPLOY_STATE, action) => {\n  switch (action.type) {\n    case DEPLOY_REQUEST:\n      return { loading: true };\n    case DEPLOY_SUCCESS:\n      return { loading: false };\n    case DEPLOY_FAIL:\n      return { loading: false };\n    default:\n      return state;\n  }\n};\n\nexport default deployReducer;\n","/**\n * This file exports achievements reducer that will handle all dispatched achievement-related actions.\n */\nimport {\n  GET_ACHIEVEMENTS_BY_TEAM_ID,\n  CREATE_ACHIEVEMENT,\n  UPDATE_ACHIEVEMENT,\n  DELETE_ACHIEVEMENT,\n} from '../actions/types';\n\nconst initialState = {\n  loading: true,\n  achievements: [],\n};\n\nconst achievementsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_ACHIEVEMENTS_BY_TEAM_ID:\n      return { loading: false, achievements: action.payload };\n    case CREATE_ACHIEVEMENT:\n      return { ...state, achievements: [...state.achievements, action.payload] };\n    case UPDATE_ACHIEVEMENT:\n      return {\n        ...state,\n        achievements: state.achievements.map((achievement) => (achievement._id === action.payload._id ? action.payload : achievement)),\n      };\n    case DELETE_ACHIEVEMENT:\n      return {\n        ...state,\n        achievements: state.achievements.filter(\n          (achievement) => achievement._id !== action.payload,\n        ),\n      };\n    default:\n      return state;\n  }\n};\n\nexport default achievementsReducer;\n","/**\n * This file exports homepage reducer that will handle all dispatched client-homepage-related actions.\n */\nimport { FETCH_HOMEPAGE, UPDATE_HOMEPAGE } from '../actions/types';\n\n// Variable in homepage (only `aboutUs` for now) is storing a list of string.\n// Each string in list is representing a paragraph.\n// This is for better handling the display/rendering of each Para.\nconst INITIAL_HOMEPAGE_STATE = {\n  aboutUs: [''],\n};\n\nconst homepageReducer = (state = INITIAL_HOMEPAGE_STATE, action) => {\n  switch (action.type) {\n    case FETCH_HOMEPAGE:\n      return { ...state, aboutUs: action.payload.aboutUs };\n    case UPDATE_HOMEPAGE:\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default homepageReducer;\n","/**\n * This index file will export combined reducers\n * When the logout action is dispatched, all reducers will be initialzed to thir initial state\n */\nimport { combineReducers } from 'redux';\n\nimport authReducer from './authReducer';\nimport publicationsReducer from './publicationsReducer';\nimport teamReducer from './teamReducer';\nimport importedPublicationsReducer from './importedPublicationsReducer';\nimport teamMembersReducer from './teamMembersReducer';\nimport websiteReducer from './websiteReducer';\nimport notificationReducer from './notificationReducer';\nimport deployReducer from './deployReducer';\nimport achievementsReducer from './achievementsReducer';\nimport homepageReducer from './homepageReducer';\nimport { LOG_OUT } from '../actions/types';\n\nconst appReducer = combineReducers({\n  notification: notificationReducer,\n  auth: authReducer,\n  publications: publicationsReducer,\n  team: teamReducer,\n  importedPublications: importedPublicationsReducer,\n  teamMember: teamMembersReducer,\n  deploy: deployReducer,\n  website: websiteReducer,\n  achievements: achievementsReducer,\n  homepage: homepageReducer,\n});\n\nconst rootReducer = (state, action) => {\n  if (action.type === LOG_OUT) {\n    return appReducer(undefined, action);\n  }\n  return appReducer(state, action);\n};\n\nexport default rootReducer;\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducers from './reducers';\n\n// for the redux devtools debugger\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunk)));\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css'; // for bootstrap css library\n\nimport App from './components/App';\n\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n","/**\n * This module contains the configurations relating to the options Researchify users have to create their website\n */\nconst availablePages = ['PUBLICATIONS', 'TEAM', 'ACHIEVEMENTS'];\n\nconst darkThemePlaceholder = 'dark';\nconst lightThemePlaceholder = 'light';\n\nmodule.exports = { availablePages, darkThemePlaceholder, lightThemePlaceholder };\n"],"sourceRoot":""}